

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 18 11:48:13 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1827 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0095                     	;# 
    97     0096                     	;# 
    98     0097                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009A                     	;# 
   102     009B                     	;# 
   103     009B                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     0111                     	;# 
   110     0112                     	;# 
   111     0113                     	;# 
   112     0114                     	;# 
   113     0115                     	;# 
   114     0116                     	;# 
   115     0117                     	;# 
   116     0118                     	;# 
   117     0119                     	;# 
   118     011A                     	;# 
   119     011B                     	;# 
   120     011D                     	;# 
   121     011E                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     0191                     	;# 
   125     0191                     	;# 
   126     0192                     	;# 
   127     0193                     	;# 
   128     0193                     	;# 
   129     0193                     	;# 
   130     0194                     	;# 
   131     0195                     	;# 
   132     0196                     	;# 
   133     0199                     	;# 
   134     019A                     	;# 
   135     019B                     	;# 
   136     019B                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019C                     	;# 
   140     019C                     	;# 
   141     019D                     	;# 
   142     019E                     	;# 
   143     019F                     	;# 
   144     020C                     	;# 
   145     020D                     	;# 
   146     0211                     	;# 
   147     0211                     	;# 
   148     0212                     	;# 
   149     0212                     	;# 
   150     0213                     	;# 
   151     0213                     	;# 
   152     0214                     	;# 
   153     0214                     	;# 
   154     0215                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0216                     	;# 
   158     0216                     	;# 
   159     0217                     	;# 
   160     0217                     	;# 
   161     0219                     	;# 
   162     021A                     	;# 
   163     021B                     	;# 
   164     021C                     	;# 
   165     021D                     	;# 
   166     021E                     	;# 
   167     021F                     	;# 
   168     0291                     	;# 
   169     0291                     	;# 
   170     0292                     	;# 
   171     0293                     	;# 
   172     0294                     	;# 
   173     0295                     	;# 
   174     0295                     	;# 
   175     0296                     	;# 
   176     0298                     	;# 
   177     0298                     	;# 
   178     0299                     	;# 
   179     029A                     	;# 
   180     029B                     	;# 
   181     029C                     	;# 
   182     029C                     	;# 
   183     029D                     	;# 
   184     029E                     	;# 
   185     029E                     	;# 
   186     0311                     	;# 
   187     0311                     	;# 
   188     0312                     	;# 
   189     0313                     	;# 
   190     0318                     	;# 
   191     0318                     	;# 
   192     0319                     	;# 
   193     031A                     	;# 
   194     0394                     	;# 
   195     0395                     	;# 
   196     0396                     	;# 
   197     039A                     	;# 
   198     039C                     	;# 
   199     039D                     	;# 
   200     039E                     	;# 
   201     039F                     	;# 
   202     0415                     	;# 
   203     0416                     	;# 
   204     0417                     	;# 
   205     041C                     	;# 
   206     041D                     	;# 
   207     041E                     	;# 
   208     0FE4                     	;# 
   209     0FE5                     	;# 
   210     0FE6                     	;# 
   211     0FE7                     	;# 
   212     0FE8                     	;# 
   213     0FE9                     	;# 
   214     0FEA                     	;# 
   215     0FEB                     	;# 
   216     0FED                     	;# 
   217     0FEE                     	;# 
   218     0FEF                     	;# 
   219     0000                     	;# 
   220     0001                     	;# 
   221     0002                     	;# 
   222     0003                     	;# 
   223     0004                     	;# 
   224     0005                     	;# 
   225     0006                     	;# 
   226     0007                     	;# 
   227     0008                     	;# 
   228     0009                     	;# 
   229     000A                     	;# 
   230     000B                     	;# 
   231     000C                     	;# 
   232     000D                     	;# 
   233     0011                     	;# 
   234     0012                     	;# 
   235     0013                     	;# 
   236     0014                     	;# 
   237     0015                     	;# 
   238     0016                     	;# 
   239     0016                     	;# 
   240     0017                     	;# 
   241     0018                     	;# 
   242     0019                     	;# 
   243     001A                     	;# 
   244     001B                     	;# 
   245     001C                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     008C                     	;# 
   249     008D                     	;# 
   250     0091                     	;# 
   251     0092                     	;# 
   252     0093                     	;# 
   253     0094                     	;# 
   254     0095                     	;# 
   255     0096                     	;# 
   256     0097                     	;# 
   257     0098                     	;# 
   258     0099                     	;# 
   259     009A                     	;# 
   260     009B                     	;# 
   261     009B                     	;# 
   262     009C                     	;# 
   263     009D                     	;# 
   264     009E                     	;# 
   265     010C                     	;# 
   266     010D                     	;# 
   267     0111                     	;# 
   268     0112                     	;# 
   269     0113                     	;# 
   270     0114                     	;# 
   271     0115                     	;# 
   272     0116                     	;# 
   273     0117                     	;# 
   274     0118                     	;# 
   275     0119                     	;# 
   276     011A                     	;# 
   277     011B                     	;# 
   278     011D                     	;# 
   279     011E                     	;# 
   280     018C                     	;# 
   281     018D                     	;# 
   282     0191                     	;# 
   283     0191                     	;# 
   284     0192                     	;# 
   285     0193                     	;# 
   286     0193                     	;# 
   287     0193                     	;# 
   288     0194                     	;# 
   289     0195                     	;# 
   290     0196                     	;# 
   291     0199                     	;# 
   292     019A                     	;# 
   293     019B                     	;# 
   294     019B                     	;# 
   295     019B                     	;# 
   296     019B                     	;# 
   297     019C                     	;# 
   298     019C                     	;# 
   299     019D                     	;# 
   300     019E                     	;# 
   301     019F                     	;# 
   302     020C                     	;# 
   303     020D                     	;# 
   304     0211                     	;# 
   305     0211                     	;# 
   306     0212                     	;# 
   307     0212                     	;# 
   308     0213                     	;# 
   309     0213                     	;# 
   310     0214                     	;# 
   311     0214                     	;# 
   312     0215                     	;# 
   313     0215                     	;# 
   314     0215                     	;# 
   315     0216                     	;# 
   316     0216                     	;# 
   317     0217                     	;# 
   318     0217                     	;# 
   319     0219                     	;# 
   320     021A                     	;# 
   321     021B                     	;# 
   322     021C                     	;# 
   323     021D                     	;# 
   324     021E                     	;# 
   325     021F                     	;# 
   326     0291                     	;# 
   327     0291                     	;# 
   328     0292                     	;# 
   329     0293                     	;# 
   330     0294                     	;# 
   331     0295                     	;# 
   332     0295                     	;# 
   333     0296                     	;# 
   334     0298                     	;# 
   335     0298                     	;# 
   336     0299                     	;# 
   337     029A                     	;# 
   338     029B                     	;# 
   339     029C                     	;# 
   340     029C                     	;# 
   341     029D                     	;# 
   342     029E                     	;# 
   343     029E                     	;# 
   344     0311                     	;# 
   345     0311                     	;# 
   346     0312                     	;# 
   347     0313                     	;# 
   348     0318                     	;# 
   349     0318                     	;# 
   350     0319                     	;# 
   351     031A                     	;# 
   352     0394                     	;# 
   353     0395                     	;# 
   354     0396                     	;# 
   355     039A                     	;# 
   356     039C                     	;# 
   357     039D                     	;# 
   358     039E                     	;# 
   359     039F                     	;# 
   360     0415                     	;# 
   361     0416                     	;# 
   362     0417                     	;# 
   363     041C                     	;# 
   364     041D                     	;# 
   365     041E                     	;# 
   366     0FE4                     	;# 
   367     0FE5                     	;# 
   368     0FE6                     	;# 
   369     0FE7                     	;# 
   370     0FE8                     	;# 
   371     0FE9                     	;# 
   372     0FEA                     	;# 
   373     0FEB                     	;# 
   374     0FED                     	;# 
   375     0FEE                     	;# 
   376     0FEF                     	;# 
   377     0000                     	;# 
   378     0001                     	;# 
   379     0002                     	;# 
   380     0003                     	;# 
   381     0004                     	;# 
   382     0005                     	;# 
   383     0006                     	;# 
   384     0007                     	;# 
   385     0008                     	;# 
   386     0009                     	;# 
   387     000A                     	;# 
   388     000B                     	;# 
   389     000C                     	;# 
   390     000D                     	;# 
   391     0011                     	;# 
   392     0012                     	;# 
   393     0013                     	;# 
   394     0014                     	;# 
   395     0015                     	;# 
   396     0016                     	;# 
   397     0016                     	;# 
   398     0017                     	;# 
   399     0018                     	;# 
   400     0019                     	;# 
   401     001A                     	;# 
   402     001B                     	;# 
   403     001C                     	;# 
   404     001E                     	;# 
   405     001F                     	;# 
   406     008C                     	;# 
   407     008D                     	;# 
   408     0091                     	;# 
   409     0092                     	;# 
   410     0093                     	;# 
   411     0094                     	;# 
   412     0095                     	;# 
   413     0096                     	;# 
   414     0097                     	;# 
   415     0098                     	;# 
   416     0099                     	;# 
   417     009A                     	;# 
   418     009B                     	;# 
   419     009B                     	;# 
   420     009C                     	;# 
   421     009D                     	;# 
   422     009E                     	;# 
   423     010C                     	;# 
   424     010D                     	;# 
   425     0111                     	;# 
   426     0112                     	;# 
   427     0113                     	;# 
   428     0114                     	;# 
   429     0115                     	;# 
   430     0116                     	;# 
   431     0117                     	;# 
   432     0118                     	;# 
   433     0119                     	;# 
   434     011A                     	;# 
   435     011B                     	;# 
   436     011D                     	;# 
   437     011E                     	;# 
   438     018C                     	;# 
   439     018D                     	;# 
   440     0191                     	;# 
   441     0191                     	;# 
   442     0192                     	;# 
   443     0193                     	;# 
   444     0193                     	;# 
   445     0193                     	;# 
   446     0194                     	;# 
   447     0195                     	;# 
   448     0196                     	;# 
   449     0199                     	;# 
   450     019A                     	;# 
   451     019B                     	;# 
   452     019B                     	;# 
   453     019B                     	;# 
   454     019B                     	;# 
   455     019C                     	;# 
   456     019C                     	;# 
   457     019D                     	;# 
   458     019E                     	;# 
   459     019F                     	;# 
   460     020C                     	;# 
   461     020D                     	;# 
   462     0211                     	;# 
   463     0211                     	;# 
   464     0212                     	;# 
   465     0212                     	;# 
   466     0213                     	;# 
   467     0213                     	;# 
   468     0214                     	;# 
   469     0214                     	;# 
   470     0215                     	;# 
   471     0215                     	;# 
   472     0215                     	;# 
   473     0216                     	;# 
   474     0216                     	;# 
   475     0217                     	;# 
   476     0217                     	;# 
   477     0219                     	;# 
   478     021A                     	;# 
   479     021B                     	;# 
   480     021C                     	;# 
   481     021D                     	;# 
   482     021E                     	;# 
   483     021F                     	;# 
   484     0291                     	;# 
   485     0291                     	;# 
   486     0292                     	;# 
   487     0293                     	;# 
   488     0294                     	;# 
   489     0295                     	;# 
   490     0295                     	;# 
   491     0296                     	;# 
   492     0298                     	;# 
   493     0298                     	;# 
   494     0299                     	;# 
   495     029A                     	;# 
   496     029B                     	;# 
   497     029C                     	;# 
   498     029C                     	;# 
   499     029D                     	;# 
   500     029E                     	;# 
   501     029E                     	;# 
   502     0311                     	;# 
   503     0311                     	;# 
   504     0312                     	;# 
   505     0313                     	;# 
   506     0318                     	;# 
   507     0318                     	;# 
   508     0319                     	;# 
   509     031A                     	;# 
   510     0394                     	;# 
   511     0395                     	;# 
   512     0396                     	;# 
   513     039A                     	;# 
   514     039C                     	;# 
   515     039D                     	;# 
   516     039E                     	;# 
   517     039F                     	;# 
   518     0415                     	;# 
   519     0416                     	;# 
   520     0417                     	;# 
   521     041C                     	;# 
   522     041D                     	;# 
   523     041E                     	;# 
   524     0FE4                     	;# 
   525     0FE5                     	;# 
   526     0FE6                     	;# 
   527     0FE7                     	;# 
   528     0FE8                     	;# 
   529     0FE9                     	;# 
   530     0FEA                     	;# 
   531     0FEB                     	;# 
   532     0FED                     	;# 
   533     0FEE                     	;# 
   534     0FEF                     	;# 
   535     0000                     	;# 
   536     0001                     	;# 
   537     0002                     	;# 
   538     0003                     	;# 
   539     0004                     	;# 
   540     0005                     	;# 
   541     0006                     	;# 
   542     0007                     	;# 
   543     0008                     	;# 
   544     0009                     	;# 
   545     000A                     	;# 
   546     000B                     	;# 
   547     000C                     	;# 
   548     000D                     	;# 
   549     0011                     	;# 
   550     0012                     	;# 
   551     0013                     	;# 
   552     0014                     	;# 
   553     0015                     	;# 
   554     0016                     	;# 
   555     0016                     	;# 
   556     0017                     	;# 
   557     0018                     	;# 
   558     0019                     	;# 
   559     001A                     	;# 
   560     001B                     	;# 
   561     001C                     	;# 
   562     001E                     	;# 
   563     001F                     	;# 
   564     008C                     	;# 
   565     008D                     	;# 
   566     0091                     	;# 
   567     0092                     	;# 
   568     0093                     	;# 
   569     0094                     	;# 
   570     0095                     	;# 
   571     0096                     	;# 
   572     0097                     	;# 
   573     0098                     	;# 
   574     0099                     	;# 
   575     009A                     	;# 
   576     009B                     	;# 
   577     009B                     	;# 
   578     009C                     	;# 
   579     009D                     	;# 
   580     009E                     	;# 
   581     010C                     	;# 
   582     010D                     	;# 
   583     0111                     	;# 
   584     0112                     	;# 
   585     0113                     	;# 
   586     0114                     	;# 
   587     0115                     	;# 
   588     0116                     	;# 
   589     0117                     	;# 
   590     0118                     	;# 
   591     0119                     	;# 
   592     011A                     	;# 
   593     011B                     	;# 
   594     011D                     	;# 
   595     011E                     	;# 
   596     018C                     	;# 
   597     018D                     	;# 
   598     0191                     	;# 
   599     0191                     	;# 
   600     0192                     	;# 
   601     0193                     	;# 
   602     0193                     	;# 
   603     0193                     	;# 
   604     0194                     	;# 
   605     0195                     	;# 
   606     0196                     	;# 
   607     0199                     	;# 
   608     019A                     	;# 
   609     019B                     	;# 
   610     019B                     	;# 
   611     019B                     	;# 
   612     019B                     	;# 
   613     019C                     	;# 
   614     019C                     	;# 
   615     019D                     	;# 
   616     019E                     	;# 
   617     019F                     	;# 
   618     020C                     	;# 
   619     020D                     	;# 
   620     0211                     	;# 
   621     0211                     	;# 
   622     0212                     	;# 
   623     0212                     	;# 
   624     0213                     	;# 
   625     0213                     	;# 
   626     0214                     	;# 
   627     0214                     	;# 
   628     0215                     	;# 
   629     0215                     	;# 
   630     0215                     	;# 
   631     0216                     	;# 
   632     0216                     	;# 
   633     0217                     	;# 
   634     0217                     	;# 
   635     0219                     	;# 
   636     021A                     	;# 
   637     021B                     	;# 
   638     021C                     	;# 
   639     021D                     	;# 
   640     021E                     	;# 
   641     021F                     	;# 
   642     0291                     	;# 
   643     0291                     	;# 
   644     0292                     	;# 
   645     0293                     	;# 
   646     0294                     	;# 
   647     0295                     	;# 
   648     0295                     	;# 
   649     0296                     	;# 
   650     0298                     	;# 
   651     0298                     	;# 
   652     0299                     	;# 
   653     029A                     	;# 
   654     029B                     	;# 
   655     029C                     	;# 
   656     029C                     	;# 
   657     029D                     	;# 
   658     029E                     	;# 
   659     029E                     	;# 
   660     0311                     	;# 
   661     0311                     	;# 
   662     0312                     	;# 
   663     0313                     	;# 
   664     0318                     	;# 
   665     0318                     	;# 
   666     0319                     	;# 
   667     031A                     	;# 
   668     0394                     	;# 
   669     0395                     	;# 
   670     0396                     	;# 
   671     039A                     	;# 
   672     039C                     	;# 
   673     039D                     	;# 
   674     039E                     	;# 
   675     039F                     	;# 
   676     0415                     	;# 
   677     0416                     	;# 
   678     0417                     	;# 
   679     041C                     	;# 
   680     041D                     	;# 
   681     041E                     	;# 
   682     0FE4                     	;# 
   683     0FE5                     	;# 
   684     0FE6                     	;# 
   685     0FE7                     	;# 
   686     0FE8                     	;# 
   687     0FE9                     	;# 
   688     0FEA                     	;# 
   689     0FEB                     	;# 
   690     0FED                     	;# 
   691     0FEE                     	;# 
   692     0FEF                     	;# 
   693     000B                     _INTCONbits	set	11
   694     0011                     _PIR1bits	set	17
   695     0091                     _PIE1bits	set	145
   696     008D                     _TRISBbits	set	141
   697     008C                     _TRISAbits	set	140
   698     0099                     _OSCCONbits	set	153
   699     0097                     _WDTCONbits	set	151
   700     009E                     _ADCON1bits	set	158
   701     009B                     _ADRESL	set	155
   702     009C                     _ADRESH	set	156
   703     009D                     _ADCON0bits	set	157
   704     011E                     _APFCON1bits	set	286
   705     010D                     _LATBbits	set	269
   706     010C                     _LATAbits	set	268
   707     0117                     _FVRCONbits	set	279
   708     019D                     _RCSTAbits	set	413
   709     019B                     _SPBRG	set	411
   710     019F                     _BAUDCONbits	set	415
   711     018D                     _ANSELBbits	set	397
   712     018C                     _ANSELAbits	set	396
   713     019E                     _TXSTAbits	set	414
   714     019A                     _TXREG	set	410
   715                           
   716                           	psect	cinit
   717     004B                     start_initialization:	
   718                           ; #config settings
   719                           
   720     004B                     __initialization:
   721                           
   722                           ; Clear objects allocated to BANK0
   723     004B  304A               	movlw	low __pbssBANK0
   724     004C  0084               	movwf	4
   725     004D  3000               	movlw	high __pbssBANK0
   726     004E  0085               	movwf	5
   727     004F  300D               	movlw	13
   728     0050  3183  233A  3180   	fcall	clear_ram0
   729     0053                     end_of_initialization:	
   730                           ;End of C runtime variable initialization code
   731                           
   732     0053                     __end_of__initialization:
   733     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   734     0054  0020               	movlb	0
   735     0055  3183  2B28         	ljmp	_main	;jump to C main() function
   736                           
   737                           	psect	bssBANK0
   738     004A                     __pbssBANK0:
   739     004A                     ASCII_Con@r:
   740     004A                     	ds	7
   741     0051                     BinTOBcd@r:
   742     0051                     	ds	6
   743                           
   744                           	psect	clrtext
   745     033A                     clear_ram0:	
   746                           ;	Called with FSR0 containing the base address, and
   747                           ;	WREG with the size to clear
   748                           
   749     033A  0064               	clrwdt	;clear the watchdog before getting into this loop
   750     033B                     clrloop0:
   751     033B  0180               	clrf	0	;clear RAM location pointed to by FSR
   752     033C  3101               	addfsr 0,1
   753     033D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   754     033E  2B3B               	goto	clrloop0	;have we reached the end yet?
   755     033F  3400               	retlw	0	;all done for this memory range, return
   756                           
   757                           	psect	cstackBANK1
   758     0000                     __pcstackBANK1:
   759     0000                     ??_init_IO:
   760     0000                     ??_readADC:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0000                     ??_init_UART:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0000                     ??_main:	
   767                           ; 1 bytes @ 0x0
   768                           
   769                           
   770                           	psect	cstackCOMMON
   771     0070                     __pcstackCOMMON:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_init_IO:
   775     0070                     ?_readADC:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0070                     ?_UART_print:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ?_ASCII_Con:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ?_init_UART:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ?_main:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?_INT_TMR0:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ?_UART_write:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ??_UART_write:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ?___lmul:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     UART_write@c:	
   803                           ; 4 bytes @ 0x0
   804                           
   805     0070                     ASCII_Con@a:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ___lmul@multiplier:	
   809                           ; 2 bytes @ 0x0
   810                           
   811                           
   812                           ; 4 bytes @ 0x0
   813     0070                     	ds	1
   814     0071                     ??_UART_print:
   815                           
   816                           ; 1 bytes @ 0x1
   817     0071                     	ds	1
   818     0072                     UART_print@cadena:
   819     0072                     ASCII_Con@b:	
   820                           ; 1 bytes @ 0x2
   821                           
   822                           
   823                           ; 2 bytes @ 0x2
   824     0072                     	ds	2
   825     0074                     ASCII_Con@c:
   826     0074                     ___lmul@multiplicand:	
   827                           ; 2 bytes @ 0x4
   828                           
   829                           
   830                           ; 4 bytes @ 0x4
   831     0074                     	ds	2
   832     0076                     ??_ASCII_Con:
   833                           
   834                           ; 1 bytes @ 0x6
   835     0076                     	ds	2
   836     0078                     ??___lmul:
   837     0078                     ___lmul@product:	
   838                           ; 1 bytes @ 0x8
   839                           
   840                           
   841                           ; 4 bytes @ 0x8
   842     0078                     	ds	4
   843     007C                     ??___aldiv:
   844                           
   845                           ; 1 bytes @ 0xC
   846     007C                     	ds	1
   847     007D                     ??___almod:
   848                           
   849                           ; 1 bytes @ 0xD
   850     007D                     	ds	1
   851     007E                     ??_BinTOBcd:
   852                           
   853                           	psect	cstackBANK0
   854     0020                     __pcstackBANK0:	
   855                           ; 1 bytes @ 0xE
   856                           
   857     0020                     ?___aldiv:
   858     0020                     ___aldiv@divisor:	
   859                           ; 4 bytes @ 0x0
   860                           
   861                           
   862                           ; 4 bytes @ 0x0
   863     0020                     	ds	4
   864     0024                     ___aldiv@dividend:
   865                           
   866                           ; 4 bytes @ 0x4
   867     0024                     	ds	4
   868     0028                     ___aldiv@counter:
   869                           
   870                           ; 1 bytes @ 0x8
   871     0028                     	ds	1
   872     0029                     ___aldiv@sign:
   873                           
   874                           ; 1 bytes @ 0x9
   875     0029                     	ds	1
   876     002A                     ___aldiv@quotient:
   877                           
   878                           ; 4 bytes @ 0xA
   879     002A                     	ds	4
   880     002E                     ?___almod:
   881     002E                     ___almod@divisor:	
   882                           ; 4 bytes @ 0xE
   883                           
   884                           
   885                           ; 4 bytes @ 0xE
   886     002E                     	ds	4
   887     0032                     ___almod@dividend:
   888                           
   889                           ; 4 bytes @ 0x12
   890     0032                     	ds	4
   891     0036                     ___almod@counter:
   892                           
   893                           ; 1 bytes @ 0x16
   894     0036                     	ds	1
   895     0037                     ___almod@sign:
   896                           
   897                           ; 1 bytes @ 0x17
   898     0037                     	ds	1
   899     0038                     ?_BinTOBcd:
   900     0038                     BinTOBcd@iADC:	
   901                           ; 1 bytes @ 0x18
   902                           
   903                           
   904                           ; 4 bytes @ 0x18
   905     0038                     	ds	4
   906     003C                     _BinTOBcd$1337:
   907                           
   908                           ; 4 bytes @ 0x1C
   909     003C                     	ds	4
   910     0040                     _BinTOBcd$1336:
   911                           
   912                           ; 4 bytes @ 0x20
   913     0040                     	ds	4
   914     0044                     ??_INT_TMR0:
   915                           
   916                           ; 1 bytes @ 0x24
   917     0044                     	ds	5
   918     0049                     INT_TMR0@B:
   919                           
   920                           ; 1 bytes @ 0x29
   921     0049                     	ds	1
   922                           
   923                           	psect	maintext
   924     0328                     __pmaintext:	
   925 ;;
   926 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   927 ;;
   928 ;; *************** function _main *****************
   929 ;; Defined at:
   930 ;;		line 16 in file "main.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0, pclath, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : B1F/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   944 ;;      Params:         0       0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0       0
   946 ;;      Temps:          0       0       0       0       0       0
   947 ;;      Totals:         0       0       0       0       0       0
   948 ;;Total ram usage:        0 bytes
   949 ;; Hardware stack levels required when called: 5
   950 ;; This function calls:
   951 ;;		_init_IO
   952 ;;		_readADC
   953 ;; This function is called by:
   954 ;;		Startup code after reset
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958     0328                     _main:	
   959                           ;psect for function _main
   960                           
   961     0328                     l1189:	
   962                           ;incstack = 0
   963                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   964                           
   965                           
   966                           ;main.c: 17:     init_IO();
   967     0328  3182  2266  3183   	fcall	_init_IO
   968     032B                     l23:	
   969                           ;main.c: 20:     while(1)
   970                           
   971                           
   972                           ;main.c: 21:     {;main.c: 22:         readADC();
   973     032B  3183  231D  3183   	fcall	_readADC
   974     032E  2B2B               	goto	l23
   975     032F  3180  2849         	ljmp	start
   976     0331                     __end_of_main:
   977                           
   978                           	psect	text1
   979     031D                     __ptext1:	
   980 ;; *************** function _readADC *****************
   981 ;; Defined at:
   982 ;;		line 24 in file "funtions.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   996 ;;      Params:         0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 3
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010     031D                     _readADC:	
  1011                           ;psect for function _readADC
  1012                           
  1013     031D                     l1147:	
  1014                           ;incstack = 0
  1015                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1016                           
  1017                           
  1018                           ;funtions.c: 26:     ADCON0bits.ADON = 1;
  1019     031D  0021               	movlb	1	; select bank1
  1020     031E  141D               	bsf	29,0	;volatile
  1021     031F                     l1149:
  1022                           
  1023                           ;funtions.c: 28:     ADCON1bits.ADCS = 0b001;
  1024     031F  081E               	movf	30,w	;volatile
  1025     0320  398F               	andlw	-113
  1026     0321  3810               	iorlw	16
  1027     0322  009E               	movwf	30	;volatile
  1028                           
  1029                           ;funtions.c: 30:     ADCON0bits.CHS = 0b00000;
  1030     0323  3083               	movlw	-125
  1031     0324  059D               	andwf	29,f	;volatile
  1032     0325                     l1151:
  1033                           
  1034                           ;funtions.c: 32:     ADCON1bits.ADFM = 1;
  1035     0325  179E               	bsf	30,7	;volatile
  1036     0326                     l1153:
  1037                           
  1038                           ;funtions.c: 34:     ADCON0bits.GO_nDONE = 1;
  1039     0326  149D               	bsf	29,1	;volatile
  1040     0327                     l50:
  1041     0327  0008               	return
  1042     0328                     __end_of_readADC:
  1043                           
  1044                           	psect	text2
  1045     0266                     __ptext2:	
  1046 ;; *************** function _init_IO *****************
  1047 ;; Defined at:
  1048 ;;		line 4 in file "init.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, pclath, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1062 ;;      Params:         0       0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 4
  1069 ;; This function calls:
  1070 ;;		_init_UART
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076     0266                     _init_IO:	
  1077                           ;psect for function _init_IO
  1078                           
  1079     0266                     l1055:	
  1080                           ;incstack = 0
  1081                           ; Regs used in _init_IO: [wreg+status,2+status,0+pclath+cstack]
  1082                           
  1083                           
  1084                           ;init.c: 7:     OSCCONbits.SCS = 0;
  1085     0266  30FC               	movlw	-4
  1086     0267  0021               	movlb	1	; select bank1
  1087     0268  0599               	andwf	25,f	;volatile
  1088                           
  1089                           ;init.c: 8:     OSCCONbits.IRCF = 0b1101;
  1090     0269  0819               	movf	25,w	;volatile
  1091     026A  3987               	andlw	-121
  1092     026B  3868               	iorlw	104
  1093     026C  0099               	movwf	25	;volatile
  1094     026D                     l1057:
  1095                           
  1096                           ;init.c: 14:     ANSELAbits.ANSA0 = 1;
  1097     026D  0023               	movlb	3	; select bank3
  1098     026E  140C               	bsf	12,0	;volatile
  1099     026F                     l1059:
  1100                           
  1101                           ;init.c: 15:     ANSELAbits.ANSA1 = 0;
  1102     026F  108C               	bcf	12,1	;volatile
  1103     0270                     l1061:
  1104                           
  1105                           ;init.c: 16:     ANSELAbits.ANSA2 = 0;
  1106     0270  110C               	bcf	12,2	;volatile
  1107     0271                     l1063:
  1108                           
  1109                           ;init.c: 17:     ANSELAbits.ANSA3 = 0;
  1110     0271  118C               	bcf	12,3	;volatile
  1111     0272                     l1065:
  1112                           
  1113                           ;init.c: 18:     ANSELAbits.ANSA4 = 0;
  1114     0272  120C               	bcf	12,4	;volatile
  1115     0273                     l1067:
  1116                           
  1117                           ;init.c: 21:     TRISAbits.TRISA0 = 1;
  1118     0273  0021               	movlb	1	; select bank1
  1119     0274  140C               	bsf	12,0	;volatile
  1120     0275                     l1069:
  1121                           
  1122                           ;init.c: 22:     TRISAbits.TRISA1 = 0;
  1123     0275  108C               	bcf	12,1	;volatile
  1124     0276                     l1071:
  1125                           
  1126                           ;init.c: 23:     TRISAbits.TRISA2 = 0;
  1127     0276  110C               	bcf	12,2	;volatile
  1128     0277                     l1073:
  1129                           
  1130                           ;init.c: 24:     TRISAbits.TRISA3 = 0;
  1131     0277  118C               	bcf	12,3	;volatile
  1132     0278                     l1075:
  1133                           
  1134                           ;init.c: 25:     TRISAbits.TRISA4 = 0;
  1135     0278  120C               	bcf	12,4	;volatile
  1136     0279                     l1077:
  1137                           
  1138                           ;init.c: 26:     TRISAbits.TRISA6 = 0;
  1139     0279  130C               	bcf	12,6	;volatile
  1140     027A                     l1079:
  1141                           
  1142                           ;init.c: 27:     TRISAbits.TRISA7 = 0;
  1143     027A  138C               	bcf	12,7	;volatile
  1144     027B                     l1081:
  1145                           
  1146                           ;init.c: 31:     ANSELBbits.ANSB1 = 0;
  1147     027B  0023               	movlb	3	; select bank3
  1148     027C  108D               	bcf	13,1	;volatile
  1149     027D                     l1083:
  1150                           
  1151                           ;init.c: 32:     ANSELBbits.ANSB2 = 0;
  1152     027D  110D               	bcf	13,2	;volatile
  1153     027E                     l1085:
  1154                           
  1155                           ;init.c: 33:     ANSELBbits.ANSB3 = 0;
  1156     027E  118D               	bcf	13,3	;volatile
  1157     027F                     l1087:
  1158                           
  1159                           ;init.c: 34:     ANSELBbits.ANSB4 = 0;
  1160     027F  120D               	bcf	13,4	;volatile
  1161     0280                     l1089:
  1162                           
  1163                           ;init.c: 35:     ANSELBbits.ANSB5 = 0;
  1164     0280  128D               	bcf	13,5	;volatile
  1165     0281                     l1091:
  1166                           
  1167                           ;init.c: 36:     ANSELBbits.ANSB6 = 0;
  1168     0281  130D               	bcf	13,6	;volatile
  1169     0282                     l1093:
  1170                           
  1171                           ;init.c: 37:     ANSELBbits.ANSB7 = 0;
  1172     0282  138D               	bcf	13,7	;volatile
  1173     0283                     l1095:
  1174                           
  1175                           ;init.c: 40:     TRISBbits.TRISB0 = 0;
  1176     0283  0021               	movlb	1	; select bank1
  1177     0284  100D               	bcf	13,0	;volatile
  1178     0285                     l1097:
  1179                           
  1180                           ;init.c: 41:     TRISBbits.TRISB1 = 1;
  1181     0285  148D               	bsf	13,1	;volatile
  1182     0286                     l1099:
  1183                           
  1184                           ;init.c: 42:     TRISBbits.TRISB2 = 0;
  1185     0286  110D               	bcf	13,2	;volatile
  1186     0287                     l1101:
  1187                           
  1188                           ;init.c: 43:     TRISBbits.TRISB3 = 0;
  1189     0287  118D               	bcf	13,3	;volatile
  1190     0288                     l1103:
  1191                           
  1192                           ;init.c: 44:     TRISBbits.TRISB4 = 0;
  1193     0288  120D               	bcf	13,4	;volatile
  1194     0289                     l1105:
  1195                           
  1196                           ;init.c: 45:     TRISBbits.TRISB5 = 0;
  1197     0289  128D               	bcf	13,5	;volatile
  1198     028A                     l1107:
  1199                           
  1200                           ;init.c: 46:     TRISBbits.TRISB6 = 0;
  1201     028A  130D               	bcf	13,6	;volatile
  1202     028B                     l1109:
  1203                           
  1204                           ;init.c: 47:     TRISBbits.TRISB7 = 0;
  1205     028B  138D               	bcf	13,7	;volatile
  1206     028C                     l1111:
  1207                           
  1208                           ;init.c: 50:     ADCON0bits.ADON = 0;
  1209     028C  101D               	bcf	29,0	;volatile
  1210     028D                     l1113:
  1211                           
  1212                           ;init.c: 51:     FVRCONbits.FVREN = 1;
  1213     028D  0022               	movlb	2	; select bank2
  1214     028E  1797               	bsf	23,7	;volatile
  1215                           
  1216                           ;init.c: 52:     FVRCONbits.ADFVR = 0b11;
  1217     028F  3003               	movlw	3
  1218     0290  0497               	iorwf	23,f	;volatile
  1219     0291                     l1115:
  1220                           
  1221                           ;init.c: 53:     ADCON1bits.ADNREF = 0;
  1222     0291  0021               	movlb	1	; select bank1
  1223     0292  111E               	bcf	30,2	;volatile
  1224                           
  1225                           ;init.c: 54:     ADCON1bits.ADPREF = 0b11;
  1226     0293  3003               	movlw	3
  1227     0294  049E               	iorwf	30,f	;volatile
  1228     0295                     l1117:
  1229                           
  1230                           ;init.c: 55:     PIE1bits.ADIE = 1;
  1231     0295  1711               	bsf	17,6	;volatile
  1232     0296                     l1119:
  1233                           
  1234                           ;init.c: 56:     PIR1bits.ADIF = 0;
  1235     0296  0020               	movlb	0	; select bank0
  1236     0297  1311               	bcf	17,6	;volatile
  1237                           
  1238                           ;init.c: 60:     WDTCONbits.WDTPS = 0b01010;
  1239     0298  0021               	movlb	1	; select bank1
  1240     0299  0817               	movf	23,w	;volatile
  1241     029A  39C1               	andlw	-63
  1242     029B  3814               	iorlw	20
  1243     029C  0097               	movwf	23	;volatile
  1244     029D                     l1121:
  1245                           
  1246                           ;init.c: 64:     LATAbits.LATA1 = 0;
  1247     029D  0022               	movlb	2	; select bank2
  1248     029E  108C               	bcf	12,1	;volatile
  1249     029F                     l1123:
  1250                           
  1251                           ;init.c: 65:     LATAbits.LATA2 = 0;
  1252     029F  110C               	bcf	12,2	;volatile
  1253     02A0                     l1125:
  1254                           
  1255                           ;init.c: 66:     LATAbits.LATA3 = 0;
  1256     02A0  118C               	bcf	12,3	;volatile
  1257     02A1                     l1127:
  1258                           
  1259                           ;init.c: 67:     LATAbits.LATA4 = 0;
  1260     02A1  120C               	bcf	12,4	;volatile
  1261     02A2                     l1129:
  1262                           
  1263                           ;init.c: 68:     LATAbits.LATA6 = 0;
  1264     02A2  130C               	bcf	12,6	;volatile
  1265     02A3                     l1131:
  1266                           
  1267                           ;init.c: 69:     LATAbits.LATA7 = 0;
  1268     02A3  138C               	bcf	12,7	;volatile
  1269     02A4                     l1133:
  1270                           
  1271                           ;init.c: 70:     LATBbits.LATB0 = 0;
  1272     02A4  100D               	bcf	13,0	;volatile
  1273     02A5                     l1135:
  1274                           
  1275                           ;init.c: 71:     LATBbits.LATB3 = 0;
  1276     02A5  118D               	bcf	13,3	;volatile
  1277     02A6                     l1137:
  1278                           
  1279                           ;init.c: 72:     LATBbits.LATB4 = 0;
  1280     02A6  120D               	bcf	13,4	;volatile
  1281     02A7                     l1139:
  1282                           
  1283                           ;init.c: 73:     LATBbits.LATB5 = 0;
  1284     02A7  128D               	bcf	13,5	;volatile
  1285     02A8                     l1141:
  1286                           
  1287                           ;init.c: 75:     INTCONbits.GIE = 1;
  1288     02A8  178B               	bsf	11,7	;volatile
  1289     02A9                     l1143:
  1290                           
  1291                           ;init.c: 76:     INTCONbits.PEIE = 1;
  1292     02A9  170B               	bsf	11,6	;volatile
  1293     02AA                     l1145:
  1294                           
  1295                           ;init.c: 78:     init_UART();
  1296     02AA  3183  2310  3182   	fcall	_init_UART
  1297     02AD                     l110:
  1298     02AD  0008               	return
  1299     02AE                     __end_of_init_IO:
  1300                           
  1301                           	psect	text3
  1302     0310                     __ptext3:	
  1303 ;; *************** function _init_UART *****************
  1304 ;; Defined at:
  1305 ;;		line 82 in file "init.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1319 ;;      Params:         0       0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 3
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_init_IO
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333     0310                     _init_UART:	
  1334                           ;psect for function _init_UART
  1335                           
  1336     0310                     l963:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _init_UART: [wreg]
  1339                           
  1340                           
  1341                           ;init.c: 84:     APFCON1bits.TXCKSEL = 0;
  1342     0310  0022               	movlb	2	; select bank2
  1343     0311  101E               	bcf	30,0	;volatile
  1344                           
  1345                           ;init.c: 85:     TXSTAbits.TRMT = 1;
  1346     0312  0023               	movlb	3	; select bank3
  1347     0313  149E               	bsf	30,1	;volatile
  1348                           
  1349                           ;init.c: 86:     TXSTAbits.TXEN = 1;
  1350     0314  169E               	bsf	30,5	;volatile
  1351                           
  1352                           ;init.c: 87:     BAUDCONbits.RCIDL = 1;
  1353     0315  171F               	bsf	31,6	;volatile
  1354                           
  1355                           ;init.c: 90:     TXSTAbits.SYNC = 0;
  1356     0316  121E               	bcf	30,4	;volatile
  1357                           
  1358                           ;init.c: 91:     TXSTAbits.TX9 = 0;
  1359     0317  131E               	bcf	30,6	;volatile
  1360                           
  1361                           ;init.c: 92:     TXSTAbits.BRGH = 1;
  1362     0318  151E               	bsf	30,2	;volatile
  1363     0319                     l965:
  1364                           
  1365                           ;init.c: 93:     SPBRG = 25;
  1366     0319  3019               	movlw	25
  1367     031A  009B               	movwf	27	;volatile
  1368     031B                     l967:
  1369                           
  1370                           ;init.c: 94:     RCSTAbits.SPEN = 1;
  1371     031B  179D               	bsf	29,7	;volatile
  1372     031C                     l113:
  1373     031C  0008               	return
  1374     031D                     __end_of_init_UART:
  1375                           
  1376                           	psect	intentry
  1377     0004                     __pintentry:	
  1378 ;; *************** function _INT_TMR0 *****************
  1379 ;; Defined at:
  1380 ;;		line 29 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  B               1   41[BANK0 ] PTR int 
  1385 ;;		 -> BinTOBcd@r(6), 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1395 ;;      Params:         0       0       0       0       0       0
  1396 ;;      Locals:         0       1       0       0       0       0
  1397 ;;      Temps:          0       5       0       0       0       0
  1398 ;;      Totals:         0       6       0       0       0       0
  1399 ;;Total ram usage:        6 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 2
  1402 ;; This function calls:
  1403 ;;		_ASCII_Con
  1404 ;;		_BinTOBcd
  1405 ;;		_UART_print
  1406 ;; This function is called by:
  1407 ;;		Interrupt level 1
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411     0004                     _INT_TMR0:
  1412                           
  1413                           ;incstack = 0
  1414     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1415                           
  1416                           ; Regs used in _INT_TMR0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1417     0005  3180               	pagesel	$
  1418     0006                     i1l1191:
  1419                           
  1420                           ;main.c: 33:     if(PIR1bits.ADIF == 1){
  1421     0006  0020               	movlb	0	; select bank0
  1422     0007  1F11               	btfss	17,6	;volatile
  1423     0008  280A               	goto	u52_21
  1424     0009  280B               	goto	u52_20
  1425     000A                     u52_21:
  1426     000A  2847               	goto	i1l32
  1427     000B                     u52_20:
  1428     000B                     i1l1193:
  1429                           
  1430                           ;main.c: 35:         PIR1bits.ADIF = 0;
  1431     000B  1311               	bcf	17,6	;volatile
  1432                           
  1433                           ;main.c: 36:         ADCON0bits.ADON = 0;
  1434     000C  0021               	movlb	1	; select bank1
  1435     000D  101D               	bcf	29,0	;volatile
  1436     000E                     i1l1195:
  1437                           
  1438                           ;main.c: 38:         int *B = BinTOBcd(((ADRESH<<8) + ADRESL));
  1439     000E  081B               	movf	27,w	;volatile
  1440     000F  0020               	movlb	0	; select bank0
  1441     0010  00C4               	movwf	??_INT_TMR0
  1442     0011  01C5               	clrf	??_INT_TMR0+1
  1443     0012  0021               	movlb	1	; select bank1
  1444     0013  081C               	movf	28,w	;volatile
  1445     0014  0020               	movlb	0	; select bank0
  1446     0015  00C6               	movwf	??_INT_TMR0+2
  1447     0016  01C7               	clrf	??_INT_TMR0+3
  1448     0017  0846               	movf	??_INT_TMR0+2,w
  1449     0018  00C7               	movwf	??_INT_TMR0+3
  1450     0019  01C6               	clrf	??_INT_TMR0+2
  1451     001A  0844               	movf	??_INT_TMR0,w
  1452     001B  0746               	addwf	??_INT_TMR0+2,w
  1453     001C  00B8               	movwf	BinTOBcd@iADC
  1454     001D  0845               	movf	??_INT_TMR0+1,w
  1455     001E  3D47               	addwfc	??_INT_TMR0+3,w
  1456     001F  00B9               	movwf	BinTOBcd@iADC+1
  1457     0020  01BA               	clrf	BinTOBcd@iADC+2
  1458     0021  1BB9               	btfsc	BinTOBcd@iADC+1,7
  1459     0022  03BA               	decf	BinTOBcd@iADC+2,f
  1460     0023  083A               	movf	BinTOBcd@iADC+2,w
  1461     0024  00BB               	movwf	BinTOBcd@iADC+3
  1462     0025  3180  2057  3180   	fcall	_BinTOBcd
  1463     0028  0020               	movlb	0	; select bank0
  1464     0029  00C9               	movwf	INT_TMR0@B
  1465     002A                     i1l1197:
  1466                           
  1467                           ;main.c: 41:         UART_print(ASCII_Con(B[2], B[1], B[0]));
  1468     002A  0849               	movf	INT_TMR0@B,w
  1469     002B  3E04               	addlw	4
  1470     002C  0086               	movwf	6
  1471     002D  0187               	clrf	7
  1472     002E  3F40               	moviw [0]fsr1
  1473     002F  00F0               	movwf	ASCII_Con@a
  1474     0030  3F41               	moviw [1]fsr1
  1475     0031  00F1               	movwf	ASCII_Con@a+1
  1476     0032  0849               	movf	INT_TMR0@B,w
  1477     0033  3E02               	addlw	2
  1478     0034  0086               	movwf	6
  1479     0035  0187               	clrf	7
  1480     0036  3F40               	moviw [0]fsr1
  1481     0037  00F2               	movwf	ASCII_Con@b
  1482     0038  3F41               	moviw [1]fsr1
  1483     0039  00F3               	movwf	ASCII_Con@b+1
  1484     003A  0849               	movf	INT_TMR0@B,w
  1485     003B  0086               	movwf	6
  1486     003C  0187               	clrf	7
  1487     003D  3F40               	moviw [0]fsr1
  1488     003E  00F4               	movwf	ASCII_Con@c
  1489     003F  3F41               	moviw [1]fsr1
  1490     0040  00F5               	movwf	ASCII_Con@c+1
  1491     0041  3182  22FD  3180   	fcall	_ASCII_Con
  1492     0044  3182  22E1  3180   	fcall	_UART_print
  1493     0047                     i1l32:
  1494     0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1495     0048  0009               	retfie
  1496     0049                     __end_of_INT_TMR0:
  1497                           
  1498                           	psect	text5
  1499     02E1                     __ptext5:	
  1500 ;; *************** function _UART_print *****************
  1501 ;; Defined at:
  1502 ;;		line 53 in file "funtions.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  cadena          1    wreg     PTR unsigned char 
  1505 ;;		 -> ASCII_Con@r(7), 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  cadena          1    2[COMMON] PTR unsigned char 
  1508 ;;		 -> ASCII_Con@r(7), 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1518 ;;      Params:         0       0       0       0       0       0
  1519 ;;      Locals:         1       0       0       0       0       0
  1520 ;;      Temps:          1       0       0       0       0       0
  1521 ;;      Totals:         2       0       0       0       0       0
  1522 ;;Total ram usage:        2 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; Hardware stack levels required when called: 1
  1525 ;; This function calls:
  1526 ;;		_UART_write
  1527 ;; This function is called by:
  1528 ;;		_INT_TMR0
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532     02E1                     _UART_print:	
  1533                           ;psect for function _UART_print
  1534                           
  1535                           
  1536                           ;incstack = 0
  1537                           ; Regs used in _UART_print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1538                           ;UART_print@cadena stored from wreg
  1539     02E1  00F2               	movwf	UART_print@cadena
  1540     02E2                     i1l1179:
  1541                           
  1542                           ;funtions.c: 53: void UART_print(unsigned char* cadena);funtions.c: 54: {;funtions.c: 55
      +                          :     while(*cadena != 0)
  1543     02E2  2AEE               	goto	i1l1185
  1544     02E3                     i1l1181:
  1545                           
  1546                           ;funtions.c: 56:     {;funtions.c: 57:         UART_write(*cadena);
  1547     02E3  0872               	movf	UART_print@cadena,w
  1548     02E4  0086               	movwf	6
  1549     02E5  0187               	clrf	7
  1550     02E6  0801               	movf	1,w
  1551     02E7  3183  2331  3182   	fcall	_UART_write
  1552     02EA                     i1l1183:
  1553                           
  1554                           ;funtions.c: 58:         cadena++;
  1555     02EA  3001               	movlw	1
  1556     02EB  00F1               	movwf	??_UART_print
  1557     02EC  0871               	movf	??_UART_print,w
  1558     02ED  07F2               	addwf	UART_print@cadena,f
  1559     02EE                     i1l1185:
  1560                           
  1561                           ;funtions.c: 55:     while(*cadena != 0)
  1562     02EE  0872               	movf	UART_print@cadena,w
  1563     02EF  0086               	movwf	6
  1564     02F0  0187               	clrf	7
  1565     02F1  0801               	movf	1,w
  1566     02F2  1D03               	btfss	3,2
  1567     02F3  2AF5               	goto	u51_21
  1568     02F4  2AF6               	goto	u51_20
  1569     02F5                     u51_21:
  1570     02F5  2AE3               	goto	i1l1181
  1571     02F6                     u51_20:
  1572     02F6                     i1l1187:
  1573                           
  1574                           ;funtions.c: 60:     WDTCONbits.WDTPS = 0b01010;
  1575     02F6  0021               	movlb	1	; select bank1
  1576     02F7  0817               	movf	23,w	;volatile
  1577     02F8  39C1               	andlw	-63
  1578     02F9  3814               	iorlw	20
  1579     02FA  0097               	movwf	23	;volatile
  1580     02FB  0063               	sleep	;# 
  1581     02FC                     i1l62:
  1582     02FC  0008               	return
  1583     02FD                     __end_of_UART_print:
  1584                           
  1585                           	psect	text6
  1586     0331                     __ptext6:	
  1587 ;; *************** function _UART_write *****************
  1588 ;; Defined at:
  1589 ;;		line 47 in file "funtions.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  c               1    wreg     unsigned char 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  c               1    0[COMMON] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1603 ;;      Params:         0       0       0       0       0       0
  1604 ;;      Locals:         1       0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0
  1606 ;;      Totals:         1       0       0       0       0       0
  1607 ;;Total ram usage:        1 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_UART_print
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616     0331                     _UART_write:	
  1617                           ;psect for function _UART_write
  1618                           
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _UART_write: [wreg]
  1622                           ;UART_write@c stored from wreg
  1623     0331  00F0               	movwf	UART_write@c
  1624     0332                     i1l961:
  1625                           
  1626                           ;funtions.c: 47: void UART_write(char c);funtions.c: 48: {;funtions.c: 49:     TXREG = c
      +                          ;
  1627     0332  0870               	movf	UART_write@c,w
  1628     0333  0023               	movlb	3	; select bank3
  1629     0334  009A               	movwf	26	;volatile
  1630     0335                     i1l53:	
  1631                           ;funtions.c: 50:     while(TXSTAbits.TRMT == 0);
  1632                           
  1633     0335  1C9E               	btfss	30,1	;volatile
  1634     0336  2B38               	goto	u27_21
  1635     0337  2B39               	goto	u27_20
  1636     0338                     u27_21:
  1637     0338  2B35               	goto	i1l53
  1638     0339                     u27_20:
  1639     0339                     i1l56:
  1640     0339  0008               	return
  1641     033A                     __end_of_UART_write:
  1642                           
  1643                           	psect	text7
  1644     0057                     __ptext7:	
  1645 ;; *************** function _BinTOBcd *****************
  1646 ;; Defined at:
  1647 ;;		line 11 in file "funtions.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  iADC            4   24[BANK0 ] long 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      PTR int 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1661 ;;      Params:         0       4       0       0       0       0
  1662 ;;      Locals:         0       8       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0
  1664 ;;      Totals:         0      12       0       0       0       0
  1665 ;;Total ram usage:       12 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 1
  1668 ;; This function calls:
  1669 ;;		___aldiv
  1670 ;;		___almod
  1671 ;;		___lmul
  1672 ;; This function is called by:
  1673 ;;		_INT_TMR0
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677     0057                     _BinTOBcd:	
  1678                           ;psect for function _BinTOBcd
  1679                           
  1680     0057                     i1l1155:	
  1681                           ;incstack = 0
  1682                           ; Regs used in _BinTOBcd: [wreg+status,2+status,0+pclath+cstack]
  1683                           
  1684                           
  1685                           ;funtions.c: 11: int* BinTOBcd(long iADC);funtions.c: 12: {;funtions.c: 14:     static i
      +                          nt r[3];;funtions.c: 15:     r[0] = ((iADC*1000)/1024)%10;
  1686     0057  3000               	movlw	0
  1687     0058  0020               	movlb	0	; select bank0
  1688     0059  00B1               	movwf	___almod@divisor+3
  1689     005A  3000               	movlw	0
  1690     005B  00B0               	movwf	___almod@divisor+2
  1691     005C  3000               	movlw	0
  1692     005D  00AF               	movwf	___almod@divisor+1
  1693     005E  300A               	movlw	10
  1694     005F  00AE               	movwf	___almod@divisor
  1695     0060  3000               	movlw	0
  1696     0061  00A3               	movwf	___aldiv@divisor+3
  1697     0062  3000               	movlw	0
  1698     0063  00A2               	movwf	___aldiv@divisor+2
  1699     0064  3004               	movlw	4
  1700     0065  00A1               	movwf	___aldiv@divisor+1
  1701     0066  3000               	movlw	0
  1702     0067  00A0               	movwf	___aldiv@divisor
  1703     0068  083B               	movf	BinTOBcd@iADC+3,w
  1704     0069  00F3               	movwf	___lmul@multiplier+3
  1705     006A  083A               	movf	BinTOBcd@iADC+2,w
  1706     006B  00F2               	movwf	___lmul@multiplier+2
  1707     006C  0839               	movf	BinTOBcd@iADC+1,w
  1708     006D  00F1               	movwf	___lmul@multiplier+1
  1709     006E  0838               	movf	BinTOBcd@iADC,w
  1710     006F  00F0               	movwf	___lmul@multiplier
  1711     0070  3000               	movlw	0
  1712     0071  00F7               	movwf	___lmul@multiplicand+3
  1713     0072  3000               	movlw	0
  1714     0073  00F6               	movwf	___lmul@multiplicand+2
  1715     0074  3003               	movlw	3
  1716     0075  00F5               	movwf	___lmul@multiplicand+1
  1717     0076  30E8               	movlw	232
  1718     0077  00F4               	movwf	___lmul@multiplicand
  1719     0078  3182  22AE  3180   	fcall	___lmul
  1720     007B  0873               	movf	?___lmul+3,w
  1721     007C  0020               	movlb	0	; select bank0
  1722     007D  00A7               	movwf	___aldiv@dividend+3
  1723     007E  0872               	movf	?___lmul+2,w
  1724     007F  00A6               	movwf	___aldiv@dividend+2
  1725     0080  0871               	movf	?___lmul+1,w
  1726     0081  00A5               	movwf	___aldiv@dividend+1
  1727     0082  0870               	movf	?___lmul,w
  1728     0083  00A4               	movwf	___aldiv@dividend
  1729     0084  3181  215A  3180   	fcall	___aldiv
  1730     0087  0020               	movlb	0	; select bank0
  1731     0088  0823               	movf	?___aldiv+3,w
  1732     0089  00B5               	movwf	___almod@dividend+3
  1733     008A  0822               	movf	?___aldiv+2,w
  1734     008B  00B4               	movwf	___almod@dividend+2
  1735     008C  0821               	movf	?___aldiv+1,w
  1736     008D  00B3               	movwf	___almod@dividend+1
  1737     008E  0820               	movf	?___aldiv,w
  1738     008F  00B2               	movwf	___almod@dividend
  1739     0090  3181  21EA  3180   	fcall	___almod
  1740     0093  0020               	movlb	0	; select bank0
  1741     0094  082F               	movf	?___almod+1,w
  1742     0095  00D2               	movwf	BinTOBcd@r+1
  1743     0096  082E               	movf	?___almod,w
  1744     0097  00D1               	movwf	BinTOBcd@r
  1745                           
  1746                           ;funtions.c: 16:     r[1] = (((iADC*1000)/1024)/10)%10;
  1747     0098  3000               	movlw	0
  1748     0099  00A3               	movwf	___aldiv@divisor+3
  1749     009A  3000               	movlw	0
  1750     009B  00A2               	movwf	___aldiv@divisor+2
  1751     009C  3004               	movlw	4
  1752     009D  00A1               	movwf	___aldiv@divisor+1
  1753     009E  3000               	movlw	0
  1754     009F  00A0               	movwf	___aldiv@divisor
  1755     00A0  083B               	movf	BinTOBcd@iADC+3,w
  1756     00A1  00F3               	movwf	___lmul@multiplier+3
  1757     00A2  083A               	movf	BinTOBcd@iADC+2,w
  1758     00A3  00F2               	movwf	___lmul@multiplier+2
  1759     00A4  0839               	movf	BinTOBcd@iADC+1,w
  1760     00A5  00F1               	movwf	___lmul@multiplier+1
  1761     00A6  0838               	movf	BinTOBcd@iADC,w
  1762     00A7  00F0               	movwf	___lmul@multiplier
  1763     00A8  3000               	movlw	0
  1764     00A9  00F7               	movwf	___lmul@multiplicand+3
  1765     00AA  3000               	movlw	0
  1766     00AB  00F6               	movwf	___lmul@multiplicand+2
  1767     00AC  3003               	movlw	3
  1768     00AD  00F5               	movwf	___lmul@multiplicand+1
  1769     00AE  30E8               	movlw	232
  1770     00AF  00F4               	movwf	___lmul@multiplicand
  1771     00B0  3182  22AE  3180   	fcall	___lmul
  1772     00B3  0873               	movf	?___lmul+3,w
  1773     00B4  0020               	movlb	0	; select bank0
  1774     00B5  00A7               	movwf	___aldiv@dividend+3
  1775     00B6  0872               	movf	?___lmul+2,w
  1776     00B7  00A6               	movwf	___aldiv@dividend+2
  1777     00B8  0871               	movf	?___lmul+1,w
  1778     00B9  00A5               	movwf	___aldiv@dividend+1
  1779     00BA  0870               	movf	?___lmul,w
  1780     00BB  00A4               	movwf	___aldiv@dividend
  1781     00BC  3181  215A  3180   	fcall	___aldiv
  1782     00BF  0020               	movlb	0	; select bank0
  1783     00C0  0823               	movf	?___aldiv+3,w
  1784     00C1  00C3               	movwf	_BinTOBcd$1336+3
  1785     00C2  0822               	movf	?___aldiv+2,w
  1786     00C3  00C2               	movwf	_BinTOBcd$1336+2
  1787     00C4  0821               	movf	?___aldiv+1,w
  1788     00C5  00C1               	movwf	_BinTOBcd$1336+1
  1789     00C6  0820               	movf	?___aldiv,w
  1790     00C7  00C0               	movwf	_BinTOBcd$1336
  1791                           
  1792                           ;funtions.c: 16:     r[1] = (((iADC*1000)/1024)/10)%10;
  1793     00C8  3000               	movlw	0
  1794     00C9  00B1               	movwf	___almod@divisor+3
  1795     00CA  3000               	movlw	0
  1796     00CB  00B0               	movwf	___almod@divisor+2
  1797     00CC  3000               	movlw	0
  1798     00CD  00AF               	movwf	___almod@divisor+1
  1799     00CE  300A               	movlw	10
  1800     00CF  00AE               	movwf	___almod@divisor
  1801     00D0  3000               	movlw	0
  1802     00D1  00A3               	movwf	___aldiv@divisor+3
  1803     00D2  3000               	movlw	0
  1804     00D3  00A2               	movwf	___aldiv@divisor+2
  1805     00D4  3000               	movlw	0
  1806     00D5  00A1               	movwf	___aldiv@divisor+1
  1807     00D6  300A               	movlw	10
  1808     00D7  00A0               	movwf	___aldiv@divisor
  1809     00D8  0843               	movf	_BinTOBcd$1336+3,w
  1810     00D9  00A7               	movwf	___aldiv@dividend+3
  1811     00DA  0842               	movf	_BinTOBcd$1336+2,w
  1812     00DB  00A6               	movwf	___aldiv@dividend+2
  1813     00DC  0841               	movf	_BinTOBcd$1336+1,w
  1814     00DD  00A5               	movwf	___aldiv@dividend+1
  1815     00DE  0840               	movf	_BinTOBcd$1336,w
  1816     00DF  00A4               	movwf	___aldiv@dividend
  1817     00E0  3181  215A  3180   	fcall	___aldiv
  1818     00E3  0020               	movlb	0	; select bank0
  1819     00E4  0823               	movf	?___aldiv+3,w
  1820     00E5  00B5               	movwf	___almod@dividend+3
  1821     00E6  0822               	movf	?___aldiv+2,w
  1822     00E7  00B4               	movwf	___almod@dividend+2
  1823     00E8  0821               	movf	?___aldiv+1,w
  1824     00E9  00B3               	movwf	___almod@dividend+1
  1825     00EA  0820               	movf	?___aldiv,w
  1826     00EB  00B2               	movwf	___almod@dividend
  1827     00EC  3181  21EA  3180   	fcall	___almod
  1828     00EF  0020               	movlb	0	; select bank0
  1829     00F0  082F               	movf	?___almod+1,w
  1830     00F1  00D4               	movwf	BinTOBcd@r+3
  1831     00F2  082E               	movf	?___almod,w
  1832     00F3  00D3               	movwf	BinTOBcd@r+2
  1833                           
  1834                           ;funtions.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  1835     00F4  3000               	movlw	0
  1836     00F5  00A3               	movwf	___aldiv@divisor+3
  1837     00F6  3000               	movlw	0
  1838     00F7  00A2               	movwf	___aldiv@divisor+2
  1839     00F8  3004               	movlw	4
  1840     00F9  00A1               	movwf	___aldiv@divisor+1
  1841     00FA  3000               	movlw	0
  1842     00FB  00A0               	movwf	___aldiv@divisor
  1843     00FC  083B               	movf	BinTOBcd@iADC+3,w
  1844     00FD  00F3               	movwf	___lmul@multiplier+3
  1845     00FE  083A               	movf	BinTOBcd@iADC+2,w
  1846     00FF  00F2               	movwf	___lmul@multiplier+2
  1847     0100  0839               	movf	BinTOBcd@iADC+1,w
  1848     0101  00F1               	movwf	___lmul@multiplier+1
  1849     0102  0838               	movf	BinTOBcd@iADC,w
  1850     0103  00F0               	movwf	___lmul@multiplier
  1851     0104  3000               	movlw	0
  1852     0105  00F7               	movwf	___lmul@multiplicand+3
  1853     0106  3000               	movlw	0
  1854     0107  00F6               	movwf	___lmul@multiplicand+2
  1855     0108  3003               	movlw	3
  1856     0109  00F5               	movwf	___lmul@multiplicand+1
  1857     010A  30E8               	movlw	232
  1858     010B  00F4               	movwf	___lmul@multiplicand
  1859     010C  3182  22AE  3180   	fcall	___lmul
  1860     010F  0873               	movf	?___lmul+3,w
  1861     0110  0020               	movlb	0	; select bank0
  1862     0111  00A7               	movwf	___aldiv@dividend+3
  1863     0112  0872               	movf	?___lmul+2,w
  1864     0113  00A6               	movwf	___aldiv@dividend+2
  1865     0114  0871               	movf	?___lmul+1,w
  1866     0115  00A5               	movwf	___aldiv@dividend+1
  1867     0116  0870               	movf	?___lmul,w
  1868     0117  00A4               	movwf	___aldiv@dividend
  1869     0118  3181  215A  3180   	fcall	___aldiv
  1870     011B  0020               	movlb	0	; select bank0
  1871     011C  0823               	movf	?___aldiv+3,w
  1872     011D  00C3               	movwf	_BinTOBcd$1336+3
  1873     011E  0822               	movf	?___aldiv+2,w
  1874     011F  00C2               	movwf	_BinTOBcd$1336+2
  1875     0120  0821               	movf	?___aldiv+1,w
  1876     0121  00C1               	movwf	_BinTOBcd$1336+1
  1877     0122  0820               	movf	?___aldiv,w
  1878     0123  00C0               	movwf	_BinTOBcd$1336
  1879                           
  1880                           ;funtions.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  1881     0124  3000               	movlw	0
  1882     0125  00A3               	movwf	___aldiv@divisor+3
  1883     0126  3000               	movlw	0
  1884     0127  00A2               	movwf	___aldiv@divisor+2
  1885     0128  3000               	movlw	0
  1886     0129  00A1               	movwf	___aldiv@divisor+1
  1887     012A  300A               	movlw	10
  1888     012B  00A0               	movwf	___aldiv@divisor
  1889     012C  0843               	movf	_BinTOBcd$1336+3,w
  1890     012D  00A7               	movwf	___aldiv@dividend+3
  1891     012E  0842               	movf	_BinTOBcd$1336+2,w
  1892     012F  00A6               	movwf	___aldiv@dividend+2
  1893     0130  0841               	movf	_BinTOBcd$1336+1,w
  1894     0131  00A5               	movwf	___aldiv@dividend+1
  1895     0132  0840               	movf	_BinTOBcd$1336,w
  1896     0133  00A4               	movwf	___aldiv@dividend
  1897     0134  3181  215A  3180   	fcall	___aldiv
  1898     0137  0020               	movlb	0	; select bank0
  1899     0138  0823               	movf	?___aldiv+3,w
  1900     0139  00BF               	movwf	_BinTOBcd$1337+3
  1901     013A  0822               	movf	?___aldiv+2,w
  1902     013B  00BE               	movwf	_BinTOBcd$1337+2
  1903     013C  0821               	movf	?___aldiv+1,w
  1904     013D  00BD               	movwf	_BinTOBcd$1337+1
  1905     013E  0820               	movf	?___aldiv,w
  1906     013F  00BC               	movwf	_BinTOBcd$1337
  1907                           
  1908                           ;funtions.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  1909     0140  3000               	movlw	0
  1910     0141  00A3               	movwf	___aldiv@divisor+3
  1911     0142  3000               	movlw	0
  1912     0143  00A2               	movwf	___aldiv@divisor+2
  1913     0144  3000               	movlw	0
  1914     0145  00A1               	movwf	___aldiv@divisor+1
  1915     0146  300A               	movlw	10
  1916     0147  00A0               	movwf	___aldiv@divisor
  1917     0148  083F               	movf	_BinTOBcd$1337+3,w
  1918     0149  00A7               	movwf	___aldiv@dividend+3
  1919     014A  083E               	movf	_BinTOBcd$1337+2,w
  1920     014B  00A6               	movwf	___aldiv@dividend+2
  1921     014C  083D               	movf	_BinTOBcd$1337+1,w
  1922     014D  00A5               	movwf	___aldiv@dividend+1
  1923     014E  083C               	movf	_BinTOBcd$1337,w
  1924     014F  00A4               	movwf	___aldiv@dividend
  1925     0150  3181  215A  3180   	fcall	___aldiv
  1926     0153  0020               	movlb	0	; select bank0
  1927     0154  0821               	movf	?___aldiv+1,w
  1928     0155  00D6               	movwf	BinTOBcd@r+5
  1929     0156  0820               	movf	?___aldiv,w
  1930     0157  00D5               	movwf	BinTOBcd@r+4
  1931     0158                     i1l1157:
  1932                           
  1933                           ;funtions.c: 19:     return r;
  1934     0158  3051               	movlw	(low (BinTOBcd@r| 0))& (0+255)
  1935     0159                     i1l47:
  1936     0159  0008               	return
  1937     015A                     __end_of_BinTOBcd:
  1938                           
  1939                           	psect	text8
  1940     02AE                     __ptext8:	
  1941 ;; *************** function ___lmul *****************
  1942 ;; Defined at:
  1943 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  multiplier      4    0[COMMON] unsigned long 
  1946 ;;  multiplicand    4    4[COMMON] unsigned long 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  product         4    8[COMMON] unsigned long 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  4    0[COMMON] unsigned long 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1958 ;;      Params:         8       0       0       0       0       0
  1959 ;;      Locals:         4       0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0
  1961 ;;      Totals:        12       0       0       0       0       0
  1962 ;;Total ram usage:       12 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_BinTOBcd
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971     02AE                     ___lmul:	
  1972                           ;psect for function ___lmul
  1973                           
  1974     02AE                     i1l969:	
  1975                           ;incstack = 0
  1976                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1977                           
  1978     02AE  3000               	movlw	0
  1979     02AF  00FB               	movwf	___lmul@product+3
  1980     02B0  3000               	movlw	0
  1981     02B1  00FA               	movwf	___lmul@product+2
  1982     02B2  3000               	movlw	0
  1983     02B3  00F9               	movwf	___lmul@product+1
  1984     02B4  3000               	movlw	0
  1985     02B5  00F8               	movwf	___lmul@product
  1986     02B6                     i1l971:
  1987     02B6  1C70               	btfss	___lmul@multiplier,0
  1988     02B7  2AB9               	goto	u28_21
  1989     02B8  2ABA               	goto	u28_20
  1990     02B9                     u28_21:
  1991     02B9  2AC2               	goto	i1l975
  1992     02BA                     u28_20:
  1993     02BA                     i1l973:
  1994     02BA  0874               	movf	___lmul@multiplicand,w
  1995     02BB  07F8               	addwf	___lmul@product,f
  1996     02BC  0875               	movf	___lmul@multiplicand+1,w
  1997     02BD  3DF9               	addwfc	___lmul@product+1,f
  1998     02BE  0876               	movf	___lmul@multiplicand+2,w
  1999     02BF  3DFA               	addwfc	___lmul@product+2,f
  2000     02C0  0877               	movf	___lmul@multiplicand+3,w
  2001     02C1  3DFB               	addwfc	___lmul@product+3,f
  2002     02C2                     i1l975:
  2003     02C2  3001               	movlw	1
  2004     02C3                     u29_25:
  2005     02C3  35F4               	lslf	___lmul@multiplicand,f
  2006     02C4  0DF5               	rlf	___lmul@multiplicand+1,f
  2007     02C5  0DF6               	rlf	___lmul@multiplicand+2,f
  2008     02C6  0DF7               	rlf	___lmul@multiplicand+3,f
  2009     02C7  0B89               	decfsz	9,f
  2010     02C8  2AC3               	goto	u29_25
  2011     02C9                     i1l977:
  2012     02C9  3001               	movlw	1
  2013     02CA                     u30_25:
  2014     02CA  36F3               	lsrf	___lmul@multiplier+3,f
  2015     02CB  0CF2               	rrf	___lmul@multiplier+2,f
  2016     02CC  0CF1               	rrf	___lmul@multiplier+1,f
  2017     02CD  0CF0               	rrf	___lmul@multiplier,f
  2018     02CE  0B89               	decfsz	9,f
  2019     02CF  2ACA               	goto	u30_25
  2020     02D0  0873               	movf	___lmul@multiplier+3,w
  2021     02D1  0472               	iorwf	___lmul@multiplier+2,w
  2022     02D2  0471               	iorwf	___lmul@multiplier+1,w
  2023     02D3  0470               	iorwf	___lmul@multiplier,w
  2024     02D4  1D03               	skipz
  2025     02D5  2AD7               	goto	u31_21
  2026     02D6  2AD8               	goto	u31_20
  2027     02D7                     u31_21:
  2028     02D7  2AB6               	goto	i1l971
  2029     02D8                     u31_20:
  2030     02D8                     i1l979:
  2031     02D8  087B               	movf	___lmul@product+3,w
  2032     02D9  00F3               	movwf	?___lmul+3
  2033     02DA  087A               	movf	___lmul@product+2,w
  2034     02DB  00F2               	movwf	?___lmul+2
  2035     02DC  0879               	movf	___lmul@product+1,w
  2036     02DD  00F1               	movwf	?___lmul+1
  2037     02DE  0878               	movf	___lmul@product,w
  2038     02DF  00F0               	movwf	?___lmul
  2039     02E0                     i1l277:
  2040     02E0  0008               	return
  2041     02E1                     __end_of___lmul:
  2042                           
  2043                           	psect	text9
  2044     01EA                     __ptext9:	
  2045 ;; *************** function ___almod *****************
  2046 ;; Defined at:
  2047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\almod.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  divisor         4   14[BANK0 ] long 
  2050 ;;  dividend        4   18[BANK0 ] long 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  sign            1   23[BANK0 ] unsigned char 
  2053 ;;  counter         1   22[BANK0 ] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  4   14[BANK0 ] long 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2063 ;;      Params:         0       8       0       0       0       0
  2064 ;;      Locals:         0       2       0       0       0       0
  2065 ;;      Temps:          1       0       0       0       0       0
  2066 ;;      Totals:         1      10       0       0       0       0
  2067 ;;Total ram usage:       11 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_BinTOBcd
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     01EA                     ___almod:	
  2077                           ;psect for function ___almod
  2078                           
  2079     01EA                     i1l1023:	
  2080                           ;incstack = 0
  2081                           ; Regs used in ___almod: [wreg+status,2+status,0]
  2082                           
  2083     01EA  0020               	movlb	0	; select bank0
  2084     01EB  01B7               	clrf	___almod@sign
  2085     01EC                     i1l1025:
  2086     01EC  1FB5               	btfss	___almod@dividend+3,7
  2087     01ED  29EF               	goto	u42_21
  2088     01EE  29F0               	goto	u42_20
  2089     01EF                     u42_21:
  2090     01EF  29FD               	goto	i1l341
  2091     01F0                     u42_20:
  2092     01F0                     i1l1027:
  2093     01F0  09B2               	comf	___almod@dividend,f
  2094     01F1  09B3               	comf	___almod@dividend+1,f
  2095     01F2  09B4               	comf	___almod@dividend+2,f
  2096     01F3  09B5               	comf	___almod@dividend+3,f
  2097     01F4  0AB2               	incf	___almod@dividend,f
  2098     01F5  1903               	skipnz
  2099     01F6  0AB3               	incf	___almod@dividend+1,f
  2100     01F7  1903               	skipnz
  2101     01F8  0AB4               	incf	___almod@dividend+2,f
  2102     01F9  1903               	skipnz
  2103     01FA  0AB5               	incf	___almod@dividend+3,f
  2104     01FB  01B7               	clrf	___almod@sign
  2105     01FC  0AB7               	incf	___almod@sign,f
  2106     01FD                     i1l341:
  2107     01FD  1FB1               	btfss	___almod@divisor+3,7
  2108     01FE  2A00               	goto	u43_21
  2109     01FF  2A01               	goto	u43_20
  2110     0200                     u43_21:
  2111     0200  2A0C               	goto	i1l1031
  2112     0201                     u43_20:
  2113     0201                     i1l1029:
  2114     0201  09AE               	comf	___almod@divisor,f
  2115     0202  09AF               	comf	___almod@divisor+1,f
  2116     0203  09B0               	comf	___almod@divisor+2,f
  2117     0204  09B1               	comf	___almod@divisor+3,f
  2118     0205  0AAE               	incf	___almod@divisor,f
  2119     0206  1903               	skipnz
  2120     0207  0AAF               	incf	___almod@divisor+1,f
  2121     0208  1903               	skipnz
  2122     0209  0AB0               	incf	___almod@divisor+2,f
  2123     020A  1903               	skipnz
  2124     020B  0AB1               	incf	___almod@divisor+3,f
  2125     020C                     i1l1031:
  2126     020C  0831               	movf	___almod@divisor+3,w
  2127     020D  0430               	iorwf	___almod@divisor+2,w
  2128     020E  042F               	iorwf	___almod@divisor+1,w
  2129     020F  042E               	iorwf	___almod@divisor,w
  2130     0210  1903               	skipnz
  2131     0211  2A13               	goto	u44_21
  2132     0212  2A14               	goto	u44_20
  2133     0213                     u44_21:
  2134     0213  2A4D               	goto	i1l1047
  2135     0214                     u44_20:
  2136     0214                     i1l1033:
  2137     0214  01B6               	clrf	___almod@counter
  2138     0215  0AB6               	incf	___almod@counter,f
  2139     0216  2A22               	goto	i1l1037
  2140     0217                     i1l1035:
  2141     0217  3001               	movlw	1
  2142     0218                     u45_25:
  2143     0218  35AE               	lslf	___almod@divisor,f
  2144     0219  0DAF               	rlf	___almod@divisor+1,f
  2145     021A  0DB0               	rlf	___almod@divisor+2,f
  2146     021B  0DB1               	rlf	___almod@divisor+3,f
  2147     021C  0B89               	decfsz	9,f
  2148     021D  2A18               	goto	u45_25
  2149     021E  3001               	movlw	1
  2150     021F  00FD               	movwf	??___almod
  2151     0220  087D               	movf	??___almod,w
  2152     0221  07B6               	addwf	___almod@counter,f
  2153     0222                     i1l1037:
  2154     0222  1FB1               	btfss	___almod@divisor+3,7
  2155     0223  2A25               	goto	u46_21
  2156     0224  2A26               	goto	u46_20
  2157     0225                     u46_21:
  2158     0225  2A17               	goto	i1l1035
  2159     0226                     u46_20:
  2160     0226                     i1l1039:
  2161     0226  0831               	movf	___almod@divisor+3,w
  2162     0227  0235               	subwf	___almod@dividend+3,w
  2163     0228  1D03               	skipz
  2164     0229  2A34               	goto	u47_25
  2165     022A  0830               	movf	___almod@divisor+2,w
  2166     022B  0234               	subwf	___almod@dividend+2,w
  2167     022C  1D03               	skipz
  2168     022D  2A34               	goto	u47_25
  2169     022E  082F               	movf	___almod@divisor+1,w
  2170     022F  0233               	subwf	___almod@dividend+1,w
  2171     0230  1D03               	skipz
  2172     0231  2A34               	goto	u47_25
  2173     0232  082E               	movf	___almod@divisor,w
  2174     0233  0232               	subwf	___almod@dividend,w
  2175     0234                     u47_25:
  2176     0234  1C03               	skipc
  2177     0235  2A37               	goto	u47_21
  2178     0236  2A38               	goto	u47_20
  2179     0237                     u47_21:
  2180     0237  2A40               	goto	i1l1043
  2181     0238                     u47_20:
  2182     0238                     i1l1041:
  2183     0238  082E               	movf	___almod@divisor,w
  2184     0239  02B2               	subwf	___almod@dividend,f
  2185     023A  082F               	movf	___almod@divisor+1,w
  2186     023B  3BB3               	subwfb	___almod@dividend+1,f
  2187     023C  0830               	movf	___almod@divisor+2,w
  2188     023D  3BB4               	subwfb	___almod@dividend+2,f
  2189     023E  0831               	movf	___almod@divisor+3,w
  2190     023F  3BB5               	subwfb	___almod@dividend+3,f
  2191     0240                     i1l1043:
  2192     0240  3001               	movlw	1
  2193     0241                     u48_25:
  2194     0241  36B1               	lsrf	___almod@divisor+3,f
  2195     0242  0CB0               	rrf	___almod@divisor+2,f
  2196     0243  0CAF               	rrf	___almod@divisor+1,f
  2197     0244  0CAE               	rrf	___almod@divisor,f
  2198     0245  0B89               	decfsz	9,f
  2199     0246  2A41               	goto	u48_25
  2200     0247                     i1l1045:
  2201     0247  3001               	movlw	1
  2202     0248  02B6               	subwf	___almod@counter,f
  2203     0249  1D03               	btfss	3,2
  2204     024A  2A4C               	goto	u49_21
  2205     024B  2A4D               	goto	u49_20
  2206     024C                     u49_21:
  2207     024C  2A26               	goto	i1l1039
  2208     024D                     u49_20:
  2209     024D                     i1l1047:
  2210     024D  0837               	movf	___almod@sign,w
  2211     024E  1903               	btfsc	3,2
  2212     024F  2A51               	goto	u50_21
  2213     0250  2A52               	goto	u50_20
  2214     0251                     u50_21:
  2215     0251  2A5D               	goto	i1l1051
  2216     0252                     u50_20:
  2217     0252                     i1l1049:
  2218     0252  09B2               	comf	___almod@dividend,f
  2219     0253  09B3               	comf	___almod@dividend+1,f
  2220     0254  09B4               	comf	___almod@dividend+2,f
  2221     0255  09B5               	comf	___almod@dividend+3,f
  2222     0256  0AB2               	incf	___almod@dividend,f
  2223     0257  1903               	skipnz
  2224     0258  0AB3               	incf	___almod@dividend+1,f
  2225     0259  1903               	skipnz
  2226     025A  0AB4               	incf	___almod@dividend+2,f
  2227     025B  1903               	skipnz
  2228     025C  0AB5               	incf	___almod@dividend+3,f
  2229     025D                     i1l1051:
  2230     025D  0835               	movf	___almod@dividend+3,w
  2231     025E  00B1               	movwf	?___almod+3
  2232     025F  0834               	movf	___almod@dividend+2,w
  2233     0260  00B0               	movwf	?___almod+2
  2234     0261  0833               	movf	___almod@dividend+1,w
  2235     0262  00AF               	movwf	?___almod+1
  2236     0263  0832               	movf	___almod@dividend,w
  2237     0264  00AE               	movwf	?___almod
  2238     0265                     i1l351:
  2239     0265  0008               	return
  2240     0266                     __end_of___almod:
  2241                           
  2242                           	psect	text10
  2243     015A                     __ptext10:	
  2244 ;; *************** function ___aldiv *****************
  2245 ;; Defined at:
  2246 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  divisor         4    0[BANK0 ] long 
  2249 ;;  dividend        4    4[BANK0 ] long 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  quotient        4   10[BANK0 ] long 
  2252 ;;  sign            1    9[BANK0 ] unsigned char 
  2253 ;;  counter         1    8[BANK0 ] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  4    0[BANK0 ] long 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2263 ;;      Params:         0       8       0       0       0       0
  2264 ;;      Locals:         0       6       0       0       0       0
  2265 ;;      Temps:          1       0       0       0       0       0
  2266 ;;      Totals:         1      14       0       0       0       0
  2267 ;;Total ram usage:       15 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_BinTOBcd
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276     015A                     ___aldiv:	
  2277                           ;psect for function ___aldiv
  2278                           
  2279     015A                     i1l983:	
  2280                           ;incstack = 0
  2281                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2282                           
  2283     015A  0020               	movlb	0	; select bank0
  2284     015B  01A9               	clrf	___aldiv@sign
  2285     015C                     i1l985:
  2286     015C  1FA3               	btfss	___aldiv@divisor+3,7
  2287     015D  295F               	goto	u32_21
  2288     015E  2960               	goto	u32_20
  2289     015F                     u32_21:
  2290     015F  296D               	goto	i1l328
  2291     0160                     u32_20:
  2292     0160                     i1l987:
  2293     0160  09A0               	comf	___aldiv@divisor,f
  2294     0161  09A1               	comf	___aldiv@divisor+1,f
  2295     0162  09A2               	comf	___aldiv@divisor+2,f
  2296     0163  09A3               	comf	___aldiv@divisor+3,f
  2297     0164  0AA0               	incf	___aldiv@divisor,f
  2298     0165  1903               	skipnz
  2299     0166  0AA1               	incf	___aldiv@divisor+1,f
  2300     0167  1903               	skipnz
  2301     0168  0AA2               	incf	___aldiv@divisor+2,f
  2302     0169  1903               	skipnz
  2303     016A  0AA3               	incf	___aldiv@divisor+3,f
  2304     016B  01A9               	clrf	___aldiv@sign
  2305     016C  0AA9               	incf	___aldiv@sign,f
  2306     016D                     i1l328:
  2307     016D  1FA7               	btfss	___aldiv@dividend+3,7
  2308     016E  2970               	goto	u33_21
  2309     016F  2971               	goto	u33_20
  2310     0170                     u33_21:
  2311     0170  2980               	goto	i1l993
  2312     0171                     u33_20:
  2313     0171                     i1l989:
  2314     0171  09A4               	comf	___aldiv@dividend,f
  2315     0172  09A5               	comf	___aldiv@dividend+1,f
  2316     0173  09A6               	comf	___aldiv@dividend+2,f
  2317     0174  09A7               	comf	___aldiv@dividend+3,f
  2318     0175  0AA4               	incf	___aldiv@dividend,f
  2319     0176  1903               	skipnz
  2320     0177  0AA5               	incf	___aldiv@dividend+1,f
  2321     0178  1903               	skipnz
  2322     0179  0AA6               	incf	___aldiv@dividend+2,f
  2323     017A  1903               	skipnz
  2324     017B  0AA7               	incf	___aldiv@dividend+3,f
  2325     017C                     i1l991:
  2326     017C  3001               	movlw	1
  2327     017D  00FC               	movwf	??___aldiv
  2328     017E  087C               	movf	??___aldiv,w
  2329     017F  06A9               	xorwf	___aldiv@sign,f
  2330     0180                     i1l993:
  2331     0180  3000               	movlw	0
  2332     0181  00AD               	movwf	___aldiv@quotient+3
  2333     0182  3000               	movlw	0
  2334     0183  00AC               	movwf	___aldiv@quotient+2
  2335     0184  3000               	movlw	0
  2336     0185  00AB               	movwf	___aldiv@quotient+1
  2337     0186  3000               	movlw	0
  2338     0187  00AA               	movwf	___aldiv@quotient
  2339     0188                     i1l995:
  2340     0188  0823               	movf	___aldiv@divisor+3,w
  2341     0189  0422               	iorwf	___aldiv@divisor+2,w
  2342     018A  0421               	iorwf	___aldiv@divisor+1,w
  2343     018B  0420               	iorwf	___aldiv@divisor,w
  2344     018C  1903               	skipnz
  2345     018D  298F               	goto	u34_21
  2346     018E  2990               	goto	u34_20
  2347     018F                     u34_21:
  2348     018F  29D1               	goto	i1l1015
  2349     0190                     u34_20:
  2350     0190                     i1l997:
  2351     0190  01A8               	clrf	___aldiv@counter
  2352     0191  0AA8               	incf	___aldiv@counter,f
  2353     0192  299E               	goto	i1l1001
  2354     0193                     i1l999:
  2355     0193  3001               	movlw	1
  2356     0194                     u35_25:
  2357     0194  35A0               	lslf	___aldiv@divisor,f
  2358     0195  0DA1               	rlf	___aldiv@divisor+1,f
  2359     0196  0DA2               	rlf	___aldiv@divisor+2,f
  2360     0197  0DA3               	rlf	___aldiv@divisor+3,f
  2361     0198  0B89               	decfsz	9,f
  2362     0199  2994               	goto	u35_25
  2363     019A  3001               	movlw	1
  2364     019B  00FC               	movwf	??___aldiv
  2365     019C  087C               	movf	??___aldiv,w
  2366     019D  07A8               	addwf	___aldiv@counter,f
  2367     019E                     i1l1001:
  2368     019E  1FA3               	btfss	___aldiv@divisor+3,7
  2369     019F  29A1               	goto	u36_21
  2370     01A0  29A2               	goto	u36_20
  2371     01A1                     u36_21:
  2372     01A1  2993               	goto	i1l999
  2373     01A2                     u36_20:
  2374     01A2                     i1l1003:
  2375     01A2  3001               	movlw	1
  2376     01A3                     u37_25:
  2377     01A3  35AA               	lslf	___aldiv@quotient,f
  2378     01A4  0DAB               	rlf	___aldiv@quotient+1,f
  2379     01A5  0DAC               	rlf	___aldiv@quotient+2,f
  2380     01A6  0DAD               	rlf	___aldiv@quotient+3,f
  2381     01A7  0B89               	decfsz	9,f
  2382     01A8  29A3               	goto	u37_25
  2383     01A9                     i1l1005:
  2384     01A9  0823               	movf	___aldiv@divisor+3,w
  2385     01AA  0227               	subwf	___aldiv@dividend+3,w
  2386     01AB  1D03               	skipz
  2387     01AC  29B7               	goto	u38_25
  2388     01AD  0822               	movf	___aldiv@divisor+2,w
  2389     01AE  0226               	subwf	___aldiv@dividend+2,w
  2390     01AF  1D03               	skipz
  2391     01B0  29B7               	goto	u38_25
  2392     01B1  0821               	movf	___aldiv@divisor+1,w
  2393     01B2  0225               	subwf	___aldiv@dividend+1,w
  2394     01B3  1D03               	skipz
  2395     01B4  29B7               	goto	u38_25
  2396     01B5  0820               	movf	___aldiv@divisor,w
  2397     01B6  0224               	subwf	___aldiv@dividend,w
  2398     01B7                     u38_25:
  2399     01B7  1C03               	skipc
  2400     01B8  29BA               	goto	u38_21
  2401     01B9  29BB               	goto	u38_20
  2402     01BA                     u38_21:
  2403     01BA  29C4               	goto	i1l1011
  2404     01BB                     u38_20:
  2405     01BB                     i1l1007:
  2406     01BB  0820               	movf	___aldiv@divisor,w
  2407     01BC  02A4               	subwf	___aldiv@dividend,f
  2408     01BD  0821               	movf	___aldiv@divisor+1,w
  2409     01BE  3BA5               	subwfb	___aldiv@dividend+1,f
  2410     01BF  0822               	movf	___aldiv@divisor+2,w
  2411     01C0  3BA6               	subwfb	___aldiv@dividend+2,f
  2412     01C1  0823               	movf	___aldiv@divisor+3,w
  2413     01C2  3BA7               	subwfb	___aldiv@dividend+3,f
  2414     01C3                     i1l1009:
  2415     01C3  142A               	bsf	___aldiv@quotient,0
  2416     01C4                     i1l1011:
  2417     01C4  3001               	movlw	1
  2418     01C5                     u39_25:
  2419     01C5  36A3               	lsrf	___aldiv@divisor+3,f
  2420     01C6  0CA2               	rrf	___aldiv@divisor+2,f
  2421     01C7  0CA1               	rrf	___aldiv@divisor+1,f
  2422     01C8  0CA0               	rrf	___aldiv@divisor,f
  2423     01C9  0B89               	decfsz	9,f
  2424     01CA  29C5               	goto	u39_25
  2425     01CB                     i1l1013:
  2426     01CB  3001               	movlw	1
  2427     01CC  02A8               	subwf	___aldiv@counter,f
  2428     01CD  1D03               	btfss	3,2
  2429     01CE  29D0               	goto	u40_21
  2430     01CF  29D1               	goto	u40_20
  2431     01D0                     u40_21:
  2432     01D0  29A2               	goto	i1l1003
  2433     01D1                     u40_20:
  2434     01D1                     i1l1015:
  2435     01D1  0829               	movf	___aldiv@sign,w
  2436     01D2  1903               	btfsc	3,2
  2437     01D3  29D5               	goto	u41_21
  2438     01D4  29D6               	goto	u41_20
  2439     01D5                     u41_21:
  2440     01D5  29E1               	goto	i1l1019
  2441     01D6                     u41_20:
  2442     01D6                     i1l1017:
  2443     01D6  09AA               	comf	___aldiv@quotient,f
  2444     01D7  09AB               	comf	___aldiv@quotient+1,f
  2445     01D8  09AC               	comf	___aldiv@quotient+2,f
  2446     01D9  09AD               	comf	___aldiv@quotient+3,f
  2447     01DA  0AAA               	incf	___aldiv@quotient,f
  2448     01DB  1903               	skipnz
  2449     01DC  0AAB               	incf	___aldiv@quotient+1,f
  2450     01DD  1903               	skipnz
  2451     01DE  0AAC               	incf	___aldiv@quotient+2,f
  2452     01DF  1903               	skipnz
  2453     01E0  0AAD               	incf	___aldiv@quotient+3,f
  2454     01E1                     i1l1019:
  2455     01E1  082D               	movf	___aldiv@quotient+3,w
  2456     01E2  00A3               	movwf	?___aldiv+3
  2457     01E3  082C               	movf	___aldiv@quotient+2,w
  2458     01E4  00A2               	movwf	?___aldiv+2
  2459     01E5  082B               	movf	___aldiv@quotient+1,w
  2460     01E6  00A1               	movwf	?___aldiv+1
  2461     01E7  082A               	movf	___aldiv@quotient,w
  2462     01E8  00A0               	movwf	?___aldiv
  2463     01E9                     i1l338:
  2464     01E9  0008               	return
  2465     01EA                     __end_of___aldiv:
  2466                           
  2467                           	psect	text11
  2468     02FD                     __ptext11:	
  2469 ;; *************** function _ASCII_Con *****************
  2470 ;; Defined at:
  2471 ;;		line 64 in file "funtions.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  a               2    0[COMMON] int 
  2474 ;;  b               2    2[COMMON] int 
  2475 ;;  c               2    4[COMMON] int 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      PTR unsigned char 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2487 ;;      Params:         6       0       0       0       0       0
  2488 ;;      Locals:         0       0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0
  2490 ;;      Totals:         6       0       0       0       0       0
  2491 ;;Total ram usage:        6 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_INT_TMR0
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500     02FD                     _ASCII_Con:	
  2501                           ;psect for function _ASCII_Con
  2502                           
  2503     02FD                     i1l1161:	
  2504                           ;incstack = 0
  2505                           ; Regs used in _ASCII_Con: [wreg+status,2+status,0]
  2506                           
  2507                           
  2508                           ;funtions.c: 64: unsigned char* ASCII_Con(int a, int b, int c);funtions.c: 65: {;funtion
      +                          s.c: 66:     static char r[7];;funtions.c: 67:     r[0] = a+48;
  2509     02FD  0870               	movf	ASCII_Con@a,w
  2510     02FE  3E30               	addlw	48
  2511     02FF  0020               	movlb	0	; select bank0
  2512     0300  00CA               	movwf	ASCII_Con@r
  2513     0301                     i1l1163:
  2514                           
  2515                           ;funtions.c: 68:     r[1] = '.';
  2516     0301  302E               	movlw	46
  2517     0302  00CB               	movwf	ASCII_Con@r+1
  2518     0303                     i1l1165:
  2519                           
  2520                           ;funtions.c: 69:     r[2] = b+48;
  2521     0303  0872               	movf	ASCII_Con@b,w
  2522     0304  3E30               	addlw	48
  2523     0305  00CC               	movwf	ASCII_Con@r+2
  2524     0306                     i1l1167:
  2525                           
  2526                           ;funtions.c: 70:     r[3] = c+48;
  2527     0306  0874               	movf	ASCII_Con@c,w
  2528     0307  3E30               	addlw	48
  2529     0308  00CD               	movwf	ASCII_Con@r+3
  2530     0309                     i1l1169:
  2531                           
  2532                           ;funtions.c: 71:     r[4] = ' ';
  2533     0309  3020               	movlw	32
  2534     030A  00CE               	movwf	ASCII_Con@r+4
  2535     030B                     i1l1171:
  2536                           
  2537                           ;funtions.c: 72:     r[5] = 'V';
  2538     030B  3056               	movlw	86
  2539     030C  00CF               	movwf	ASCII_Con@r+5
  2540     030D                     i1l1173:
  2541                           
  2542                           ;funtions.c: 73:     r[6] = '\0';
  2543     030D  01D0               	clrf	ASCII_Con@r+6
  2544     030E                     i1l1175:
  2545                           
  2546                           ;funtions.c: 75:     return r;
  2547     030E  304A               	movlw	(low (ASCII_Con@r| 0))& (0+255)
  2548     030F                     i1l67:
  2549     030F  0008               	return
  2550     0310                     __end_of_ASCII_Con:
  2551     007E                     btemp	set	126	;btemp
  2552     007E                     int$flags	set	126
  2553     007E                     wtemp0	set	126
  2554                           
  2555                           	psect	idloc
  2556                           
  2557                           ;Config register IDLOC0 @ 0x8000
  2558                           ;	unspecified, using default values
  2559     8000                     	org	32768
  2560     8000  3FFF               	dw	16383
  2561                           
  2562                           ;Config register IDLOC1 @ 0x8001
  2563                           ;	unspecified, using default values
  2564     8001                     	org	32769
  2565     8001  3FFF               	dw	16383
  2566                           
  2567                           ;Config register IDLOC2 @ 0x8002
  2568                           ;	unspecified, using default values
  2569     8002                     	org	32770
  2570     8002  3FFF               	dw	16383
  2571                           
  2572                           ;Config register IDLOC3 @ 0x8003
  2573                           ;	unspecified, using default values
  2574     8003                     	org	32771
  2575     8003  3FFF               	dw	16383
  2576                           
  2577                           	psect	config
  2578                           
  2579                           ;Config register CONFIG1 @ 0x8007
  2580                           ;	Oscillator Selection
  2581                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2582                           ;	Watchdog Timer Enable
  2583                           ;	WDTE = ON, WDT enabled
  2584                           ;	Power-up Timer Enable
  2585                           ;	PWRTE = OFF, PWRT disabled
  2586                           ;	MCLR Pin Function Select
  2587                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2588                           ;	Flash Program Memory Code Protection
  2589                           ;	CP = OFF, Program memory code protection is disabled
  2590                           ;	Data Memory Code Protection
  2591                           ;	CPD = OFF, Data memory code protection is disabled
  2592                           ;	Brown-out Reset Enable
  2593                           ;	BOREN = ON, Brown-out Reset enabled
  2594                           ;	Clock Out Enable
  2595                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2596                           ;	Internal/External Switchover
  2597                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2598                           ;	Fail-Safe Clock Monitor Enable
  2599                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2600     8007                     	org	32775
  2601     8007  3FFC               	dw	16380
  2602                           
  2603                           ;Config register CONFIG2 @ 0x8008
  2604                           ;	Flash Memory Self-Write Protection
  2605                           ;	WRT = OFF, Write protection off
  2606                           ;	PLL Enable
  2607                           ;	PLLEN = OFF, 4x PLL disabled
  2608                           ;	Stack Overflow/Underflow Reset Enable
  2609                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2610                           ;	Brown-out Reset Voltage Selection
  2611                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2612                           ;	Low-Voltage Programming Enable
  2613                           ;	LVP = ON, Low-voltage programming enabled
  2614     8008                     	org	32776
  2615     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      55
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    UART_print@cadena	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    sp__ASCII_Con	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    sp__BinTOBcd	PTR int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    INT_TMR0@B	PTR int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INT_TMR0 in COMMON

    _UART_print->_UART_write
    _BinTOBcd->___almod
    ___almod->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_TMR0 in BANK0

    _INT_TMR0->_BinTOBcd
    _BinTOBcd->___almod
    ___almod->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_TMR0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_TMR0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_TMR0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_TMR0 in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _init_IO
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT_TMR0                                             6     6      0    3032
                                             36 BANK0      6     6      0
                          _ASCII_Con
                           _BinTOBcd
                         _UART_print
 ---------------------------------------------------------------------------------
 (4) _UART_print                                           2     2      0     100
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (5) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _BinTOBcd                                            12     8      4    2571
                                             24 BANK0     12     8      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     548
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___almod                                             11     3      8     600
                                             13 COMMON     1     1      0
                                             14 BANK0     10     2      8
                            ___aldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             15     7      8    1212
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _ASCII_Con                                            6     0      6     294
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_IO
     _init_UART
   _readADC

 _INT_TMR0 (ROOT)
   _ASCII_Con
   _BinTOBcd
     ___aldiv
       ___lmul (ARG)
     ___almod
       ___aldiv (ARG)
       ___lmul (ARG)
     ___lmul
   _UART_print
     _UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      45       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      45      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 18 11:48:13 2023

                     l23 032B                       l50 0327                      l110 02AD  
                    l113 031C                      l963 0310                      l965 0319  
                    l967 031B                      wreg 0009                     l1101 0287  
                   l1111 028C                     l1103 0288                     l1121 029D  
                   l1113 028D                     l1105 0289                     l1131 02A3  
                   l1123 029F                     l1115 0291                     l1107 028A  
                   l1141 02A8                     l1133 02A4                     l1125 02A0  
                   l1117 0295                     l1109 028B                     l1061 0270  
                   l1143 02A9                     l1135 02A5                     l1127 02A1  
                   l1119 0296                     l1071 0276                     l1063 0271  
                   l1055 0266                     l1151 0325                     l1145 02AA  
                   l1137 02A6                     l1129 02A2                     l1081 027B  
                   l1073 0277                     l1065 0272                     l1057 026D  
                   l1153 0326                     l1139 02A7                     l1091 0281  
                   l1083 027D                     l1075 0278                     l1067 0273  
                   l1059 026F                     l1147 031D                     l1093 0282  
                   l1085 027E                     l1077 0279                     l1069 0275  
                   l1149 031F                     l1095 0283                     l1087 027F  
                   l1079 027A                     l1097 0285                     l1089 0280  
                   l1099 0286                     l1189 0328                     i1l32 0047  
                   i1l53 0335                     i1l62 02FC                     i1l47 0159  
                   i1l56 0339                     i1l67 030F                     _main 0328  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0049          __end_of___aldiv 01EA  
        __end_of___almod 0266                    ?_main 0070         __end_of_INT_TMR0 0049  
                  i1l341 01FD                    i1l351 0265                    i1l328 016D  
                  i1l338 01E9                    i1l277 02E0                    i1l961 0332  
                  i1l971 02B6                    i1l973 02BA                    i1l991 017C  
                  i1l983 015A                    i1l975 02C2                    i1l993 0180  
                  i1l985 015C                    i1l977 02C9                    i1l969 02AE  
                  i1l995 0188                    i1l987 0160                    i1l979 02D8  
                  i1l997 0190                    i1l989 0171                    i1l999 0193  
                  u30_25 02CA                    u31_20 02D8                    u31_21 02D7  
                  u40_20 01D1                    u32_20 0160                    u40_21 01D0  
                  u32_21 015F                    u41_20 01D6                    u33_20 0171  
                  u41_21 01D5                    u33_21 0170                    u34_20 0190  
                  u50_20 0252                    u42_20 01F0                    u34_21 018F  
                  u50_21 0251                    u42_21 01EF                    _SPBRG 019B  
                  u43_20 0201                    u27_20 0339                    u51_20 02F6  
                  u43_21 0200                    u27_21 0338                    u51_21 02F5  
                  u35_25 0194                    u36_20 01A2                    u44_20 0214  
                  u28_20 02BA                    u52_20 000B                    u36_21 01A1  
                  u44_21 0213                    u28_21 02B9                    u52_21 000A  
                  u37_25 01A3                    u45_25 0218                    u29_25 02C3  
                  u38_20 01BB                    u46_20 0226                    u38_21 01BA  
                  u46_21 0225                    u38_25 01B7                    u47_20 0238  
                  u47_21 0237                    u39_25 01C5                    u47_25 0234  
                  u48_25 0241                    u49_20 024D                    u49_21 024C  
                  _TXREG 019A      ___lmul@multiplicand 0074          __end_of_readADC 0328  
        __end_of_init_IO 02AE              ?_UART_print 0070              ?_UART_write 0070  
       __end_of_BinTOBcd 015A            _BinTOBcd$1336 0040            _BinTOBcd$1337 003C  
                  status 0003                    wtemp0 007E        __end_of_ASCII_Con 0310  
        __initialization 004B             __end_of_main 0331                   ??_main 0000  
                 _ADRESH 009C                   _ADRESL 009B                   i1l1001 019E  
                 i1l1011 01C4                   i1l1003 01A2                   i1l1013 01CB  
                 i1l1005 01A9                   i1l1007 01BB                   i1l1015 01D1  
                 i1l1031 020C                   i1l1023 01EA                   i1l1017 01D6  
                 i1l1009 01C3                   i1l1041 0238                   i1l1033 0214  
                 i1l1025 01EC                   i1l1019 01E1                   i1l1051 025D  
                 i1l1043 0240                   i1l1035 0217                   i1l1027 01F0  
                 i1l1045 0247                   i1l1037 0222                   i1l1029 0201  
                 i1l1039 0226                   i1l1047 024D                   i1l1161 02FD  
                 i1l1049 0252                   i1l1171 030B                   i1l1163 0301  
                 i1l1155 0057                   i1l1173 030D                   i1l1165 0303  
                 i1l1157 0158                   i1l1181 02E3                   i1l1175 030E  
                 i1l1167 0306                   i1l1183 02EA                   i1l1191 0006  
                 i1l1169 0309                   i1l1185 02EE                   i1l1193 000B  
                 i1l1187 02F6                   i1l1179 02E2                   i1l1195 000E  
                 i1l1197 002A                   ___lmul 02AE                ??___aldiv 007C  
              ??___almod 007D                ??_readADC 0000                ??_init_IO 0000  
__end_of__initialization 0053                ?_INT_TMR0 0070             BinTOBcd@iADC 0038  
         __pcstackCOMMON 0070                ?_BinTOBcd 0038                INT_TMR0@B 0049  
             __pbssBANK0 004A               ??_INT_TMR0 0044               __pmaintext 0328  
                ?___lmul 0070               __pintentry 0004           ___lmul@product 0078  
             ??_BinTOBcd 007E             ??_UART_print 0071             ??_UART_write 0070  
                ___aldiv 015A                  ___almod 01EA                _ASCII_Con 02FD  
              BinTOBcd@r 0051               ASCII_Con@a 0070               ASCII_Con@b 0072  
             ASCII_Con@c 0074               ASCII_Con@r 004A       __end_of_UART_print 02FD  
     __end_of_UART_write 033A                  __ptext1 031D                  __ptext2 0266  
                __ptext3 0310                  __ptext5 02E1                  __ptext6 0331  
                __ptext7 0057                  __ptext8 02AE                  __ptext9 01EA  
      __end_of_init_UART 031D                  _readADC 031D                  _init_IO 0266  
       ___aldiv@dividend 0024                  clrloop0 033B     end_of_initialization 0053  
              _RCSTAbits 019D              UART_write@c 0070         ___aldiv@quotient 002A  
             ?_ASCII_Con 0070                _TRISAbits 008C                _TRISBbits 008D  
              _TXSTAbits 019E           __end_of___lmul 02E1              _BAUDCONbits 019F  
    start_initialization 004B              _APFCON1bits 011E                 ??___lmul 0078  
            ??_ASCII_Con 0076                ___latbits 0001            __pcstackBANK0 0020  
          __pcstackBANK1 0000                 ?___aldiv 0020                 ?___almod 002E  
       ___almod@dividend 0032                 ?_readADC 0070                 ?_init_IO 0070  
              _init_UART 0310          ___aldiv@divisor 0020          ___aldiv@counter 0028  
               _LATAbits 010C                 _LATBbits 010D                clear_ram0 033A  
               _PIE1bits 0091                 _INT_TMR0 0004                 _PIR1bits 0011  
             _ADCON0bits 009D               _ADCON1bits 009E                 _BinTOBcd 0057  
             ?_init_UART 0070        ___lmul@multiplier 0070         UART_print@cadena 0072  
             _ANSELAbits 018C               _ANSELBbits 018D                 __ptext10 015A  
               __ptext11 02FD          ___almod@divisor 002E          ___almod@counter 0036  
               int$flags 007E               _INTCONbits 000B               _FVRCONbits 0117  
            ??_init_UART 0000                 intlevel1 0000               _OSCCONbits 0099  
           ___aldiv@sign 0029               _WDTCONbits 0097               _UART_print 02E1  
             _UART_write 0331             ___almod@sign 0037  
