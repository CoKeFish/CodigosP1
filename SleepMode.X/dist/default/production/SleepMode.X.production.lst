

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 18 13:14:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1827 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0095                     	;# 
    97     0096                     	;# 
    98     0097                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009A                     	;# 
   102     009B                     	;# 
   103     009B                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     0111                     	;# 
   110     0112                     	;# 
   111     0113                     	;# 
   112     0114                     	;# 
   113     0115                     	;# 
   114     0116                     	;# 
   115     0117                     	;# 
   116     0118                     	;# 
   117     0119                     	;# 
   118     011A                     	;# 
   119     011B                     	;# 
   120     011D                     	;# 
   121     011E                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     0191                     	;# 
   125     0191                     	;# 
   126     0192                     	;# 
   127     0193                     	;# 
   128     0193                     	;# 
   129     0193                     	;# 
   130     0194                     	;# 
   131     0195                     	;# 
   132     0196                     	;# 
   133     0199                     	;# 
   134     019A                     	;# 
   135     019B                     	;# 
   136     019B                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019C                     	;# 
   140     019C                     	;# 
   141     019D                     	;# 
   142     019E                     	;# 
   143     019F                     	;# 
   144     020C                     	;# 
   145     020D                     	;# 
   146     0211                     	;# 
   147     0211                     	;# 
   148     0212                     	;# 
   149     0212                     	;# 
   150     0213                     	;# 
   151     0213                     	;# 
   152     0214                     	;# 
   153     0214                     	;# 
   154     0215                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0216                     	;# 
   158     0216                     	;# 
   159     0217                     	;# 
   160     0217                     	;# 
   161     0219                     	;# 
   162     021A                     	;# 
   163     021B                     	;# 
   164     021C                     	;# 
   165     021D                     	;# 
   166     021E                     	;# 
   167     021F                     	;# 
   168     0291                     	;# 
   169     0291                     	;# 
   170     0292                     	;# 
   171     0293                     	;# 
   172     0294                     	;# 
   173     0295                     	;# 
   174     0295                     	;# 
   175     0296                     	;# 
   176     0298                     	;# 
   177     0298                     	;# 
   178     0299                     	;# 
   179     029A                     	;# 
   180     029B                     	;# 
   181     029C                     	;# 
   182     029C                     	;# 
   183     029D                     	;# 
   184     029E                     	;# 
   185     029E                     	;# 
   186     0311                     	;# 
   187     0311                     	;# 
   188     0312                     	;# 
   189     0313                     	;# 
   190     0318                     	;# 
   191     0318                     	;# 
   192     0319                     	;# 
   193     031A                     	;# 
   194     0394                     	;# 
   195     0395                     	;# 
   196     0396                     	;# 
   197     039A                     	;# 
   198     039C                     	;# 
   199     039D                     	;# 
   200     039E                     	;# 
   201     039F                     	;# 
   202     0415                     	;# 
   203     0416                     	;# 
   204     0417                     	;# 
   205     041C                     	;# 
   206     041D                     	;# 
   207     041E                     	;# 
   208     0FE4                     	;# 
   209     0FE5                     	;# 
   210     0FE6                     	;# 
   211     0FE7                     	;# 
   212     0FE8                     	;# 
   213     0FE9                     	;# 
   214     0FEA                     	;# 
   215     0FEB                     	;# 
   216     0FED                     	;# 
   217     0FEE                     	;# 
   218     0FEF                     	;# 
   219     0000                     	;# 
   220     0001                     	;# 
   221     0002                     	;# 
   222     0003                     	;# 
   223     0004                     	;# 
   224     0005                     	;# 
   225     0006                     	;# 
   226     0007                     	;# 
   227     0008                     	;# 
   228     0009                     	;# 
   229     000A                     	;# 
   230     000B                     	;# 
   231     000C                     	;# 
   232     000D                     	;# 
   233     0011                     	;# 
   234     0012                     	;# 
   235     0013                     	;# 
   236     0014                     	;# 
   237     0015                     	;# 
   238     0016                     	;# 
   239     0016                     	;# 
   240     0017                     	;# 
   241     0018                     	;# 
   242     0019                     	;# 
   243     001A                     	;# 
   244     001B                     	;# 
   245     001C                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     008C                     	;# 
   249     008D                     	;# 
   250     0091                     	;# 
   251     0092                     	;# 
   252     0093                     	;# 
   253     0094                     	;# 
   254     0095                     	;# 
   255     0096                     	;# 
   256     0097                     	;# 
   257     0098                     	;# 
   258     0099                     	;# 
   259     009A                     	;# 
   260     009B                     	;# 
   261     009B                     	;# 
   262     009C                     	;# 
   263     009D                     	;# 
   264     009E                     	;# 
   265     010C                     	;# 
   266     010D                     	;# 
   267     0111                     	;# 
   268     0112                     	;# 
   269     0113                     	;# 
   270     0114                     	;# 
   271     0115                     	;# 
   272     0116                     	;# 
   273     0117                     	;# 
   274     0118                     	;# 
   275     0119                     	;# 
   276     011A                     	;# 
   277     011B                     	;# 
   278     011D                     	;# 
   279     011E                     	;# 
   280     018C                     	;# 
   281     018D                     	;# 
   282     0191                     	;# 
   283     0191                     	;# 
   284     0192                     	;# 
   285     0193                     	;# 
   286     0193                     	;# 
   287     0193                     	;# 
   288     0194                     	;# 
   289     0195                     	;# 
   290     0196                     	;# 
   291     0199                     	;# 
   292     019A                     	;# 
   293     019B                     	;# 
   294     019B                     	;# 
   295     019B                     	;# 
   296     019B                     	;# 
   297     019C                     	;# 
   298     019C                     	;# 
   299     019D                     	;# 
   300     019E                     	;# 
   301     019F                     	;# 
   302     020C                     	;# 
   303     020D                     	;# 
   304     0211                     	;# 
   305     0211                     	;# 
   306     0212                     	;# 
   307     0212                     	;# 
   308     0213                     	;# 
   309     0213                     	;# 
   310     0214                     	;# 
   311     0214                     	;# 
   312     0215                     	;# 
   313     0215                     	;# 
   314     0215                     	;# 
   315     0216                     	;# 
   316     0216                     	;# 
   317     0217                     	;# 
   318     0217                     	;# 
   319     0219                     	;# 
   320     021A                     	;# 
   321     021B                     	;# 
   322     021C                     	;# 
   323     021D                     	;# 
   324     021E                     	;# 
   325     021F                     	;# 
   326     0291                     	;# 
   327     0291                     	;# 
   328     0292                     	;# 
   329     0293                     	;# 
   330     0294                     	;# 
   331     0295                     	;# 
   332     0295                     	;# 
   333     0296                     	;# 
   334     0298                     	;# 
   335     0298                     	;# 
   336     0299                     	;# 
   337     029A                     	;# 
   338     029B                     	;# 
   339     029C                     	;# 
   340     029C                     	;# 
   341     029D                     	;# 
   342     029E                     	;# 
   343     029E                     	;# 
   344     0311                     	;# 
   345     0311                     	;# 
   346     0312                     	;# 
   347     0313                     	;# 
   348     0318                     	;# 
   349     0318                     	;# 
   350     0319                     	;# 
   351     031A                     	;# 
   352     0394                     	;# 
   353     0395                     	;# 
   354     0396                     	;# 
   355     039A                     	;# 
   356     039C                     	;# 
   357     039D                     	;# 
   358     039E                     	;# 
   359     039F                     	;# 
   360     0415                     	;# 
   361     0416                     	;# 
   362     0417                     	;# 
   363     041C                     	;# 
   364     041D                     	;# 
   365     041E                     	;# 
   366     0FE4                     	;# 
   367     0FE5                     	;# 
   368     0FE6                     	;# 
   369     0FE7                     	;# 
   370     0FE8                     	;# 
   371     0FE9                     	;# 
   372     0FEA                     	;# 
   373     0FEB                     	;# 
   374     0FED                     	;# 
   375     0FEE                     	;# 
   376     0FEF                     	;# 
   377     0000                     	;# 
   378     0001                     	;# 
   379     0002                     	;# 
   380     0003                     	;# 
   381     0004                     	;# 
   382     0005                     	;# 
   383     0006                     	;# 
   384     0007                     	;# 
   385     0008                     	;# 
   386     0009                     	;# 
   387     000A                     	;# 
   388     000B                     	;# 
   389     000C                     	;# 
   390     000D                     	;# 
   391     0011                     	;# 
   392     0012                     	;# 
   393     0013                     	;# 
   394     0014                     	;# 
   395     0015                     	;# 
   396     0016                     	;# 
   397     0016                     	;# 
   398     0017                     	;# 
   399     0018                     	;# 
   400     0019                     	;# 
   401     001A                     	;# 
   402     001B                     	;# 
   403     001C                     	;# 
   404     001E                     	;# 
   405     001F                     	;# 
   406     008C                     	;# 
   407     008D                     	;# 
   408     0091                     	;# 
   409     0092                     	;# 
   410     0093                     	;# 
   411     0094                     	;# 
   412     0095                     	;# 
   413     0096                     	;# 
   414     0097                     	;# 
   415     0098                     	;# 
   416     0099                     	;# 
   417     009A                     	;# 
   418     009B                     	;# 
   419     009B                     	;# 
   420     009C                     	;# 
   421     009D                     	;# 
   422     009E                     	;# 
   423     010C                     	;# 
   424     010D                     	;# 
   425     0111                     	;# 
   426     0112                     	;# 
   427     0113                     	;# 
   428     0114                     	;# 
   429     0115                     	;# 
   430     0116                     	;# 
   431     0117                     	;# 
   432     0118                     	;# 
   433     0119                     	;# 
   434     011A                     	;# 
   435     011B                     	;# 
   436     011D                     	;# 
   437     011E                     	;# 
   438     018C                     	;# 
   439     018D                     	;# 
   440     0191                     	;# 
   441     0191                     	;# 
   442     0192                     	;# 
   443     0193                     	;# 
   444     0193                     	;# 
   445     0193                     	;# 
   446     0194                     	;# 
   447     0195                     	;# 
   448     0196                     	;# 
   449     0199                     	;# 
   450     019A                     	;# 
   451     019B                     	;# 
   452     019B                     	;# 
   453     019B                     	;# 
   454     019B                     	;# 
   455     019C                     	;# 
   456     019C                     	;# 
   457     019D                     	;# 
   458     019E                     	;# 
   459     019F                     	;# 
   460     020C                     	;# 
   461     020D                     	;# 
   462     0211                     	;# 
   463     0211                     	;# 
   464     0212                     	;# 
   465     0212                     	;# 
   466     0213                     	;# 
   467     0213                     	;# 
   468     0214                     	;# 
   469     0214                     	;# 
   470     0215                     	;# 
   471     0215                     	;# 
   472     0215                     	;# 
   473     0216                     	;# 
   474     0216                     	;# 
   475     0217                     	;# 
   476     0217                     	;# 
   477     0219                     	;# 
   478     021A                     	;# 
   479     021B                     	;# 
   480     021C                     	;# 
   481     021D                     	;# 
   482     021E                     	;# 
   483     021F                     	;# 
   484     0291                     	;# 
   485     0291                     	;# 
   486     0292                     	;# 
   487     0293                     	;# 
   488     0294                     	;# 
   489     0295                     	;# 
   490     0295                     	;# 
   491     0296                     	;# 
   492     0298                     	;# 
   493     0298                     	;# 
   494     0299                     	;# 
   495     029A                     	;# 
   496     029B                     	;# 
   497     029C                     	;# 
   498     029C                     	;# 
   499     029D                     	;# 
   500     029E                     	;# 
   501     029E                     	;# 
   502     0311                     	;# 
   503     0311                     	;# 
   504     0312                     	;# 
   505     0313                     	;# 
   506     0318                     	;# 
   507     0318                     	;# 
   508     0319                     	;# 
   509     031A                     	;# 
   510     0394                     	;# 
   511     0395                     	;# 
   512     0396                     	;# 
   513     039A                     	;# 
   514     039C                     	;# 
   515     039D                     	;# 
   516     039E                     	;# 
   517     039F                     	;# 
   518     0415                     	;# 
   519     0416                     	;# 
   520     0417                     	;# 
   521     041C                     	;# 
   522     041D                     	;# 
   523     041E                     	;# 
   524     0FE4                     	;# 
   525     0FE5                     	;# 
   526     0FE6                     	;# 
   527     0FE7                     	;# 
   528     0FE8                     	;# 
   529     0FE9                     	;# 
   530     0FEA                     	;# 
   531     0FEB                     	;# 
   532     0FED                     	;# 
   533     0FEE                     	;# 
   534     0FEF                     	;# 
   535     0000                     	;# 
   536     0001                     	;# 
   537     0002                     	;# 
   538     0003                     	;# 
   539     0004                     	;# 
   540     0005                     	;# 
   541     0006                     	;# 
   542     0007                     	;# 
   543     0008                     	;# 
   544     0009                     	;# 
   545     000A                     	;# 
   546     000B                     	;# 
   547     000C                     	;# 
   548     000D                     	;# 
   549     0011                     	;# 
   550     0012                     	;# 
   551     0013                     	;# 
   552     0014                     	;# 
   553     0015                     	;# 
   554     0016                     	;# 
   555     0016                     	;# 
   556     0017                     	;# 
   557     0018                     	;# 
   558     0019                     	;# 
   559     001A                     	;# 
   560     001B                     	;# 
   561     001C                     	;# 
   562     001E                     	;# 
   563     001F                     	;# 
   564     008C                     	;# 
   565     008D                     	;# 
   566     0091                     	;# 
   567     0092                     	;# 
   568     0093                     	;# 
   569     0094                     	;# 
   570     0095                     	;# 
   571     0096                     	;# 
   572     0097                     	;# 
   573     0098                     	;# 
   574     0099                     	;# 
   575     009A                     	;# 
   576     009B                     	;# 
   577     009B                     	;# 
   578     009C                     	;# 
   579     009D                     	;# 
   580     009E                     	;# 
   581     010C                     	;# 
   582     010D                     	;# 
   583     0111                     	;# 
   584     0112                     	;# 
   585     0113                     	;# 
   586     0114                     	;# 
   587     0115                     	;# 
   588     0116                     	;# 
   589     0117                     	;# 
   590     0118                     	;# 
   591     0119                     	;# 
   592     011A                     	;# 
   593     011B                     	;# 
   594     011D                     	;# 
   595     011E                     	;# 
   596     018C                     	;# 
   597     018D                     	;# 
   598     0191                     	;# 
   599     0191                     	;# 
   600     0192                     	;# 
   601     0193                     	;# 
   602     0193                     	;# 
   603     0193                     	;# 
   604     0194                     	;# 
   605     0195                     	;# 
   606     0196                     	;# 
   607     0199                     	;# 
   608     019A                     	;# 
   609     019B                     	;# 
   610     019B                     	;# 
   611     019B                     	;# 
   612     019B                     	;# 
   613     019C                     	;# 
   614     019C                     	;# 
   615     019D                     	;# 
   616     019E                     	;# 
   617     019F                     	;# 
   618     020C                     	;# 
   619     020D                     	;# 
   620     0211                     	;# 
   621     0211                     	;# 
   622     0212                     	;# 
   623     0212                     	;# 
   624     0213                     	;# 
   625     0213                     	;# 
   626     0214                     	;# 
   627     0214                     	;# 
   628     0215                     	;# 
   629     0215                     	;# 
   630     0215                     	;# 
   631     0216                     	;# 
   632     0216                     	;# 
   633     0217                     	;# 
   634     0217                     	;# 
   635     0219                     	;# 
   636     021A                     	;# 
   637     021B                     	;# 
   638     021C                     	;# 
   639     021D                     	;# 
   640     021E                     	;# 
   641     021F                     	;# 
   642     0291                     	;# 
   643     0291                     	;# 
   644     0292                     	;# 
   645     0293                     	;# 
   646     0294                     	;# 
   647     0295                     	;# 
   648     0295                     	;# 
   649     0296                     	;# 
   650     0298                     	;# 
   651     0298                     	;# 
   652     0299                     	;# 
   653     029A                     	;# 
   654     029B                     	;# 
   655     029C                     	;# 
   656     029C                     	;# 
   657     029D                     	;# 
   658     029E                     	;# 
   659     029E                     	;# 
   660     0311                     	;# 
   661     0311                     	;# 
   662     0312                     	;# 
   663     0313                     	;# 
   664     0318                     	;# 
   665     0318                     	;# 
   666     0319                     	;# 
   667     031A                     	;# 
   668     0394                     	;# 
   669     0395                     	;# 
   670     0396                     	;# 
   671     039A                     	;# 
   672     039C                     	;# 
   673     039D                     	;# 
   674     039E                     	;# 
   675     039F                     	;# 
   676     0415                     	;# 
   677     0416                     	;# 
   678     0417                     	;# 
   679     041C                     	;# 
   680     041D                     	;# 
   681     041E                     	;# 
   682     0FE4                     	;# 
   683     0FE5                     	;# 
   684     0FE6                     	;# 
   685     0FE7                     	;# 
   686     0FE8                     	;# 
   687     0FE9                     	;# 
   688     0FEA                     	;# 
   689     0FEB                     	;# 
   690     0FED                     	;# 
   691     0FEE                     	;# 
   692     0FEF                     	;# 
   693     000B                     _INTCONbits	set	11
   694     0011                     _PIR1bits	set	17
   695     0091                     _PIE1bits	set	145
   696     009E                     _ADCON1bits	set	158
   697     008D                     _TRISBbits	set	141
   698     008C                     _TRISAbits	set	140
   699     0099                     _OSCCONbits	set	153
   700     0097                     _WDTCONbits	set	151
   701     009B                     _ADRESL	set	155
   702     009C                     _ADRESH	set	156
   703     009D                     _ADCON0bits	set	157
   704     011E                     _APFCON1bits	set	286
   705     010D                     _LATBbits	set	269
   706     010C                     _LATAbits	set	268
   707     0117                     _FVRCONbits	set	279
   708     019D                     _RCSTAbits	set	413
   709     019B                     _SPBRG	set	411
   710     019F                     _BAUDCONbits	set	415
   711     018D                     _ANSELBbits	set	397
   712     018C                     _ANSELAbits	set	396
   713     019E                     _TXSTAbits	set	414
   714     019A                     _TXREG	set	410
   715                           
   716                           	psect	cinit
   717     004B                     start_initialization:	
   718                           ; #config settings
   719                           
   720     004B                     __initialization:
   721                           
   722                           ; Clear objects allocated to BANK0
   723     004B  3048               	movlw	low __pbssBANK0
   724     004C  0084               	movwf	4
   725     004D  3000               	movlw	high __pbssBANK0
   726     004E  0085               	movwf	5
   727     004F  300D               	movlw	13
   728     0050  3182  22A7  3180   	fcall	clear_ram0
   729     0053                     end_of_initialization:	
   730                           ;End of C runtime variable initialization code
   731                           
   732     0053                     __end_of__initialization:
   733     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   734     0054  0020               	movlb	0
   735     0055  3182  2A95         	ljmp	_main	;jump to C main() function
   736                           
   737                           	psect	bssBANK0
   738     0048                     __pbssBANK0:
   739     0048                     ASCII_Con@r:
   740     0048                     	ds	7
   741     004F                     BinTOBcd@r:
   742     004F                     	ds	6
   743                           
   744                           	psect	clrtext
   745     02A7                     clear_ram0:	
   746                           ;	Called with FSR0 containing the base address, and
   747                           ;	WREG with the size to clear
   748                           
   749     02A7  0064               	clrwdt	;clear the watchdog before getting into this loop
   750     02A8                     clrloop0:
   751     02A8  0180               	clrf	0	;clear RAM location pointed to by FSR
   752     02A9  3101               	addfsr 0,1
   753     02AA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   754     02AB  2AA8               	goto	clrloop0	;have we reached the end yet?
   755     02AC  3400               	retlw	0	;all done for this memory range, return
   756                           
   757                           	psect	cstackBANK1
   758     0000                     __pcstackBANK1:
   759     0000                     ??_init_IO:
   760     0000                     ??_readADC:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0000                     ??_init_UART:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0000                     ??_main:	
   767                           ; 1 bytes @ 0x0
   768                           
   769                           
   770                           	psect	cstackCOMMON
   771     0070                     __pcstackCOMMON:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_init_IO:
   775     0070                     ?_readADC:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0070                     ?_UART_print:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ?_ASCII_Con:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ?_init_UART:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ?_main:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?_INT_TMR0:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ?_UART_write:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ??_UART_write:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ?___lmul:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     UART_write@c:	
   803                           ; 4 bytes @ 0x0
   804                           
   805     0070                     ASCII_Con@a:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ___lmul@multiplier:	
   809                           ; 2 bytes @ 0x0
   810                           
   811                           
   812                           ; 4 bytes @ 0x0
   813     0070                     	ds	1
   814     0071                     ??_UART_print:
   815                           
   816                           ; 1 bytes @ 0x1
   817     0071                     	ds	1
   818     0072                     UART_print@cadena:
   819     0072                     ASCII_Con@b:	
   820                           ; 1 bytes @ 0x2
   821                           
   822                           
   823                           ; 2 bytes @ 0x2
   824     0072                     	ds	2
   825     0074                     ASCII_Con@c:
   826     0074                     ___lmul@multiplicand:	
   827                           ; 2 bytes @ 0x4
   828                           
   829                           
   830                           ; 4 bytes @ 0x4
   831     0074                     	ds	2
   832     0076                     ??_ASCII_Con:
   833                           
   834                           ; 1 bytes @ 0x6
   835     0076                     	ds	2
   836     0078                     ??___lmul:
   837     0078                     ___lmul@product:	
   838                           ; 1 bytes @ 0x8
   839                           
   840                           
   841                           ; 4 bytes @ 0x8
   842     0078                     	ds	4
   843     007C                     ??___lldiv:
   844                           
   845                           ; 1 bytes @ 0xC
   846     007C                     	ds	1
   847     007D                     ??___llmod:
   848                           
   849                           ; 1 bytes @ 0xD
   850     007D                     	ds	1
   851                           
   852                           	psect	cstackBANK0
   853     0020                     __pcstackBANK0:
   854     0020                     ?___lldiv:
   855     0020                     ___lldiv@divisor:	
   856                           ; 4 bytes @ 0x0
   857                           
   858                           
   859                           ; 4 bytes @ 0x0
   860     0020                     	ds	4
   861     0024                     ___lldiv@dividend:
   862                           
   863                           ; 4 bytes @ 0x4
   864     0024                     	ds	4
   865     0028                     ___lldiv@quotient:
   866                           
   867                           ; 4 bytes @ 0x8
   868     0028                     	ds	4
   869     002C                     ___lldiv@counter:
   870                           
   871                           ; 1 bytes @ 0xC
   872     002C                     	ds	1
   873     002D                     ?___llmod:
   874     002D                     ___llmod@divisor:	
   875                           ; 4 bytes @ 0xD
   876                           
   877                           
   878                           ; 4 bytes @ 0xD
   879     002D                     	ds	4
   880     0031                     ___llmod@dividend:
   881                           
   882                           ; 4 bytes @ 0x11
   883     0031                     	ds	4
   884     0035                     ___llmod@counter:
   885                           
   886                           ; 1 bytes @ 0x15
   887     0035                     	ds	1
   888     0036                     ?_BinTOBcd:
   889     0036                     BinTOBcd@iADC:	
   890                           ; 1 bytes @ 0x16
   891                           
   892                           
   893                           ; 4 bytes @ 0x16
   894     0036                     	ds	4
   895     003A                     ??_BinTOBcd:
   896                           
   897                           ; 1 bytes @ 0x1A
   898     003A                     	ds	4
   899     003E                     _BinTOBcd$1316:
   900                           
   901                           ; 4 bytes @ 0x1E
   902     003E                     	ds	4
   903     0042                     ??_INT_TMR0:
   904                           
   905                           ; 1 bytes @ 0x22
   906     0042                     	ds	5
   907     0047                     INT_TMR0@B:
   908                           
   909                           ; 1 bytes @ 0x27
   910     0047                     	ds	1
   911                           
   912                           	psect	maintext
   913     0295                     __pmaintext:	
   914 ;;
   915 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   916 ;;
   917 ;; *************** function _main *****************
   918 ;; Defined at:
   919 ;;		line 16 in file "main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : B1F/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   933 ;;      Params:         0       0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels required when called: 5
   939 ;; This function calls:
   940 ;;		_init_IO
   941 ;;		_readADC
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947     0295                     _main:	
   948                           ;psect for function _main
   949                           
   950     0295                     l1217:	
   951                           ;incstack = 0
   952                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   953                           
   954                           
   955                           ;main.c: 17:     init_IO();
   956     0295  3181  21E1  3182   	fcall	_init_IO
   957     0298                     l1219:
   958                           
   959                           ;main.c: 21:     {;main.c: 22:         readADC();
   960     0298  3182  22AD  3182   	fcall	_readADC
   961     029B  2A98               	goto	l1219
   962     029C  3180  2849         	ljmp	start
   963     029E                     __end_of_main:
   964                           
   965                           	psect	text1
   966     02AD                     __ptext1:	
   967 ;; *************** function _readADC *****************
   968 ;; Defined at:
   969 ;;		line 27 in file "funtions.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		None
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   983 ;;      Params:         0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; Hardware stack levels required when called: 3
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997     02AD                     _readADC:	
   998                           ;psect for function _readADC
   999                           
  1000     02AD                     l1215:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _readADC: []
  1003                           
  1004                           
  1005                           ;funtions.c: 29:     ADCON0bits.ADON = 1;
  1006     02AD  0021               	movlb	1	; select bank1
  1007     02AE  141D               	bsf	29,0	;volatile
  1008                           
  1009                           ;funtions.c: 31:     ADCON0bits.GO_nDONE = 1;
  1010     02AF  149D               	bsf	29,1	;volatile
  1011     02B0                     l48:
  1012     02B0  0008               	return
  1013     02B1                     __end_of_readADC:
  1014                           
  1015                           	psect	text2
  1016     01E1                     __ptext2:	
  1017 ;; *************** function _init_IO *****************
  1018 ;; Defined at:
  1019 ;;		line 4 in file "init.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, pclath, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1033 ;;      Params:         0       0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 4
  1040 ;; This function calls:
  1041 ;;		_init_UART
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047     01E1                     _init_IO:	
  1048                           ;psect for function _init_IO
  1049                           
  1050     01E1                     l1129:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _init_IO: [wreg+status,2+status,0+pclath+cstack]
  1053                           
  1054                           
  1055                           ;init.c: 7:     OSCCONbits.SCS = 0;
  1056     01E1  30FC               	movlw	-4
  1057     01E2  0021               	movlb	1	; select bank1
  1058     01E3  0599               	andwf	25,f	;volatile
  1059                           
  1060                           ;init.c: 8:     OSCCONbits.IRCF = 0b1101;
  1061     01E4  0819               	movf	25,w	;volatile
  1062     01E5  3987               	andlw	-121
  1063     01E6  3868               	iorlw	104
  1064     01E7  0099               	movwf	25	;volatile
  1065     01E8                     l1131:
  1066                           
  1067                           ;init.c: 14:     ANSELAbits.ANSA0 = 1;
  1068     01E8  0023               	movlb	3	; select bank3
  1069     01E9  140C               	bsf	12,0	;volatile
  1070     01EA                     l1133:
  1071                           
  1072                           ;init.c: 15:     ANSELAbits.ANSA1 = 0;
  1073     01EA  108C               	bcf	12,1	;volatile
  1074     01EB                     l1135:
  1075                           
  1076                           ;init.c: 16:     ANSELAbits.ANSA2 = 0;
  1077     01EB  110C               	bcf	12,2	;volatile
  1078     01EC                     l1137:
  1079                           
  1080                           ;init.c: 17:     ANSELAbits.ANSA3 = 0;
  1081     01EC  118C               	bcf	12,3	;volatile
  1082     01ED                     l1139:
  1083                           
  1084                           ;init.c: 18:     ANSELAbits.ANSA4 = 0;
  1085     01ED  120C               	bcf	12,4	;volatile
  1086     01EE                     l1141:
  1087                           
  1088                           ;init.c: 21:     TRISAbits.TRISA0 = 1;
  1089     01EE  0021               	movlb	1	; select bank1
  1090     01EF  140C               	bsf	12,0	;volatile
  1091     01F0                     l1143:
  1092                           
  1093                           ;init.c: 22:     TRISAbits.TRISA1 = 0;
  1094     01F0  108C               	bcf	12,1	;volatile
  1095     01F1                     l1145:
  1096                           
  1097                           ;init.c: 23:     TRISAbits.TRISA2 = 0;
  1098     01F1  110C               	bcf	12,2	;volatile
  1099     01F2                     l1147:
  1100                           
  1101                           ;init.c: 24:     TRISAbits.TRISA3 = 0;
  1102     01F2  118C               	bcf	12,3	;volatile
  1103     01F3                     l1149:
  1104                           
  1105                           ;init.c: 25:     TRISAbits.TRISA4 = 0;
  1106     01F3  120C               	bcf	12,4	;volatile
  1107     01F4                     l1151:
  1108                           
  1109                           ;init.c: 26:     TRISAbits.TRISA6 = 0;
  1110     01F4  130C               	bcf	12,6	;volatile
  1111     01F5                     l1153:
  1112                           
  1113                           ;init.c: 27:     TRISAbits.TRISA7 = 0;
  1114     01F5  138C               	bcf	12,7	;volatile
  1115     01F6                     l1155:
  1116                           
  1117                           ;init.c: 31:     ANSELBbits.ANSB1 = 0;
  1118     01F6  0023               	movlb	3	; select bank3
  1119     01F7  108D               	bcf	13,1	;volatile
  1120     01F8                     l1157:
  1121                           
  1122                           ;init.c: 32:     ANSELBbits.ANSB2 = 0;
  1123     01F8  110D               	bcf	13,2	;volatile
  1124     01F9                     l1159:
  1125                           
  1126                           ;init.c: 33:     ANSELBbits.ANSB3 = 0;
  1127     01F9  118D               	bcf	13,3	;volatile
  1128     01FA                     l1161:
  1129                           
  1130                           ;init.c: 34:     ANSELBbits.ANSB4 = 0;
  1131     01FA  120D               	bcf	13,4	;volatile
  1132     01FB                     l1163:
  1133                           
  1134                           ;init.c: 35:     ANSELBbits.ANSB5 = 0;
  1135     01FB  128D               	bcf	13,5	;volatile
  1136     01FC                     l1165:
  1137                           
  1138                           ;init.c: 36:     ANSELBbits.ANSB6 = 0;
  1139     01FC  130D               	bcf	13,6	;volatile
  1140     01FD                     l1167:
  1141                           
  1142                           ;init.c: 37:     ANSELBbits.ANSB7 = 0;
  1143     01FD  138D               	bcf	13,7	;volatile
  1144     01FE                     l1169:
  1145                           
  1146                           ;init.c: 40:     TRISBbits.TRISB0 = 0;
  1147     01FE  0021               	movlb	1	; select bank1
  1148     01FF  100D               	bcf	13,0	;volatile
  1149     0200                     l1171:
  1150                           
  1151                           ;init.c: 41:     TRISBbits.TRISB1 = 1;
  1152     0200  148D               	bsf	13,1	;volatile
  1153     0201                     l1173:
  1154                           
  1155                           ;init.c: 42:     TRISBbits.TRISB2 = 0;
  1156     0201  110D               	bcf	13,2	;volatile
  1157     0202                     l1175:
  1158                           
  1159                           ;init.c: 43:     TRISBbits.TRISB3 = 0;
  1160     0202  118D               	bcf	13,3	;volatile
  1161     0203                     l1177:
  1162                           
  1163                           ;init.c: 44:     TRISBbits.TRISB4 = 0;
  1164     0203  120D               	bcf	13,4	;volatile
  1165     0204                     l1179:
  1166                           
  1167                           ;init.c: 45:     TRISBbits.TRISB5 = 0;
  1168     0204  128D               	bcf	13,5	;volatile
  1169     0205                     l1181:
  1170                           
  1171                           ;init.c: 46:     TRISBbits.TRISB6 = 0;
  1172     0205  130D               	bcf	13,6	;volatile
  1173     0206                     l1183:
  1174                           
  1175                           ;init.c: 47:     TRISBbits.TRISB7 = 0;
  1176     0206  138D               	bcf	13,7	;volatile
  1177     0207                     l1185:
  1178                           
  1179                           ;init.c: 50:     ADCON0bits.ADON = 0;
  1180     0207  101D               	bcf	29,0	;volatile
  1181     0208                     l1187:
  1182                           
  1183                           ;init.c: 51:     FVRCONbits.FVREN = 1;
  1184     0208  0022               	movlb	2	; select bank2
  1185     0209  1797               	bsf	23,7	;volatile
  1186                           
  1187                           ;init.c: 52:     FVRCONbits.ADFVR = 0b11;
  1188     020A  3003               	movlw	3
  1189     020B  0497               	iorwf	23,f	;volatile
  1190     020C                     l1189:
  1191                           
  1192                           ;init.c: 53:     ADCON1bits.ADNREF = 0;
  1193     020C  0021               	movlb	1	; select bank1
  1194     020D  111E               	bcf	30,2	;volatile
  1195                           
  1196                           ;init.c: 54:     ADCON1bits.ADPREF = 0b11;
  1197     020E  3003               	movlw	3
  1198     020F  049E               	iorwf	30,f	;volatile
  1199     0210                     l1191:
  1200                           
  1201                           ;init.c: 55:     PIE1bits.ADIE = 1;
  1202     0210  1711               	bsf	17,6	;volatile
  1203     0211                     l1193:
  1204                           
  1205                           ;init.c: 56:     PIR1bits.ADIF = 0;
  1206     0211  0020               	movlb	0	; select bank0
  1207     0212  1311               	bcf	17,6	;volatile
  1208                           
  1209                           ;init.c: 60:     WDTCONbits.WDTPS = 0b01010;
  1210     0213  0021               	movlb	1	; select bank1
  1211     0214  0817               	movf	23,w	;volatile
  1212     0215  39C1               	andlw	-63
  1213     0216  3814               	iorlw	20
  1214     0217  0097               	movwf	23	;volatile
  1215     0218                     l1195:
  1216                           
  1217                           ;init.c: 62:     LATAbits.LATA4 = 0;
  1218     0218  0022               	movlb	2	; select bank2
  1219     0219  120C               	bcf	12,4	;volatile
  1220     021A                     l1197:
  1221                           
  1222                           ;init.c: 63:     LATAbits.LATA6 = 0;
  1223     021A  130C               	bcf	12,6	;volatile
  1224     021B                     l1199:
  1225                           
  1226                           ;init.c: 64:     LATAbits.LATA7 = 0;
  1227     021B  138C               	bcf	12,7	;volatile
  1228     021C                     l1201:
  1229                           
  1230                           ;init.c: 65:     LATBbits.LATB0 = 0;
  1231     021C  100D               	bcf	13,0	;volatile
  1232     021D                     l1203:
  1233                           
  1234                           ;init.c: 66:     LATBbits.LATB3 = 0;
  1235     021D  118D               	bcf	13,3	;volatile
  1236     021E                     l1205:
  1237                           
  1238                           ;init.c: 67:     LATBbits.LATB4 = 0;
  1239     021E  120D               	bcf	13,4	;volatile
  1240     021F                     l1207:
  1241                           
  1242                           ;init.c: 68:     LATBbits.LATB5 = 0;
  1243     021F  128D               	bcf	13,5	;volatile
  1244     0220                     l1209:
  1245                           
  1246                           ;init.c: 70:     INTCONbits.GIE = 1;
  1247     0220  178B               	bsf	11,7	;volatile
  1248     0221                     l1211:
  1249                           
  1250                           ;init.c: 71:     INTCONbits.PEIE = 1;
  1251     0221  170B               	bsf	11,6	;volatile
  1252     0222                     l1213:
  1253                           
  1254                           ;init.c: 73:     init_UART();
  1255     0222  3182  2288  3181   	fcall	_init_UART
  1256     0225                     l108:
  1257     0225  0008               	return
  1258     0226                     __end_of_init_IO:
  1259                           
  1260                           	psect	text3
  1261     0288                     __ptext3:	
  1262 ;; *************** function _init_UART *****************
  1263 ;; Defined at:
  1264 ;;		line 77 in file "init.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1278 ;;      Params:         0       0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0
  1281 ;;      Totals:         0       0       0       0       0       0
  1282 ;;Total ram usage:        0 bytes
  1283 ;; Hardware stack levels used: 1
  1284 ;; Hardware stack levels required when called: 3
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_init_IO
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292     0288                     _init_UART:	
  1293                           ;psect for function _init_UART
  1294                           
  1295     0288                     l1123:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _init_UART: [wreg]
  1298                           
  1299                           
  1300                           ;init.c: 79:     APFCON1bits.TXCKSEL = 0;
  1301     0288  0022               	movlb	2	; select bank2
  1302     0289  101E               	bcf	30,0	;volatile
  1303                           
  1304                           ;init.c: 80:     TXSTAbits.TRMT = 1;
  1305     028A  0023               	movlb	3	; select bank3
  1306     028B  149E               	bsf	30,1	;volatile
  1307                           
  1308                           ;init.c: 81:     TXSTAbits.TXEN = 1;
  1309     028C  169E               	bsf	30,5	;volatile
  1310                           
  1311                           ;init.c: 82:     BAUDCONbits.RCIDL = 1;
  1312     028D  171F               	bsf	31,6	;volatile
  1313                           
  1314                           ;init.c: 85:     TXSTAbits.SYNC = 0;
  1315     028E  121E               	bcf	30,4	;volatile
  1316                           
  1317                           ;init.c: 86:     TXSTAbits.TX9 = 0;
  1318     028F  131E               	bcf	30,6	;volatile
  1319                           
  1320                           ;init.c: 87:     TXSTAbits.BRGH = 1;
  1321     0290  151E               	bsf	30,2	;volatile
  1322     0291                     l1125:
  1323                           
  1324                           ;init.c: 88:     SPBRG = 25;
  1325     0291  3019               	movlw	25
  1326     0292  009B               	movwf	27	;volatile
  1327     0293                     l1127:
  1328                           
  1329                           ;init.c: 89:     RCSTAbits.SPEN = 1;
  1330     0293  179D               	bsf	29,7	;volatile
  1331     0294                     l111:
  1332     0294  0008               	return
  1333     0295                     __end_of_init_UART:
  1334                           
  1335                           	psect	intentry
  1336     0004                     __pintentry:	
  1337 ;; *************** function _INT_TMR0 *****************
  1338 ;; Defined at:
  1339 ;;		line 29 in file "main.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  B               1   39[BANK0 ] PTR unsigned short 
  1344 ;;		 -> BinTOBcd@r(6), 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1354 ;;      Params:         0       0       0       0       0       0
  1355 ;;      Locals:         0       1       0       0       0       0
  1356 ;;      Temps:          0       5       0       0       0       0
  1357 ;;      Totals:         0       6       0       0       0       0
  1358 ;;Total ram usage:        6 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 2
  1361 ;; This function calls:
  1362 ;;		_ASCII_Con
  1363 ;;		_BinTOBcd
  1364 ;;		_UART_print
  1365 ;; This function is called by:
  1366 ;;		Interrupt level 1
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370     0004                     _INT_TMR0:
  1371                           
  1372                           ;incstack = 0
  1373     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1374                           
  1375                           ; Regs used in _INT_TMR0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1376     0005  3180               	pagesel	$
  1377     0006                     i1l1113:
  1378                           
  1379                           ;main.c: 33:     if(PIR1bits.ADIF == 1){
  1380     0006  0020               	movlb	0	; select bank0
  1381     0007  1F11               	btfss	17,6	;volatile
  1382     0008  280A               	goto	u46_21
  1383     0009  280B               	goto	u46_20
  1384     000A                     u46_21:
  1385     000A  2847               	goto	i1l32
  1386     000B                     u46_20:
  1387     000B                     i1l1115:
  1388                           
  1389                           ;main.c: 35:         PIR1bits.ADIF = 0;
  1390     000B  1311               	bcf	17,6	;volatile
  1391                           
  1392                           ;main.c: 36:         ADCON0bits.ADON = 0;
  1393     000C  0021               	movlb	1	; select bank1
  1394     000D  101D               	bcf	29,0	;volatile
  1395     000E                     i1l1117:
  1396                           
  1397                           ;main.c: 38:         unsigned short *B = BinTOBcd((unsigned long)((ADRESH<<8) + ADRESL))
      +                          ;
  1398     000E  081B               	movf	27,w	;volatile
  1399     000F  0020               	movlb	0	; select bank0
  1400     0010  00C2               	movwf	??_INT_TMR0
  1401     0011  01C3               	clrf	??_INT_TMR0+1
  1402     0012  0021               	movlb	1	; select bank1
  1403     0013  081C               	movf	28,w	;volatile
  1404     0014  0020               	movlb	0	; select bank0
  1405     0015  00C4               	movwf	??_INT_TMR0+2
  1406     0016  01C5               	clrf	??_INT_TMR0+3
  1407     0017  0844               	movf	??_INT_TMR0+2,w
  1408     0018  00C5               	movwf	??_INT_TMR0+3
  1409     0019  01C4               	clrf	??_INT_TMR0+2
  1410     001A  0842               	movf	??_INT_TMR0,w
  1411     001B  0744               	addwf	??_INT_TMR0+2,w
  1412     001C  00B6               	movwf	BinTOBcd@iADC
  1413     001D  0843               	movf	??_INT_TMR0+1,w
  1414     001E  3D45               	addwfc	??_INT_TMR0+3,w
  1415     001F  00B7               	movwf	BinTOBcd@iADC+1
  1416     0020  01B8               	clrf	BinTOBcd@iADC+2
  1417     0021  1BB7               	btfsc	BinTOBcd@iADC+1,7
  1418     0022  03B8               	decf	BinTOBcd@iADC+2,f
  1419     0023  0838               	movf	BinTOBcd@iADC+2,w
  1420     0024  00B9               	movwf	BinTOBcd@iADC+3
  1421     0025  3180  2057  3180   	fcall	_BinTOBcd
  1422     0028  0020               	movlb	0	; select bank0
  1423     0029  00C7               	movwf	INT_TMR0@B
  1424     002A                     i1l1119:
  1425                           
  1426                           ;main.c: 39:         UART_print(ASCII_Con(B[2], B[1], B[0]));
  1427     002A  0847               	movf	INT_TMR0@B,w
  1428     002B  3E04               	addlw	4
  1429     002C  0086               	movwf	6
  1430     002D  0187               	clrf	7
  1431     002E  3F40               	moviw [0]fsr1
  1432     002F  00F0               	movwf	ASCII_Con@a
  1433     0030  3F41               	moviw [1]fsr1
  1434     0031  00F1               	movwf	ASCII_Con@a+1
  1435     0032  0847               	movf	INT_TMR0@B,w
  1436     0033  3E02               	addlw	2
  1437     0034  0086               	movwf	6
  1438     0035  0187               	clrf	7
  1439     0036  3F40               	moviw [0]fsr1
  1440     0037  00F2               	movwf	ASCII_Con@b
  1441     0038  3F41               	moviw [1]fsr1
  1442     0039  00F3               	movwf	ASCII_Con@b+1
  1443     003A  0847               	movf	INT_TMR0@B,w
  1444     003B  0086               	movwf	6
  1445     003C  0187               	clrf	7
  1446     003D  3F40               	moviw [0]fsr1
  1447     003E  00F4               	movwf	ASCII_Con@c
  1448     003F  3F41               	moviw [1]fsr1
  1449     0040  00F5               	movwf	ASCII_Con@c+1
  1450     0041  3182  2275  3180   	fcall	_ASCII_Con
  1451     0044  3182  2259  3180   	fcall	_UART_print
  1452     0047                     i1l32:
  1453     0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1454     0048  0009               	retfie
  1455     0049                     __end_of_INT_TMR0:
  1456                           
  1457                           	psect	text5
  1458     0259                     __ptext5:	
  1459 ;; *************** function _UART_print *****************
  1460 ;; Defined at:
  1461 ;;		line 48 in file "funtions.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  cadena          1    wreg     PTR unsigned char 
  1464 ;;		 -> ASCII_Con@r(7), 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  cadena          1    2[COMMON] PTR unsigned char 
  1467 ;;		 -> ASCII_Con@r(7), 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1477 ;;      Params:         0       0       0       0       0       0
  1478 ;;      Locals:         1       0       0       0       0       0
  1479 ;;      Temps:          1       0       0       0       0       0
  1480 ;;      Totals:         2       0       0       0       0       0
  1481 ;;Total ram usage:        2 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; Hardware stack levels required when called: 1
  1484 ;; This function calls:
  1485 ;;		_UART_write
  1486 ;; This function is called by:
  1487 ;;		_INT_TMR0
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491     0259                     _UART_print:	
  1492                           ;psect for function _UART_print
  1493                           
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in _UART_print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1497                           ;UART_print@cadena stored from wreg
  1498     0259  00F2               	movwf	UART_print@cadena
  1499     025A                     i1l1099:
  1500                           
  1501                           ;funtions.c: 49:     while (*cadena != 0) {
  1502     025A  2A66               	goto	i1l1105
  1503     025B                     i1l1101:
  1504                           
  1505                           ;funtions.c: 50:         UART_write(*cadena);
  1506     025B  0872               	movf	UART_print@cadena,w
  1507     025C  0086               	movwf	6
  1508     025D  0187               	clrf	7
  1509     025E  0801               	movf	1,w
  1510     025F  3182  229E  3182   	fcall	_UART_write
  1511     0262                     i1l1103:
  1512                           
  1513                           ;funtions.c: 51:         cadena++;
  1514     0262  3001               	movlw	1
  1515     0263  00F1               	movwf	??_UART_print
  1516     0264  0871               	movf	??_UART_print,w
  1517     0265  07F2               	addwf	UART_print@cadena,f
  1518     0266                     i1l1105:
  1519                           
  1520                           ;funtions.c: 49:     while (*cadena != 0) {
  1521     0266  0872               	movf	UART_print@cadena,w
  1522     0267  0086               	movwf	6
  1523     0268  0187               	clrf	7
  1524     0269  0801               	movf	1,w
  1525     026A  1D03               	btfss	3,2
  1526     026B  2A6D               	goto	u45_21
  1527     026C  2A6E               	goto	u45_20
  1528     026D                     u45_21:
  1529     026D  2A5B               	goto	i1l1101
  1530     026E                     u45_20:
  1531     026E                     i1l1107:
  1532                           
  1533                           ;funtions.c: 53:     WDTCONbits.WDTPS = 0b01010;
  1534     026E  0021               	movlb	1	; select bank1
  1535     026F  0817               	movf	23,w	;volatile
  1536     0270  39C1               	andlw	-63
  1537     0271  3814               	iorlw	20
  1538     0272  0097               	movwf	23	;volatile
  1539     0273  0063               	sleep	;# 
  1540     0274                     i1l60:
  1541     0274  0008               	return
  1542     0275                     __end_of_UART_print:
  1543                           
  1544                           	psect	text6
  1545     029E                     __ptext6:	
  1546 ;; *************** function _UART_write *****************
  1547 ;; Defined at:
  1548 ;;		line 39 in file "funtions.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  c               1    wreg     unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  c               1    0[COMMON] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1562 ;;      Params:         0       0       0       0       0       0
  1563 ;;      Locals:         1       0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0
  1565 ;;      Totals:         1       0       0       0       0       0
  1566 ;;Total ram usage:        1 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_UART_print
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575     029E                     _UART_write:	
  1576                           ;psect for function _UART_write
  1577                           
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _UART_write: [wreg]
  1581                           ;UART_write@c stored from wreg
  1582     029E  00F0               	movwf	UART_write@c
  1583     029F                     i1l921:
  1584                           
  1585                           ;funtions.c: 40:     TXREG = c;
  1586     029F  0870               	movf	UART_write@c,w
  1587     02A0  0023               	movlb	3	; select bank3
  1588     02A1  009A               	movwf	26	;volatile
  1589     02A2                     i1l51:	
  1590                           ;funtions.c: 41:     while (TXSTAbits.TRMT == 0);
  1591                           
  1592     02A2  1C9E               	btfss	30,1	;volatile
  1593     02A3  2AA5               	goto	u24_21
  1594     02A4  2AA6               	goto	u24_20
  1595     02A5                     u24_21:
  1596     02A5  2AA2               	goto	i1l51
  1597     02A6                     u24_20:
  1598     02A6                     i1l54:
  1599     02A6  0008               	return
  1600     02A7                     __end_of_UART_write:
  1601                           
  1602                           	psect	text7
  1603     0057                     __ptext7:	
  1604 ;; *************** function _BinTOBcd *****************
  1605 ;; Defined at:
  1606 ;;		line 12 in file "funtions.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  iADC            4   22[BANK0 ] unsigned long 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      PTR unsigned short 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1620 ;;      Params:         0       4       0       0       0       0
  1621 ;;      Locals:         0       4       0       0       0       0
  1622 ;;      Temps:          0       4       0       0       0       0
  1623 ;;      Totals:         0      12       0       0       0       0
  1624 ;;Total ram usage:       12 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 1
  1627 ;; This function calls:
  1628 ;;		___lldiv
  1629 ;;		___llmod
  1630 ;;		___lmul
  1631 ;; This function is called by:
  1632 ;;		_INT_TMR0
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636     0057                     _BinTOBcd:	
  1637                           ;psect for function _BinTOBcd
  1638                           
  1639     0057                     i1l1075:	
  1640                           ;incstack = 0
  1641                           ; Regs used in _BinTOBcd: [wreg+status,2+status,0+pclath+cstack]
  1642                           
  1643                           
  1644                           ;funtions.c: 14:     static unsigned short r[3];;funtions.c: 15:     r[0] = ((iADC * 100
      +                          0) / 1024) % 10;
  1645     0057  3000               	movlw	0
  1646     0058  0020               	movlb	0	; select bank0
  1647     0059  00B0               	movwf	___llmod@divisor+3
  1648     005A  3000               	movlw	0
  1649     005B  00AF               	movwf	___llmod@divisor+2
  1650     005C  3000               	movlw	0
  1651     005D  00AE               	movwf	___llmod@divisor+1
  1652     005E  300A               	movlw	10
  1653     005F  00AD               	movwf	___llmod@divisor
  1654     0060  3000               	movlw	0
  1655     0061  00F7               	movwf	___lmul@multiplicand+3
  1656     0062  3000               	movlw	0
  1657     0063  00F6               	movwf	___lmul@multiplicand+2
  1658     0064  3003               	movlw	3
  1659     0065  00F5               	movwf	___lmul@multiplicand+1
  1660     0066  30E8               	movlw	232
  1661     0067  00F4               	movwf	___lmul@multiplicand
  1662     0068  0839               	movf	BinTOBcd@iADC+3,w
  1663     0069  00F3               	movwf	___lmul@multiplier+3
  1664     006A  0838               	movf	BinTOBcd@iADC+2,w
  1665     006B  00F2               	movwf	___lmul@multiplier+2
  1666     006C  0837               	movf	BinTOBcd@iADC+1,w
  1667     006D  00F1               	movwf	___lmul@multiplier+1
  1668     006E  0836               	movf	BinTOBcd@iADC,w
  1669     006F  00F0               	movwf	___lmul@multiplier
  1670     0070  3182  2226  3180   	fcall	___lmul
  1671     0073  0870               	movf	?___lmul,w
  1672     0074  0020               	movlb	0	; select bank0
  1673     0075  00BA               	movwf	??_BinTOBcd
  1674     0076  0871               	movf	?___lmul+1,w
  1675     0077  00BB               	movwf	??_BinTOBcd+1
  1676     0078  0872               	movf	?___lmul+2,w
  1677     0079  00BC               	movwf	??_BinTOBcd+2
  1678     007A  0873               	movf	?___lmul+3,w
  1679     007B  00BD               	movwf	??_BinTOBcd+3
  1680     007C  300A               	movlw	10
  1681     007D                     u42_25:
  1682     007D  36BD               	lsrf	??_BinTOBcd+3,f
  1683     007E  0CBC               	rrf	??_BinTOBcd+2,f
  1684     007F  0CBB               	rrf	??_BinTOBcd+1,f
  1685     0080  0CBA               	rrf	??_BinTOBcd,f
  1686     0081                     u42_20:
  1687     0081  0B89               	decfsz	9,f
  1688     0082  287D               	goto	u42_25
  1689     0083  083D               	movf	??_BinTOBcd+3,w
  1690     0084  00B4               	movwf	___llmod@dividend+3
  1691     0085  083C               	movf	??_BinTOBcd+2,w
  1692     0086  00B3               	movwf	___llmod@dividend+2
  1693     0087  083B               	movf	??_BinTOBcd+1,w
  1694     0088  00B2               	movwf	___llmod@dividend+1
  1695     0089  083A               	movf	??_BinTOBcd,w
  1696     008A  00B1               	movwf	___llmod@dividend
  1697     008B  3181  2196  3180   	fcall	___llmod
  1698     008E  0020               	movlb	0	; select bank0
  1699     008F  082E               	movf	?___llmod+1,w
  1700     0090  00D0               	movwf	BinTOBcd@r+1
  1701     0091  082D               	movf	?___llmod,w
  1702     0092  00CF               	movwf	BinTOBcd@r
  1703                           
  1704                           ;funtions.c: 16:     r[1] = (((iADC * 1000) / 1024) / 10) % 10;
  1705     0093  3000               	movlw	0
  1706     0094  00B0               	movwf	___llmod@divisor+3
  1707     0095  3000               	movlw	0
  1708     0096  00AF               	movwf	___llmod@divisor+2
  1709     0097  3000               	movlw	0
  1710     0098  00AE               	movwf	___llmod@divisor+1
  1711     0099  300A               	movlw	10
  1712     009A  00AD               	movwf	___llmod@divisor
  1713     009B  3000               	movlw	0
  1714     009C  00A3               	movwf	___lldiv@divisor+3
  1715     009D  3000               	movlw	0
  1716     009E  00A2               	movwf	___lldiv@divisor+2
  1717     009F  3000               	movlw	0
  1718     00A0  00A1               	movwf	___lldiv@divisor+1
  1719     00A1  300A               	movlw	10
  1720     00A2  00A0               	movwf	___lldiv@divisor
  1721     00A3  3000               	movlw	0
  1722     00A4  00F7               	movwf	___lmul@multiplicand+3
  1723     00A5  3000               	movlw	0
  1724     00A6  00F6               	movwf	___lmul@multiplicand+2
  1725     00A7  3003               	movlw	3
  1726     00A8  00F5               	movwf	___lmul@multiplicand+1
  1727     00A9  30E8               	movlw	232
  1728     00AA  00F4               	movwf	___lmul@multiplicand
  1729     00AB  0839               	movf	BinTOBcd@iADC+3,w
  1730     00AC  00F3               	movwf	___lmul@multiplier+3
  1731     00AD  0838               	movf	BinTOBcd@iADC+2,w
  1732     00AE  00F2               	movwf	___lmul@multiplier+2
  1733     00AF  0837               	movf	BinTOBcd@iADC+1,w
  1734     00B0  00F1               	movwf	___lmul@multiplier+1
  1735     00B1  0836               	movf	BinTOBcd@iADC,w
  1736     00B2  00F0               	movwf	___lmul@multiplier
  1737     00B3  3182  2226  3180   	fcall	___lmul
  1738     00B6  0870               	movf	?___lmul,w
  1739     00B7  0020               	movlb	0	; select bank0
  1740     00B8  00BA               	movwf	??_BinTOBcd
  1741     00B9  0871               	movf	?___lmul+1,w
  1742     00BA  00BB               	movwf	??_BinTOBcd+1
  1743     00BB  0872               	movf	?___lmul+2,w
  1744     00BC  00BC               	movwf	??_BinTOBcd+2
  1745     00BD  0873               	movf	?___lmul+3,w
  1746     00BE  00BD               	movwf	??_BinTOBcd+3
  1747     00BF  300A               	movlw	10
  1748     00C0                     u43_25:
  1749     00C0  36BD               	lsrf	??_BinTOBcd+3,f
  1750     00C1  0CBC               	rrf	??_BinTOBcd+2,f
  1751     00C2  0CBB               	rrf	??_BinTOBcd+1,f
  1752     00C3  0CBA               	rrf	??_BinTOBcd,f
  1753     00C4                     u43_20:
  1754     00C4  0B89               	decfsz	9,f
  1755     00C5  28C0               	goto	u43_25
  1756     00C6  083D               	movf	??_BinTOBcd+3,w
  1757     00C7  00A7               	movwf	___lldiv@dividend+3
  1758     00C8  083C               	movf	??_BinTOBcd+2,w
  1759     00C9  00A6               	movwf	___lldiv@dividend+2
  1760     00CA  083B               	movf	??_BinTOBcd+1,w
  1761     00CB  00A5               	movwf	___lldiv@dividend+1
  1762     00CC  083A               	movf	??_BinTOBcd,w
  1763     00CD  00A4               	movwf	___lldiv@dividend
  1764     00CE  3181  213B  3180   	fcall	___lldiv
  1765     00D1  0020               	movlb	0	; select bank0
  1766     00D2  0823               	movf	?___lldiv+3,w
  1767     00D3  00B4               	movwf	___llmod@dividend+3
  1768     00D4  0822               	movf	?___lldiv+2,w
  1769     00D5  00B3               	movwf	___llmod@dividend+2
  1770     00D6  0821               	movf	?___lldiv+1,w
  1771     00D7  00B2               	movwf	___llmod@dividend+1
  1772     00D8  0820               	movf	?___lldiv,w
  1773     00D9  00B1               	movwf	___llmod@dividend
  1774     00DA  3181  2196  3180   	fcall	___llmod
  1775     00DD  0020               	movlb	0	; select bank0
  1776     00DE  082E               	movf	?___llmod+1,w
  1777     00DF  00D2               	movwf	BinTOBcd@r+3
  1778     00E0  082D               	movf	?___llmod,w
  1779     00E1  00D1               	movwf	BinTOBcd@r+2
  1780                           
  1781                           ;funtions.c: 17:     r[2] = (((iADC * 1000) / 1024) / 10) / 10;
  1782     00E2  3000               	movlw	0
  1783     00E3  00A3               	movwf	___lldiv@divisor+3
  1784     00E4  3000               	movlw	0
  1785     00E5  00A2               	movwf	___lldiv@divisor+2
  1786     00E6  3000               	movlw	0
  1787     00E7  00A1               	movwf	___lldiv@divisor+1
  1788     00E8  300A               	movlw	10
  1789     00E9  00A0               	movwf	___lldiv@divisor
  1790     00EA  3000               	movlw	0
  1791     00EB  00F7               	movwf	___lmul@multiplicand+3
  1792     00EC  3000               	movlw	0
  1793     00ED  00F6               	movwf	___lmul@multiplicand+2
  1794     00EE  3003               	movlw	3
  1795     00EF  00F5               	movwf	___lmul@multiplicand+1
  1796     00F0  30E8               	movlw	232
  1797     00F1  00F4               	movwf	___lmul@multiplicand
  1798     00F2  0839               	movf	BinTOBcd@iADC+3,w
  1799     00F3  00F3               	movwf	___lmul@multiplier+3
  1800     00F4  0838               	movf	BinTOBcd@iADC+2,w
  1801     00F5  00F2               	movwf	___lmul@multiplier+2
  1802     00F6  0837               	movf	BinTOBcd@iADC+1,w
  1803     00F7  00F1               	movwf	___lmul@multiplier+1
  1804     00F8  0836               	movf	BinTOBcd@iADC,w
  1805     00F9  00F0               	movwf	___lmul@multiplier
  1806     00FA  3182  2226  3180   	fcall	___lmul
  1807     00FD  0870               	movf	?___lmul,w
  1808     00FE  0020               	movlb	0	; select bank0
  1809     00FF  00BA               	movwf	??_BinTOBcd
  1810     0100  0871               	movf	?___lmul+1,w
  1811     0101  00BB               	movwf	??_BinTOBcd+1
  1812     0102  0872               	movf	?___lmul+2,w
  1813     0103  00BC               	movwf	??_BinTOBcd+2
  1814     0104  0873               	movf	?___lmul+3,w
  1815     0105  00BD               	movwf	??_BinTOBcd+3
  1816     0106  300A               	movlw	10
  1817     0107                     u44_25:
  1818     0107  36BD               	lsrf	??_BinTOBcd+3,f
  1819     0108  0CBC               	rrf	??_BinTOBcd+2,f
  1820     0109  0CBB               	rrf	??_BinTOBcd+1,f
  1821     010A  0CBA               	rrf	??_BinTOBcd,f
  1822     010B                     u44_20:
  1823     010B  0B89               	decfsz	9,f
  1824     010C  2907               	goto	u44_25
  1825     010D  083D               	movf	??_BinTOBcd+3,w
  1826     010E  00A7               	movwf	___lldiv@dividend+3
  1827     010F  083C               	movf	??_BinTOBcd+2,w
  1828     0110  00A6               	movwf	___lldiv@dividend+2
  1829     0111  083B               	movf	??_BinTOBcd+1,w
  1830     0112  00A5               	movwf	___lldiv@dividend+1
  1831     0113  083A               	movf	??_BinTOBcd,w
  1832     0114  00A4               	movwf	___lldiv@dividend
  1833     0115  3181  213B  3180   	fcall	___lldiv
  1834     0118  0020               	movlb	0	; select bank0
  1835     0119  0823               	movf	?___lldiv+3,w
  1836     011A  00C1               	movwf	_BinTOBcd$1316+3
  1837     011B  0822               	movf	?___lldiv+2,w
  1838     011C  00C0               	movwf	_BinTOBcd$1316+2
  1839     011D  0821               	movf	?___lldiv+1,w
  1840     011E  00BF               	movwf	_BinTOBcd$1316+1
  1841     011F  0820               	movf	?___lldiv,w
  1842     0120  00BE               	movwf	_BinTOBcd$1316
  1843                           
  1844                           ;funtions.c: 17:     r[2] = (((iADC * 1000) / 1024) / 10) / 10;
  1845     0121  3000               	movlw	0
  1846     0122  00A3               	movwf	___lldiv@divisor+3
  1847     0123  3000               	movlw	0
  1848     0124  00A2               	movwf	___lldiv@divisor+2
  1849     0125  3000               	movlw	0
  1850     0126  00A1               	movwf	___lldiv@divisor+1
  1851     0127  300A               	movlw	10
  1852     0128  00A0               	movwf	___lldiv@divisor
  1853     0129  0841               	movf	_BinTOBcd$1316+3,w
  1854     012A  00A7               	movwf	___lldiv@dividend+3
  1855     012B  0840               	movf	_BinTOBcd$1316+2,w
  1856     012C  00A6               	movwf	___lldiv@dividend+2
  1857     012D  083F               	movf	_BinTOBcd$1316+1,w
  1858     012E  00A5               	movwf	___lldiv@dividend+1
  1859     012F  083E               	movf	_BinTOBcd$1316,w
  1860     0130  00A4               	movwf	___lldiv@dividend
  1861     0131  3181  213B  3180   	fcall	___lldiv
  1862     0134  0020               	movlb	0	; select bank0
  1863     0135  0821               	movf	?___lldiv+1,w
  1864     0136  00D4               	movwf	BinTOBcd@r+5
  1865     0137  0820               	movf	?___lldiv,w
  1866     0138  00D3               	movwf	BinTOBcd@r+4
  1867     0139                     i1l1077:
  1868                           
  1869                           ;funtions.c: 19:     return r;
  1870     0139  304F               	movlw	(low (BinTOBcd@r| 0))& (0+255)
  1871     013A                     i1l45:
  1872     013A  0008               	return
  1873     013B                     __end_of_BinTOBcd:
  1874                           
  1875                           	psect	text8
  1876     0226                     __ptext8:	
  1877 ;; *************** function ___lmul *****************
  1878 ;; Defined at:
  1879 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  multiplier      4    0[COMMON] unsigned long 
  1882 ;;  multiplicand    4    4[COMMON] unsigned long 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  product         4    8[COMMON] unsigned long 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  4    0[COMMON] unsigned long 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1894 ;;      Params:         8       0       0       0       0       0
  1895 ;;      Locals:         4       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0
  1897 ;;      Totals:        12       0       0       0       0       0
  1898 ;;Total ram usage:       12 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_BinTOBcd
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907     0226                     ___lmul:	
  1908                           ;psect for function ___lmul
  1909                           
  1910     0226                     i1l929:	
  1911                           ;incstack = 0
  1912                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1913                           
  1914     0226  3000               	movlw	0
  1915     0227  00FB               	movwf	___lmul@product+3
  1916     0228  3000               	movlw	0
  1917     0229  00FA               	movwf	___lmul@product+2
  1918     022A  3000               	movlw	0
  1919     022B  00F9               	movwf	___lmul@product+1
  1920     022C  3000               	movlw	0
  1921     022D  00F8               	movwf	___lmul@product
  1922     022E                     i1l931:
  1923     022E  1C70               	btfss	___lmul@multiplier,0
  1924     022F  2A31               	goto	u25_21
  1925     0230  2A32               	goto	u25_20
  1926     0231                     u25_21:
  1927     0231  2A3A               	goto	i1l935
  1928     0232                     u25_20:
  1929     0232                     i1l933:
  1930     0232  0874               	movf	___lmul@multiplicand,w
  1931     0233  07F8               	addwf	___lmul@product,f
  1932     0234  0875               	movf	___lmul@multiplicand+1,w
  1933     0235  3DF9               	addwfc	___lmul@product+1,f
  1934     0236  0876               	movf	___lmul@multiplicand+2,w
  1935     0237  3DFA               	addwfc	___lmul@product+2,f
  1936     0238  0877               	movf	___lmul@multiplicand+3,w
  1937     0239  3DFB               	addwfc	___lmul@product+3,f
  1938     023A                     i1l935:
  1939     023A  3001               	movlw	1
  1940     023B                     u26_25:
  1941     023B  35F4               	lslf	___lmul@multiplicand,f
  1942     023C  0DF5               	rlf	___lmul@multiplicand+1,f
  1943     023D  0DF6               	rlf	___lmul@multiplicand+2,f
  1944     023E  0DF7               	rlf	___lmul@multiplicand+3,f
  1945     023F  0B89               	decfsz	9,f
  1946     0240  2A3B               	goto	u26_25
  1947     0241                     i1l937:
  1948     0241  3001               	movlw	1
  1949     0242                     u27_25:
  1950     0242  36F3               	lsrf	___lmul@multiplier+3,f
  1951     0243  0CF2               	rrf	___lmul@multiplier+2,f
  1952     0244  0CF1               	rrf	___lmul@multiplier+1,f
  1953     0245  0CF0               	rrf	___lmul@multiplier,f
  1954     0246  0B89               	decfsz	9,f
  1955     0247  2A42               	goto	u27_25
  1956     0248  0873               	movf	___lmul@multiplier+3,w
  1957     0249  0472               	iorwf	___lmul@multiplier+2,w
  1958     024A  0471               	iorwf	___lmul@multiplier+1,w
  1959     024B  0470               	iorwf	___lmul@multiplier,w
  1960     024C  1D03               	skipz
  1961     024D  2A4F               	goto	u28_21
  1962     024E  2A50               	goto	u28_20
  1963     024F                     u28_21:
  1964     024F  2A2E               	goto	i1l931
  1965     0250                     u28_20:
  1966     0250                     i1l939:
  1967     0250  087B               	movf	___lmul@product+3,w
  1968     0251  00F3               	movwf	?___lmul+3
  1969     0252  087A               	movf	___lmul@product+2,w
  1970     0253  00F2               	movwf	?___lmul+2
  1971     0254  0879               	movf	___lmul@product+1,w
  1972     0255  00F1               	movwf	?___lmul+1
  1973     0256  0878               	movf	___lmul@product,w
  1974     0257  00F0               	movwf	?___lmul
  1975     0258                     i1l275:
  1976     0258  0008               	return
  1977     0259                     __end_of___lmul:
  1978                           
  1979                           	psect	text9
  1980     0196                     __ptext9:	
  1981 ;; *************** function ___llmod *****************
  1982 ;; Defined at:
  1983 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\llmod.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  divisor         4   13[BANK0 ] unsigned long 
  1986 ;;  dividend        4   17[BANK0 ] unsigned long 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  counter         1   21[BANK0 ] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  4   13[BANK0 ] unsigned long 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1998 ;;      Params:         0       8       0       0       0       0
  1999 ;;      Locals:         0       1       0       0       0       0
  2000 ;;      Temps:          1       0       0       0       0       0
  2001 ;;      Totals:         1       9       0       0       0       0
  2002 ;;Total ram usage:       10 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_BinTOBcd
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011     0196                     ___llmod:	
  2012                           ;psect for function ___llmod
  2013                           
  2014     0196                     i1l967:	
  2015                           ;incstack = 0
  2016                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2017                           
  2018     0196  0020               	movlb	0	; select bank0
  2019     0197  0830               	movf	___llmod@divisor+3,w
  2020     0198  042F               	iorwf	___llmod@divisor+2,w
  2021     0199  042E               	iorwf	___llmod@divisor+1,w
  2022     019A  042D               	iorwf	___llmod@divisor,w
  2023     019B  1903               	skipnz
  2024     019C  299E               	goto	u36_21
  2025     019D  299F               	goto	u36_20
  2026     019E                     u36_21:
  2027     019E  29D8               	goto	i1l983
  2028     019F                     u36_20:
  2029     019F                     i1l969:
  2030     019F  01B5               	clrf	___llmod@counter
  2031     01A0  0AB5               	incf	___llmod@counter,f
  2032     01A1  29AD               	goto	i1l973
  2033     01A2                     i1l971:
  2034     01A2  3001               	movlw	1
  2035     01A3                     u37_25:
  2036     01A3  35AD               	lslf	___llmod@divisor,f
  2037     01A4  0DAE               	rlf	___llmod@divisor+1,f
  2038     01A5  0DAF               	rlf	___llmod@divisor+2,f
  2039     01A6  0DB0               	rlf	___llmod@divisor+3,f
  2040     01A7  0B89               	decfsz	9,f
  2041     01A8  29A3               	goto	u37_25
  2042     01A9  3001               	movlw	1
  2043     01AA  00FD               	movwf	??___llmod
  2044     01AB  087D               	movf	??___llmod,w
  2045     01AC  07B5               	addwf	___llmod@counter,f
  2046     01AD                     i1l973:
  2047     01AD  1FB0               	btfss	___llmod@divisor+3,7
  2048     01AE  29B0               	goto	u38_21
  2049     01AF  29B1               	goto	u38_20
  2050     01B0                     u38_21:
  2051     01B0  29A2               	goto	i1l971
  2052     01B1                     u38_20:
  2053     01B1                     i1l975:
  2054     01B1  0830               	movf	___llmod@divisor+3,w
  2055     01B2  0234               	subwf	___llmod@dividend+3,w
  2056     01B3  1D03               	skipz
  2057     01B4  29BF               	goto	u39_25
  2058     01B5  082F               	movf	___llmod@divisor+2,w
  2059     01B6  0233               	subwf	___llmod@dividend+2,w
  2060     01B7  1D03               	skipz
  2061     01B8  29BF               	goto	u39_25
  2062     01B9  082E               	movf	___llmod@divisor+1,w
  2063     01BA  0232               	subwf	___llmod@dividend+1,w
  2064     01BB  1D03               	skipz
  2065     01BC  29BF               	goto	u39_25
  2066     01BD  082D               	movf	___llmod@divisor,w
  2067     01BE  0231               	subwf	___llmod@dividend,w
  2068     01BF                     u39_25:
  2069     01BF  1C03               	skipc
  2070     01C0  29C2               	goto	u39_21
  2071     01C1  29C3               	goto	u39_20
  2072     01C2                     u39_21:
  2073     01C2  29CB               	goto	i1l979
  2074     01C3                     u39_20:
  2075     01C3                     i1l977:
  2076     01C3  082D               	movf	___llmod@divisor,w
  2077     01C4  02B1               	subwf	___llmod@dividend,f
  2078     01C5  082E               	movf	___llmod@divisor+1,w
  2079     01C6  3BB2               	subwfb	___llmod@dividend+1,f
  2080     01C7  082F               	movf	___llmod@divisor+2,w
  2081     01C8  3BB3               	subwfb	___llmod@dividend+2,f
  2082     01C9  0830               	movf	___llmod@divisor+3,w
  2083     01CA  3BB4               	subwfb	___llmod@dividend+3,f
  2084     01CB                     i1l979:
  2085     01CB  3001               	movlw	1
  2086     01CC                     u40_25:
  2087     01CC  36B0               	lsrf	___llmod@divisor+3,f
  2088     01CD  0CAF               	rrf	___llmod@divisor+2,f
  2089     01CE  0CAE               	rrf	___llmod@divisor+1,f
  2090     01CF  0CAD               	rrf	___llmod@divisor,f
  2091     01D0  0B89               	decfsz	9,f
  2092     01D1  29CC               	goto	u40_25
  2093     01D2                     i1l981:
  2094     01D2  3001               	movlw	1
  2095     01D3  02B5               	subwf	___llmod@counter,f
  2096     01D4  1D03               	btfss	3,2
  2097     01D5  29D7               	goto	u41_21
  2098     01D6  29D8               	goto	u41_20
  2099     01D7                     u41_21:
  2100     01D7  29B1               	goto	i1l975
  2101     01D8                     u41_20:
  2102     01D8                     i1l983:
  2103     01D8  0834               	movf	___llmod@dividend+3,w
  2104     01D9  00B0               	movwf	?___llmod+3
  2105     01DA  0833               	movf	___llmod@dividend+2,w
  2106     01DB  00AF               	movwf	?___llmod+2
  2107     01DC  0832               	movf	___llmod@dividend+1,w
  2108     01DD  00AE               	movwf	?___llmod+1
  2109     01DE  0831               	movf	___llmod@dividend,w
  2110     01DF  00AD               	movwf	?___llmod
  2111     01E0                     i1l491:
  2112     01E0  0008               	return
  2113     01E1                     __end_of___llmod:
  2114                           
  2115                           	psect	text10
  2116     013B                     __ptext10:	
  2117 ;; *************** function ___lldiv *****************
  2118 ;; Defined at:
  2119 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  divisor         4    0[BANK0 ] unsigned long 
  2122 ;;  dividend        4    4[BANK0 ] unsigned long 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  quotient        4    8[BANK0 ] unsigned long 
  2125 ;;  counter         1   12[BANK0 ] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  4    0[BANK0 ] unsigned long 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2135 ;;      Params:         0       8       0       0       0       0
  2136 ;;      Locals:         0       5       0       0       0       0
  2137 ;;      Temps:          1       0       0       0       0       0
  2138 ;;      Totals:         1      13       0       0       0       0
  2139 ;;Total ram usage:       14 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_BinTOBcd
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148     013B                     ___lldiv:	
  2149                           ;psect for function ___lldiv
  2150                           
  2151     013B                     i1l943:	
  2152                           ;incstack = 0
  2153                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2154                           
  2155     013B  3000               	movlw	0
  2156     013C  0020               	movlb	0	; select bank0
  2157     013D  00AB               	movwf	___lldiv@quotient+3
  2158     013E  3000               	movlw	0
  2159     013F  00AA               	movwf	___lldiv@quotient+2
  2160     0140  3000               	movlw	0
  2161     0141  00A9               	movwf	___lldiv@quotient+1
  2162     0142  3000               	movlw	0
  2163     0143  00A8               	movwf	___lldiv@quotient
  2164     0144  0823               	movf	___lldiv@divisor+3,w
  2165     0145  0422               	iorwf	___lldiv@divisor+2,w
  2166     0146  0421               	iorwf	___lldiv@divisor+1,w
  2167     0147  0420               	iorwf	___lldiv@divisor,w
  2168     0148  1903               	skipnz
  2169     0149  294B               	goto	u29_21
  2170     014A  294C               	goto	u29_20
  2171     014B                     u29_21:
  2172     014B  298D               	goto	i1l963
  2173     014C                     u29_20:
  2174     014C                     i1l945:
  2175     014C  01AC               	clrf	___lldiv@counter
  2176     014D  0AAC               	incf	___lldiv@counter,f
  2177     014E  295A               	goto	i1l949
  2178     014F                     i1l947:
  2179     014F  3001               	movlw	1
  2180     0150                     u30_25:
  2181     0150  35A0               	lslf	___lldiv@divisor,f
  2182     0151  0DA1               	rlf	___lldiv@divisor+1,f
  2183     0152  0DA2               	rlf	___lldiv@divisor+2,f
  2184     0153  0DA3               	rlf	___lldiv@divisor+3,f
  2185     0154  0B89               	decfsz	9,f
  2186     0155  2950               	goto	u30_25
  2187     0156  3001               	movlw	1
  2188     0157  00FC               	movwf	??___lldiv
  2189     0158  087C               	movf	??___lldiv,w
  2190     0159  07AC               	addwf	___lldiv@counter,f
  2191     015A                     i1l949:
  2192     015A  1FA3               	btfss	___lldiv@divisor+3,7
  2193     015B  295D               	goto	u31_21
  2194     015C  295E               	goto	u31_20
  2195     015D                     u31_21:
  2196     015D  294F               	goto	i1l947
  2197     015E                     u31_20:
  2198     015E                     i1l951:
  2199     015E  3001               	movlw	1
  2200     015F                     u32_25:
  2201     015F  35A8               	lslf	___lldiv@quotient,f
  2202     0160  0DA9               	rlf	___lldiv@quotient+1,f
  2203     0161  0DAA               	rlf	___lldiv@quotient+2,f
  2204     0162  0DAB               	rlf	___lldiv@quotient+3,f
  2205     0163  0B89               	decfsz	9,f
  2206     0164  295F               	goto	u32_25
  2207     0165                     i1l953:
  2208     0165  0823               	movf	___lldiv@divisor+3,w
  2209     0166  0227               	subwf	___lldiv@dividend+3,w
  2210     0167  1D03               	skipz
  2211     0168  2973               	goto	u33_25
  2212     0169  0822               	movf	___lldiv@divisor+2,w
  2213     016A  0226               	subwf	___lldiv@dividend+2,w
  2214     016B  1D03               	skipz
  2215     016C  2973               	goto	u33_25
  2216     016D  0821               	movf	___lldiv@divisor+1,w
  2217     016E  0225               	subwf	___lldiv@dividend+1,w
  2218     016F  1D03               	skipz
  2219     0170  2973               	goto	u33_25
  2220     0171  0820               	movf	___lldiv@divisor,w
  2221     0172  0224               	subwf	___lldiv@dividend,w
  2222     0173                     u33_25:
  2223     0173  1C03               	skipc
  2224     0174  2976               	goto	u33_21
  2225     0175  2977               	goto	u33_20
  2226     0176                     u33_21:
  2227     0176  2980               	goto	i1l959
  2228     0177                     u33_20:
  2229     0177                     i1l955:
  2230     0177  0820               	movf	___lldiv@divisor,w
  2231     0178  02A4               	subwf	___lldiv@dividend,f
  2232     0179  0821               	movf	___lldiv@divisor+1,w
  2233     017A  3BA5               	subwfb	___lldiv@dividend+1,f
  2234     017B  0822               	movf	___lldiv@divisor+2,w
  2235     017C  3BA6               	subwfb	___lldiv@dividend+2,f
  2236     017D  0823               	movf	___lldiv@divisor+3,w
  2237     017E  3BA7               	subwfb	___lldiv@dividend+3,f
  2238     017F                     i1l957:
  2239     017F  1428               	bsf	___lldiv@quotient,0
  2240     0180                     i1l959:
  2241     0180  3001               	movlw	1
  2242     0181                     u34_25:
  2243     0181  36A3               	lsrf	___lldiv@divisor+3,f
  2244     0182  0CA2               	rrf	___lldiv@divisor+2,f
  2245     0183  0CA1               	rrf	___lldiv@divisor+1,f
  2246     0184  0CA0               	rrf	___lldiv@divisor,f
  2247     0185  0B89               	decfsz	9,f
  2248     0186  2981               	goto	u34_25
  2249     0187                     i1l961:
  2250     0187  3001               	movlw	1
  2251     0188  02AC               	subwf	___lldiv@counter,f
  2252     0189  1D03               	btfss	3,2
  2253     018A  298C               	goto	u35_21
  2254     018B  298D               	goto	u35_20
  2255     018C                     u35_21:
  2256     018C  295E               	goto	i1l951
  2257     018D                     u35_20:
  2258     018D                     i1l963:
  2259     018D  082B               	movf	___lldiv@quotient+3,w
  2260     018E  00A3               	movwf	?___lldiv+3
  2261     018F  082A               	movf	___lldiv@quotient+2,w
  2262     0190  00A2               	movwf	?___lldiv+2
  2263     0191  0829               	movf	___lldiv@quotient+1,w
  2264     0192  00A1               	movwf	?___lldiv+1
  2265     0193  0828               	movf	___lldiv@quotient,w
  2266     0194  00A0               	movwf	?___lldiv
  2267     0195                     i1l297:
  2268     0195  0008               	return
  2269     0196                     __end_of___lldiv:
  2270                           
  2271                           	psect	text11
  2272     0275                     __ptext11:	
  2273 ;; *************** function _ASCII_Con *****************
  2274 ;; Defined at:
  2275 ;;		line 65 in file "funtions.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  a               2    0[COMMON] unsigned short 
  2278 ;;  b               2    2[COMMON] unsigned short 
  2279 ;;  c               2    4[COMMON] unsigned short 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      PTR unsigned char 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2291 ;;      Params:         6       0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0
  2294 ;;      Totals:         6       0       0       0       0       0
  2295 ;;Total ram usage:        6 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_INT_TMR0
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304     0275                     _ASCII_Con:	
  2305                           ;psect for function _ASCII_Con
  2306                           
  2307     0275                     i1l1081:	
  2308                           ;incstack = 0
  2309                           ; Regs used in _ASCII_Con: [wreg+status,2+status,0]
  2310                           
  2311                           
  2312                           ;funtions.c: 66:     static unsigned char r[7];;funtions.c: 67:     r[0] = (char)(a + 48
      +                          );
  2313     0275  0870               	movf	ASCII_Con@a,w
  2314     0276  3E30               	addlw	48
  2315     0277  0020               	movlb	0	; select bank0
  2316     0278  00C8               	movwf	ASCII_Con@r
  2317     0279                     i1l1083:
  2318                           
  2319                           ;funtions.c: 68:     r[1] = '.';
  2320     0279  302E               	movlw	46
  2321     027A  00C9               	movwf	ASCII_Con@r+1
  2322     027B                     i1l1085:
  2323                           
  2324                           ;funtions.c: 69:     r[2] = (char)(b + 48);
  2325     027B  0872               	movf	ASCII_Con@b,w
  2326     027C  3E30               	addlw	48
  2327     027D  00CA               	movwf	ASCII_Con@r+2
  2328     027E                     i1l1087:
  2329                           
  2330                           ;funtions.c: 70:     r[3] = (char)(c + 48);;
  2331     027E  0874               	movf	ASCII_Con@c,w
  2332     027F  3E30               	addlw	48
  2333     0280  00CB               	movwf	ASCII_Con@r+3
  2334     0281                     i1l1089:
  2335                           
  2336                           ;funtions.c: 71:     r[4] = ' ';
  2337     0281  3020               	movlw	32
  2338     0282  00CC               	movwf	ASCII_Con@r+4
  2339     0283                     i1l1091:
  2340                           
  2341                           ;funtions.c: 72:     r[5] = 'V';
  2342     0283  3056               	movlw	86
  2343     0284  00CD               	movwf	ASCII_Con@r+5
  2344     0285                     i1l1093:
  2345                           
  2346                           ;funtions.c: 73:     r[6] = '\0';
  2347     0285  01CE               	clrf	ASCII_Con@r+6
  2348     0286                     i1l1095:
  2349                           
  2350                           ;funtions.c: 75:     return r;
  2351     0286  3048               	movlw	(low (ASCII_Con@r| 0))& (0+255)
  2352     0287                     i1l65:
  2353     0287  0008               	return
  2354     0288                     __end_of_ASCII_Con:
  2355     007E                     btemp	set	126	;btemp
  2356     007E                     int$flags	set	126
  2357     007E                     wtemp0	set	126
  2358                           
  2359                           	psect	idloc
  2360                           
  2361                           ;Config register IDLOC0 @ 0x8000
  2362                           ;	unspecified, using default values
  2363     8000                     	org	32768
  2364     8000  3FFF               	dw	16383
  2365                           
  2366                           ;Config register IDLOC1 @ 0x8001
  2367                           ;	unspecified, using default values
  2368     8001                     	org	32769
  2369     8001  3FFF               	dw	16383
  2370                           
  2371                           ;Config register IDLOC2 @ 0x8002
  2372                           ;	unspecified, using default values
  2373     8002                     	org	32770
  2374     8002  3FFF               	dw	16383
  2375                           
  2376                           ;Config register IDLOC3 @ 0x8003
  2377                           ;	unspecified, using default values
  2378     8003                     	org	32771
  2379     8003  3FFF               	dw	16383
  2380                           
  2381                           	psect	config
  2382                           
  2383                           ;Config register CONFIG1 @ 0x8007
  2384                           ;	Oscillator Selection
  2385                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2386                           ;	Watchdog Timer Enable
  2387                           ;	WDTE = ON, WDT enabled
  2388                           ;	Power-up Timer Enable
  2389                           ;	PWRTE = OFF, PWRT disabled
  2390                           ;	MCLR Pin Function Select
  2391                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2392                           ;	Flash Program Memory Code Protection
  2393                           ;	CP = OFF, Program memory code protection is disabled
  2394                           ;	Data Memory Code Protection
  2395                           ;	CPD = OFF, Data memory code protection is disabled
  2396                           ;	Brown-out Reset Enable
  2397                           ;	BOREN = ON, Brown-out Reset enabled
  2398                           ;	Clock Out Enable
  2399                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2400                           ;	Internal/External Switchover
  2401                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2402                           ;	Fail-Safe Clock Monitor Enable
  2403                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2404     8007                     	org	32775
  2405     8007  3FFC               	dw	16380
  2406                           
  2407                           ;Config register CONFIG2 @ 0x8008
  2408                           ;	Flash Memory Self-Write Protection
  2409                           ;	WRT = OFF, Write protection off
  2410                           ;	PLL Enable
  2411                           ;	PLLEN = OFF, 4x PLL disabled
  2412                           ;	Stack Overflow/Underflow Reset Enable
  2413                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2414                           ;	Brown-out Reset Voltage Selection
  2415                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2416                           ;	Low-Voltage Programming Enable
  2417                           ;	LVP = ON, Low-voltage programming enabled
  2418     8008                     	org	32776
  2419     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      53
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    UART_print@cadena	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    sp__ASCII_Con	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    sp__BinTOBcd	PTR unsigned short  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    INT_TMR0@B	PTR unsigned short  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INT_TMR0 in COMMON

    _UART_print->_UART_write
    _BinTOBcd->___llmod
    ___llmod->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_TMR0 in BANK0

    _INT_TMR0->_BinTOBcd
    _BinTOBcd->___llmod
    ___llmod->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_TMR0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_TMR0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_TMR0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_TMR0 in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _init_IO
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT_TMR0                                             6     6      0    2255
                                             34 BANK0      6     6      0
                          _ASCII_Con
                           _BinTOBcd
                         _UART_print
 ---------------------------------------------------------------------------------
 (4) _UART_print                                           2     2      0     100
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (5) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _BinTOBcd                                            12     8      4    1794
                                             22 BANK0     12     8      4
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     548
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     463
                                             13 COMMON     1     1      0
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     618
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _ASCII_Con                                            6     0      6     294
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_IO
     _init_UART
   _readADC

 _INT_TMR0 (ROOT)
   _ASCII_Con
   _BinTOBcd
     ___lldiv
       ___lmul (ARG)
     ___llmod
       ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul
   _UART_print
     _UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      43       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      43      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 18 13:14:55 2023

                     l48 02B0                      l111 0294                      l108 0225  
                    wreg 0009                     l1201 021C                     l1123 0288  
                   l1211 0221                     l1203 021D                     l1131 01E8  
                   l1125 0291                     l1213 0222                     l1205 021E  
                   l1141 01EE                     l1133 01EA                     l1127 0293  
                   l1207 021F                     l1151 01F4                     l1143 01F0  
                   l1135 01EB                     l1215 02AD                     l1209 0220  
                   l1161 01FA                     l1153 01F5                     l1145 01F1  
                   l1137 01EC                     l1129 01E1                     l1217 0295  
                   l1171 0200                     l1163 01FB                     l1155 01F6  
                   l1147 01F2                     l1139 01ED                     l1219 0298  
                   l1181 0205                     l1173 0201                     l1165 01FC  
                   l1157 01F8                     l1149 01F3                     l1191 0210  
                   l1183 0206                     l1175 0202                     l1167 01FD  
                   l1159 01F9                     l1193 0211                     l1185 0207  
                   l1177 0203                     l1169 01FE                     l1195 0218  
                   l1187 0208                     l1179 0204                     l1197 021A  
                   l1189 020C                     l1199 021B                     i1l32 0047  
                   i1l51 02A2                     i1l60 0274                     i1l45 013A  
                   i1l54 02A6                     i1l65 0287                     _main 0295  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0049                    ?_main 0070  
        __end_of___lldiv 0196          __end_of___llmod 01E1         __end_of_INT_TMR0 0049  
                  i1l275 0258                    i1l297 0195                    i1l491 01E0  
                  i1l921 029F                    i1l931 022E                    i1l933 0232  
                  i1l951 015E                    i1l943 013B                    i1l935 023A  
                  i1l961 0187                    i1l953 0165                    i1l945 014C  
                  i1l937 0241                    i1l929 0226                    i1l955 0177  
                  i1l947 014F                    i1l963 018D                    i1l971 01A2  
                  i1l939 0250                    i1l957 017F                    i1l949 015A  
                  i1l981 01D2                    i1l973 01AD                    i1l959 0180  
                  i1l975 01B1                    i1l983 01D8                    i1l967 0196  
                  i1l977 01C3                    i1l969 019F                    i1l979 01CB  
                  u30_25 0150                    u31_20 015E                    u31_21 015D  
                  u24_20 02A6                    u24_21 02A5                    u32_25 015F  
                  u40_25 01CC                    u33_20 0177                    u41_20 01D8  
                  u25_20 0232                    u33_21 0176                    u41_21 01D7  
                  u25_21 0231                    u33_25 0173                    u42_20 0081  
                  _SPBRG 019B                    u34_25 0181                    u26_25 023B  
                  u42_25 007D                    u35_20 018D                    u43_20 00C4  
                  u35_21 018C                    u27_25 0242                    u43_25 00C0  
                  u36_20 019F                    u28_20 0250                    u44_20 010B  
                  u36_21 019E                    u28_21 024F                    u44_25 0107  
                  u29_20 014C                    u45_20 026E                    u29_21 014B  
                  u45_21 026D                    u37_25 01A3                    u38_20 01B1  
                  u46_20 000B                    u38_21 01B0                    u46_21 000A  
                  u39_20 01C3                    u39_21 01C2                    u39_25 01BF  
                  _TXREG 019A      ___lmul@multiplicand 0074          __end_of_readADC 02B1  
        __end_of_init_IO 0226              ?_UART_print 0070              ?_UART_write 0070  
       __end_of_BinTOBcd 013B            _BinTOBcd$1316 003E                    status 0003  
                  wtemp0 007E        __end_of_ASCII_Con 0288          __initialization 004B  
           __end_of_main 029E                   ??_main 0000         ___llmod@dividend 0031  
                 _ADRESH 009C                   _ADRESL 009B                   i1l1101 025B  
                 i1l1103 0262                   i1l1105 0266                   i1l1113 0006  
                 i1l1107 026E                   i1l1115 000B                   i1l1117 000E  
                 i1l1119 002A                   i1l1081 0275                   i1l1091 0283  
                 i1l1083 0279                   i1l1075 0057                   i1l1093 0285  
                 i1l1085 027B                   i1l1077 0139                   i1l1095 0286  
                 i1l1087 027E                   i1l1089 0281                   i1l1099 025A  
                 ___lmul 0226                ??___lldiv 007C                ??___llmod 007D  
              ??_readADC 0000                ??_init_IO 0000  __end_of__initialization 0053  
              ?_INT_TMR0 0070             BinTOBcd@iADC 0036           __pcstackCOMMON 0070  
              ?_BinTOBcd 0036                INT_TMR0@B 0047               __pbssBANK0 0048  
             ??_INT_TMR0 0042               __pmaintext 0295                  ?___lmul 0070  
             __pintentry 0004           ___lmul@product 0078               ??_BinTOBcd 003A  
           ??_UART_print 0071             ??_UART_write 0070                _ASCII_Con 0275  
                ___lldiv 013B                  ___llmod 0196                BinTOBcd@r 004F  
             ASCII_Con@a 0070               ASCII_Con@b 0072               ASCII_Con@c 0074  
             ASCII_Con@r 0048       __end_of_UART_print 0275       __end_of_UART_write 02A7  
                __ptext1 02AD                  __ptext2 01E1                  __ptext3 0288  
                __ptext5 0259                  __ptext6 029E                  __ptext7 0057  
                __ptext8 0226                  __ptext9 0196        __end_of_init_UART 0295  
                _readADC 02AD                  _init_IO 01E1                  clrloop0 02A8  
   end_of_initialization 0053          ___lldiv@divisor 0020          ___lldiv@counter 002C  
              _RCSTAbits 019D              UART_write@c 0070               ?_ASCII_Con 0070  
              _TRISAbits 008C                _TRISBbits 008D                _TXSTAbits 019E  
         __end_of___lmul 0259              _BAUDCONbits 019F      start_initialization 004B  
        ___llmod@divisor 002D          ___llmod@counter 0035              _APFCON1bits 011E  
               ??___lmul 0078              ??_ASCII_Con 0076                ___latbits 0001  
          __pcstackBANK0 0020            __pcstackBANK1 0000                 ?___lldiv 0020  
               ?___llmod 002D                 ?_readADC 0070                 ?_init_IO 0070  
              _init_UART 0288                 _LATAbits 010C                 _LATBbits 010D  
              clear_ram0 02A7                 _PIE1bits 0091                 _INT_TMR0 0004  
               _PIR1bits 0011               _ADCON0bits 009D               _ADCON1bits 009E  
               _BinTOBcd 0057               ?_init_UART 0070        ___lmul@multiplier 0070  
       UART_print@cadena 0072               _ANSELAbits 018C               _ANSELBbits 018D  
               __ptext10 013B                 __ptext11 0275                 int$flags 007E  
             _INTCONbits 000B               _FVRCONbits 0117              ??_init_UART 0000  
               intlevel1 0000         ___lldiv@dividend 0024               _OSCCONbits 0099  
       ___lldiv@quotient 0028               _WDTCONbits 0097               _UART_print 0259  
             _UART_write 029E  
