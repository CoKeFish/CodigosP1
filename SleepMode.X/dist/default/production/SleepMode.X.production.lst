

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 18 13:29:22 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1827 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0095                     	;# 
    97     0096                     	;# 
    98     0097                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009A                     	;# 
   102     009B                     	;# 
   103     009B                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     0111                     	;# 
   110     0112                     	;# 
   111     0113                     	;# 
   112     0114                     	;# 
   113     0115                     	;# 
   114     0116                     	;# 
   115     0117                     	;# 
   116     0118                     	;# 
   117     0119                     	;# 
   118     011A                     	;# 
   119     011B                     	;# 
   120     011D                     	;# 
   121     011E                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     0191                     	;# 
   125     0191                     	;# 
   126     0192                     	;# 
   127     0193                     	;# 
   128     0193                     	;# 
   129     0193                     	;# 
   130     0194                     	;# 
   131     0195                     	;# 
   132     0196                     	;# 
   133     0199                     	;# 
   134     019A                     	;# 
   135     019B                     	;# 
   136     019B                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019C                     	;# 
   140     019C                     	;# 
   141     019D                     	;# 
   142     019E                     	;# 
   143     019F                     	;# 
   144     020C                     	;# 
   145     020D                     	;# 
   146     0211                     	;# 
   147     0211                     	;# 
   148     0212                     	;# 
   149     0212                     	;# 
   150     0213                     	;# 
   151     0213                     	;# 
   152     0214                     	;# 
   153     0214                     	;# 
   154     0215                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0216                     	;# 
   158     0216                     	;# 
   159     0217                     	;# 
   160     0217                     	;# 
   161     0219                     	;# 
   162     021A                     	;# 
   163     021B                     	;# 
   164     021C                     	;# 
   165     021D                     	;# 
   166     021E                     	;# 
   167     021F                     	;# 
   168     0291                     	;# 
   169     0291                     	;# 
   170     0292                     	;# 
   171     0293                     	;# 
   172     0294                     	;# 
   173     0295                     	;# 
   174     0295                     	;# 
   175     0296                     	;# 
   176     0298                     	;# 
   177     0298                     	;# 
   178     0299                     	;# 
   179     029A                     	;# 
   180     029B                     	;# 
   181     029C                     	;# 
   182     029C                     	;# 
   183     029D                     	;# 
   184     029E                     	;# 
   185     029E                     	;# 
   186     0311                     	;# 
   187     0311                     	;# 
   188     0312                     	;# 
   189     0313                     	;# 
   190     0318                     	;# 
   191     0318                     	;# 
   192     0319                     	;# 
   193     031A                     	;# 
   194     0394                     	;# 
   195     0395                     	;# 
   196     0396                     	;# 
   197     039A                     	;# 
   198     039C                     	;# 
   199     039D                     	;# 
   200     039E                     	;# 
   201     039F                     	;# 
   202     0415                     	;# 
   203     0416                     	;# 
   204     0417                     	;# 
   205     041C                     	;# 
   206     041D                     	;# 
   207     041E                     	;# 
   208     0FE4                     	;# 
   209     0FE5                     	;# 
   210     0FE6                     	;# 
   211     0FE7                     	;# 
   212     0FE8                     	;# 
   213     0FE9                     	;# 
   214     0FEA                     	;# 
   215     0FEB                     	;# 
   216     0FED                     	;# 
   217     0FEE                     	;# 
   218     0FEF                     	;# 
   219     0000                     	;# 
   220     0001                     	;# 
   221     0002                     	;# 
   222     0003                     	;# 
   223     0004                     	;# 
   224     0005                     	;# 
   225     0006                     	;# 
   226     0007                     	;# 
   227     0008                     	;# 
   228     0009                     	;# 
   229     000A                     	;# 
   230     000B                     	;# 
   231     000C                     	;# 
   232     000D                     	;# 
   233     0011                     	;# 
   234     0012                     	;# 
   235     0013                     	;# 
   236     0014                     	;# 
   237     0015                     	;# 
   238     0016                     	;# 
   239     0016                     	;# 
   240     0017                     	;# 
   241     0018                     	;# 
   242     0019                     	;# 
   243     001A                     	;# 
   244     001B                     	;# 
   245     001C                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     008C                     	;# 
   249     008D                     	;# 
   250     0091                     	;# 
   251     0092                     	;# 
   252     0093                     	;# 
   253     0094                     	;# 
   254     0095                     	;# 
   255     0096                     	;# 
   256     0097                     	;# 
   257     0098                     	;# 
   258     0099                     	;# 
   259     009A                     	;# 
   260     009B                     	;# 
   261     009B                     	;# 
   262     009C                     	;# 
   263     009D                     	;# 
   264     009E                     	;# 
   265     010C                     	;# 
   266     010D                     	;# 
   267     0111                     	;# 
   268     0112                     	;# 
   269     0113                     	;# 
   270     0114                     	;# 
   271     0115                     	;# 
   272     0116                     	;# 
   273     0117                     	;# 
   274     0118                     	;# 
   275     0119                     	;# 
   276     011A                     	;# 
   277     011B                     	;# 
   278     011D                     	;# 
   279     011E                     	;# 
   280     018C                     	;# 
   281     018D                     	;# 
   282     0191                     	;# 
   283     0191                     	;# 
   284     0192                     	;# 
   285     0193                     	;# 
   286     0193                     	;# 
   287     0193                     	;# 
   288     0194                     	;# 
   289     0195                     	;# 
   290     0196                     	;# 
   291     0199                     	;# 
   292     019A                     	;# 
   293     019B                     	;# 
   294     019B                     	;# 
   295     019B                     	;# 
   296     019B                     	;# 
   297     019C                     	;# 
   298     019C                     	;# 
   299     019D                     	;# 
   300     019E                     	;# 
   301     019F                     	;# 
   302     020C                     	;# 
   303     020D                     	;# 
   304     0211                     	;# 
   305     0211                     	;# 
   306     0212                     	;# 
   307     0212                     	;# 
   308     0213                     	;# 
   309     0213                     	;# 
   310     0214                     	;# 
   311     0214                     	;# 
   312     0215                     	;# 
   313     0215                     	;# 
   314     0215                     	;# 
   315     0216                     	;# 
   316     0216                     	;# 
   317     0217                     	;# 
   318     0217                     	;# 
   319     0219                     	;# 
   320     021A                     	;# 
   321     021B                     	;# 
   322     021C                     	;# 
   323     021D                     	;# 
   324     021E                     	;# 
   325     021F                     	;# 
   326     0291                     	;# 
   327     0291                     	;# 
   328     0292                     	;# 
   329     0293                     	;# 
   330     0294                     	;# 
   331     0295                     	;# 
   332     0295                     	;# 
   333     0296                     	;# 
   334     0298                     	;# 
   335     0298                     	;# 
   336     0299                     	;# 
   337     029A                     	;# 
   338     029B                     	;# 
   339     029C                     	;# 
   340     029C                     	;# 
   341     029D                     	;# 
   342     029E                     	;# 
   343     029E                     	;# 
   344     0311                     	;# 
   345     0311                     	;# 
   346     0312                     	;# 
   347     0313                     	;# 
   348     0318                     	;# 
   349     0318                     	;# 
   350     0319                     	;# 
   351     031A                     	;# 
   352     0394                     	;# 
   353     0395                     	;# 
   354     0396                     	;# 
   355     039A                     	;# 
   356     039C                     	;# 
   357     039D                     	;# 
   358     039E                     	;# 
   359     039F                     	;# 
   360     0415                     	;# 
   361     0416                     	;# 
   362     0417                     	;# 
   363     041C                     	;# 
   364     041D                     	;# 
   365     041E                     	;# 
   366     0FE4                     	;# 
   367     0FE5                     	;# 
   368     0FE6                     	;# 
   369     0FE7                     	;# 
   370     0FE8                     	;# 
   371     0FE9                     	;# 
   372     0FEA                     	;# 
   373     0FEB                     	;# 
   374     0FED                     	;# 
   375     0FEE                     	;# 
   376     0FEF                     	;# 
   377     0000                     	;# 
   378     0001                     	;# 
   379     0002                     	;# 
   380     0003                     	;# 
   381     0004                     	;# 
   382     0005                     	;# 
   383     0006                     	;# 
   384     0007                     	;# 
   385     0008                     	;# 
   386     0009                     	;# 
   387     000A                     	;# 
   388     000B                     	;# 
   389     000C                     	;# 
   390     000D                     	;# 
   391     0011                     	;# 
   392     0012                     	;# 
   393     0013                     	;# 
   394     0014                     	;# 
   395     0015                     	;# 
   396     0016                     	;# 
   397     0016                     	;# 
   398     0017                     	;# 
   399     0018                     	;# 
   400     0019                     	;# 
   401     001A                     	;# 
   402     001B                     	;# 
   403     001C                     	;# 
   404     001E                     	;# 
   405     001F                     	;# 
   406     008C                     	;# 
   407     008D                     	;# 
   408     0091                     	;# 
   409     0092                     	;# 
   410     0093                     	;# 
   411     0094                     	;# 
   412     0095                     	;# 
   413     0096                     	;# 
   414     0097                     	;# 
   415     0098                     	;# 
   416     0099                     	;# 
   417     009A                     	;# 
   418     009B                     	;# 
   419     009B                     	;# 
   420     009C                     	;# 
   421     009D                     	;# 
   422     009E                     	;# 
   423     010C                     	;# 
   424     010D                     	;# 
   425     0111                     	;# 
   426     0112                     	;# 
   427     0113                     	;# 
   428     0114                     	;# 
   429     0115                     	;# 
   430     0116                     	;# 
   431     0117                     	;# 
   432     0118                     	;# 
   433     0119                     	;# 
   434     011A                     	;# 
   435     011B                     	;# 
   436     011D                     	;# 
   437     011E                     	;# 
   438     018C                     	;# 
   439     018D                     	;# 
   440     0191                     	;# 
   441     0191                     	;# 
   442     0192                     	;# 
   443     0193                     	;# 
   444     0193                     	;# 
   445     0193                     	;# 
   446     0194                     	;# 
   447     0195                     	;# 
   448     0196                     	;# 
   449     0199                     	;# 
   450     019A                     	;# 
   451     019B                     	;# 
   452     019B                     	;# 
   453     019B                     	;# 
   454     019B                     	;# 
   455     019C                     	;# 
   456     019C                     	;# 
   457     019D                     	;# 
   458     019E                     	;# 
   459     019F                     	;# 
   460     020C                     	;# 
   461     020D                     	;# 
   462     0211                     	;# 
   463     0211                     	;# 
   464     0212                     	;# 
   465     0212                     	;# 
   466     0213                     	;# 
   467     0213                     	;# 
   468     0214                     	;# 
   469     0214                     	;# 
   470     0215                     	;# 
   471     0215                     	;# 
   472     0215                     	;# 
   473     0216                     	;# 
   474     0216                     	;# 
   475     0217                     	;# 
   476     0217                     	;# 
   477     0219                     	;# 
   478     021A                     	;# 
   479     021B                     	;# 
   480     021C                     	;# 
   481     021D                     	;# 
   482     021E                     	;# 
   483     021F                     	;# 
   484     0291                     	;# 
   485     0291                     	;# 
   486     0292                     	;# 
   487     0293                     	;# 
   488     0294                     	;# 
   489     0295                     	;# 
   490     0295                     	;# 
   491     0296                     	;# 
   492     0298                     	;# 
   493     0298                     	;# 
   494     0299                     	;# 
   495     029A                     	;# 
   496     029B                     	;# 
   497     029C                     	;# 
   498     029C                     	;# 
   499     029D                     	;# 
   500     029E                     	;# 
   501     029E                     	;# 
   502     0311                     	;# 
   503     0311                     	;# 
   504     0312                     	;# 
   505     0313                     	;# 
   506     0318                     	;# 
   507     0318                     	;# 
   508     0319                     	;# 
   509     031A                     	;# 
   510     0394                     	;# 
   511     0395                     	;# 
   512     0396                     	;# 
   513     039A                     	;# 
   514     039C                     	;# 
   515     039D                     	;# 
   516     039E                     	;# 
   517     039F                     	;# 
   518     0415                     	;# 
   519     0416                     	;# 
   520     0417                     	;# 
   521     041C                     	;# 
   522     041D                     	;# 
   523     041E                     	;# 
   524     0FE4                     	;# 
   525     0FE5                     	;# 
   526     0FE6                     	;# 
   527     0FE7                     	;# 
   528     0FE8                     	;# 
   529     0FE9                     	;# 
   530     0FEA                     	;# 
   531     0FEB                     	;# 
   532     0FED                     	;# 
   533     0FEE                     	;# 
   534     0FEF                     	;# 
   535     0000                     	;# 
   536     0001                     	;# 
   537     0002                     	;# 
   538     0003                     	;# 
   539     0004                     	;# 
   540     0005                     	;# 
   541     0006                     	;# 
   542     0007                     	;# 
   543     0008                     	;# 
   544     0009                     	;# 
   545     000A                     	;# 
   546     000B                     	;# 
   547     000C                     	;# 
   548     000D                     	;# 
   549     0011                     	;# 
   550     0012                     	;# 
   551     0013                     	;# 
   552     0014                     	;# 
   553     0015                     	;# 
   554     0016                     	;# 
   555     0016                     	;# 
   556     0017                     	;# 
   557     0018                     	;# 
   558     0019                     	;# 
   559     001A                     	;# 
   560     001B                     	;# 
   561     001C                     	;# 
   562     001E                     	;# 
   563     001F                     	;# 
   564     008C                     	;# 
   565     008D                     	;# 
   566     0091                     	;# 
   567     0092                     	;# 
   568     0093                     	;# 
   569     0094                     	;# 
   570     0095                     	;# 
   571     0096                     	;# 
   572     0097                     	;# 
   573     0098                     	;# 
   574     0099                     	;# 
   575     009A                     	;# 
   576     009B                     	;# 
   577     009B                     	;# 
   578     009C                     	;# 
   579     009D                     	;# 
   580     009E                     	;# 
   581     010C                     	;# 
   582     010D                     	;# 
   583     0111                     	;# 
   584     0112                     	;# 
   585     0113                     	;# 
   586     0114                     	;# 
   587     0115                     	;# 
   588     0116                     	;# 
   589     0117                     	;# 
   590     0118                     	;# 
   591     0119                     	;# 
   592     011A                     	;# 
   593     011B                     	;# 
   594     011D                     	;# 
   595     011E                     	;# 
   596     018C                     	;# 
   597     018D                     	;# 
   598     0191                     	;# 
   599     0191                     	;# 
   600     0192                     	;# 
   601     0193                     	;# 
   602     0193                     	;# 
   603     0193                     	;# 
   604     0194                     	;# 
   605     0195                     	;# 
   606     0196                     	;# 
   607     0199                     	;# 
   608     019A                     	;# 
   609     019B                     	;# 
   610     019B                     	;# 
   611     019B                     	;# 
   612     019B                     	;# 
   613     019C                     	;# 
   614     019C                     	;# 
   615     019D                     	;# 
   616     019E                     	;# 
   617     019F                     	;# 
   618     020C                     	;# 
   619     020D                     	;# 
   620     0211                     	;# 
   621     0211                     	;# 
   622     0212                     	;# 
   623     0212                     	;# 
   624     0213                     	;# 
   625     0213                     	;# 
   626     0214                     	;# 
   627     0214                     	;# 
   628     0215                     	;# 
   629     0215                     	;# 
   630     0215                     	;# 
   631     0216                     	;# 
   632     0216                     	;# 
   633     0217                     	;# 
   634     0217                     	;# 
   635     0219                     	;# 
   636     021A                     	;# 
   637     021B                     	;# 
   638     021C                     	;# 
   639     021D                     	;# 
   640     021E                     	;# 
   641     021F                     	;# 
   642     0291                     	;# 
   643     0291                     	;# 
   644     0292                     	;# 
   645     0293                     	;# 
   646     0294                     	;# 
   647     0295                     	;# 
   648     0295                     	;# 
   649     0296                     	;# 
   650     0298                     	;# 
   651     0298                     	;# 
   652     0299                     	;# 
   653     029A                     	;# 
   654     029B                     	;# 
   655     029C                     	;# 
   656     029C                     	;# 
   657     029D                     	;# 
   658     029E                     	;# 
   659     029E                     	;# 
   660     0311                     	;# 
   661     0311                     	;# 
   662     0312                     	;# 
   663     0313                     	;# 
   664     0318                     	;# 
   665     0318                     	;# 
   666     0319                     	;# 
   667     031A                     	;# 
   668     0394                     	;# 
   669     0395                     	;# 
   670     0396                     	;# 
   671     039A                     	;# 
   672     039C                     	;# 
   673     039D                     	;# 
   674     039E                     	;# 
   675     039F                     	;# 
   676     0415                     	;# 
   677     0416                     	;# 
   678     0417                     	;# 
   679     041C                     	;# 
   680     041D                     	;# 
   681     041E                     	;# 
   682     0FE4                     	;# 
   683     0FE5                     	;# 
   684     0FE6                     	;# 
   685     0FE7                     	;# 
   686     0FE8                     	;# 
   687     0FE9                     	;# 
   688     0FEA                     	;# 
   689     0FEB                     	;# 
   690     0FED                     	;# 
   691     0FEE                     	;# 
   692     0FEF                     	;# 
   693     000B                     _INTCONbits	set	11
   694     0011                     _PIR1bits	set	17
   695     0091                     _PIE1bits	set	145
   696     009E                     _ADCON1bits	set	158
   697     008D                     _TRISBbits	set	141
   698     008C                     _TRISAbits	set	140
   699     0099                     _OSCCONbits	set	153
   700     0097                     _WDTCONbits	set	151
   701     009B                     _ADRESL	set	155
   702     009C                     _ADRESH	set	156
   703     009D                     _ADCON0bits	set	157
   704     011E                     _APFCON1bits	set	286
   705     010D                     _LATBbits	set	269
   706     010C                     _LATAbits	set	268
   707     0117                     _FVRCONbits	set	279
   708     019D                     _RCSTAbits	set	413
   709     019B                     _SPBRG	set	411
   710     019F                     _BAUDCONbits	set	415
   711     018D                     _ANSELBbits	set	397
   712     018C                     _ANSELAbits	set	396
   713     019E                     _TXSTAbits	set	414
   714     019A                     _TXREG	set	410
   715                           
   716                           	psect	cinit
   717     004B                     start_initialization:	
   718                           ; #config settings
   719                           
   720     004B                     __initialization:
   721                           
   722                           ; Clear objects allocated to BANK0
   723     004B  3048               	movlw	low __pbssBANK0
   724     004C  0084               	movwf	4
   725     004D  3000               	movlw	high __pbssBANK0
   726     004E  0085               	movwf	5
   727     004F  300D               	movlw	13
   728     0050  3182  22AE  3180   	fcall	clear_ram0
   729     0053                     end_of_initialization:	
   730                           ;End of C runtime variable initialization code
   731                           
   732     0053                     __end_of__initialization:
   733     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   734     0054  0020               	movlb	0
   735     0055  3182  2A9C         	ljmp	_main	;jump to C main() function
   736                           
   737                           	psect	bssBANK0
   738     0048                     __pbssBANK0:
   739     0048                     ASCII_Con@r:
   740     0048                     	ds	7
   741     004F                     BinTOBcd@r:
   742     004F                     	ds	6
   743                           
   744                           	psect	clrtext
   745     02AE                     clear_ram0:	
   746                           ;	Called with FSR0 containing the base address, and
   747                           ;	WREG with the size to clear
   748                           
   749     02AE  0064               	clrwdt	;clear the watchdog before getting into this loop
   750     02AF                     clrloop0:
   751     02AF  0180               	clrf	0	;clear RAM location pointed to by FSR
   752     02B0  3101               	addfsr 0,1
   753     02B1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   754     02B2  2AAF               	goto	clrloop0	;have we reached the end yet?
   755     02B3  3400               	retlw	0	;all done for this memory range, return
   756                           
   757                           	psect	cstackBANK1
   758     0000                     __pcstackBANK1:
   759     0000                     ??_init_IO:
   760     0000                     ??_readADC:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0000                     ??_init_UART:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0000                     ??_main:	
   767                           ; 1 bytes @ 0x0
   768                           
   769                           
   770                           	psect	cstackCOMMON
   771     0070                     __pcstackCOMMON:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_init_IO:
   775     0070                     ?_readADC:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0070                     ?_UART_print:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ?_ASCII_Con:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ?_init_UART:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ?_main:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?_INT_TMR0:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ?_UART_write:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ??_UART_write:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ?___lmul:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     UART_write@c:	
   803                           ; 4 bytes @ 0x0
   804                           
   805     0070                     ASCII_Con@a:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ___lmul@multiplier:	
   809                           ; 2 bytes @ 0x0
   810                           
   811                           
   812                           ; 4 bytes @ 0x0
   813     0070                     	ds	1
   814     0071                     ??_UART_print:
   815                           
   816                           ; 1 bytes @ 0x1
   817     0071                     	ds	1
   818     0072                     UART_print@cadena:
   819     0072                     ASCII_Con@b:	
   820                           ; 1 bytes @ 0x2
   821                           
   822                           
   823                           ; 2 bytes @ 0x2
   824     0072                     	ds	2
   825     0074                     ASCII_Con@c:
   826     0074                     ___lmul@multiplicand:	
   827                           ; 2 bytes @ 0x4
   828                           
   829                           
   830                           ; 4 bytes @ 0x4
   831     0074                     	ds	2
   832     0076                     ??_ASCII_Con:
   833                           
   834                           ; 1 bytes @ 0x6
   835     0076                     	ds	2
   836     0078                     ??___lmul:
   837     0078                     ___lmul@product:	
   838                           ; 1 bytes @ 0x8
   839                           
   840                           
   841                           ; 4 bytes @ 0x8
   842     0078                     	ds	4
   843     007C                     ??___lldiv:
   844                           
   845                           ; 1 bytes @ 0xC
   846     007C                     	ds	1
   847     007D                     ??___llmod:
   848                           
   849                           ; 1 bytes @ 0xD
   850     007D                     	ds	1
   851                           
   852                           	psect	cstackBANK0
   853     0020                     __pcstackBANK0:
   854     0020                     ?___lldiv:
   855     0020                     ___lldiv@divisor:	
   856                           ; 4 bytes @ 0x0
   857                           
   858                           
   859                           ; 4 bytes @ 0x0
   860     0020                     	ds	4
   861     0024                     ___lldiv@dividend:
   862                           
   863                           ; 4 bytes @ 0x4
   864     0024                     	ds	4
   865     0028                     ___lldiv@quotient:
   866                           
   867                           ; 4 bytes @ 0x8
   868     0028                     	ds	4
   869     002C                     ___lldiv@counter:
   870                           
   871                           ; 1 bytes @ 0xC
   872     002C                     	ds	1
   873     002D                     ?___llmod:
   874     002D                     ___llmod@divisor:	
   875                           ; 4 bytes @ 0xD
   876                           
   877                           
   878                           ; 4 bytes @ 0xD
   879     002D                     	ds	4
   880     0031                     ___llmod@dividend:
   881                           
   882                           ; 4 bytes @ 0x11
   883     0031                     	ds	4
   884     0035                     ___llmod@counter:
   885                           
   886                           ; 1 bytes @ 0x15
   887     0035                     	ds	1
   888     0036                     ?_BinTOBcd:
   889     0036                     BinTOBcd@iADC:	
   890                           ; 1 bytes @ 0x16
   891                           
   892                           
   893                           ; 4 bytes @ 0x16
   894     0036                     	ds	4
   895     003A                     ??_BinTOBcd:
   896                           
   897                           ; 1 bytes @ 0x1A
   898     003A                     	ds	4
   899     003E                     _BinTOBcd$1319:
   900                           
   901                           ; 4 bytes @ 0x1E
   902     003E                     	ds	4
   903     0042                     ??_INT_TMR0:
   904                           
   905                           ; 1 bytes @ 0x22
   906     0042                     	ds	5
   907     0047                     INT_TMR0@B:
   908                           
   909                           ; 1 bytes @ 0x27
   910     0047                     	ds	1
   911                           
   912                           	psect	maintext
   913     029C                     __pmaintext:	
   914 ;;
   915 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   916 ;;
   917 ;; *************** function _main *****************
   918 ;; Defined at:
   919 ;;		line 16 in file "main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : B1F/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   933 ;;      Params:         0       0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels required when called: 5
   939 ;; This function calls:
   940 ;;		_init_IO
   941 ;;		_readADC
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947     029C                     _main:	
   948                           ;psect for function _main
   949                           
   950     029C                     l1223:	
   951                           ;incstack = 0
   952                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   953                           
   954                           
   955                           ;main.c: 17:     init_IO();
   956     029C  3181  2196  3182   	fcall	_init_IO
   957     029F                     l1225:
   958                           
   959                           ;main.c: 21:     {;main.c: 22:         readADC();
   960     029F  3182  22B4  3182   	fcall	_readADC
   961     02A2  2A9F               	goto	l1225
   962     02A3  3180  2849         	ljmp	start
   963     02A5                     __end_of_main:
   964                           
   965                           	psect	text1
   966     02B4                     __ptext1:	
   967 ;; *************** function _readADC *****************
   968 ;; Defined at:
   969 ;;		line 27 in file "funtions.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		None
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   983 ;;      Params:         0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; Hardware stack levels required when called: 3
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997     02B4                     _readADC:	
   998                           ;psect for function _readADC
   999                           
  1000     02B4                     l1221:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _readADC: []
  1003                           
  1004                           
  1005                           ;funtions.c: 29:     ADCON0bits.ADON = 1;
  1006     02B4  0021               	movlb	1	; select bank1
  1007     02B5  141D               	bsf	29,0	;volatile
  1008                           
  1009                           ;funtions.c: 31:     ADCON0bits.GO_nDONE = 1;
  1010     02B6  149D               	bsf	29,1	;volatile
  1011     02B7                     l48:
  1012     02B7  0008               	return
  1013     02B8                     __end_of_readADC:
  1014                           
  1015                           	psect	text2
  1016     0196                     __ptext2:	
  1017 ;; *************** function _init_IO *****************
  1018 ;; Defined at:
  1019 ;;		line 4 in file "init.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, pclath, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1033 ;;      Params:         0       0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 4
  1040 ;; This function calls:
  1041 ;;		_init_UART
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047     0196                     _init_IO:	
  1048                           ;psect for function _init_IO
  1049                           
  1050     0196                     l1133:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _init_IO: [wreg+status,2+status,0+pclath+cstack]
  1053                           
  1054                           
  1055                           ;init.c: 7:     OSCCONbits.SCS = 0;
  1056     0196  30FC               	movlw	-4
  1057     0197  0021               	movlb	1	; select bank1
  1058     0198  0599               	andwf	25,f	;volatile
  1059                           
  1060                           ;init.c: 8:     OSCCONbits.IRCF = 0b1101;
  1061     0199  0819               	movf	25,w	;volatile
  1062     019A  3987               	andlw	-121
  1063     019B  3868               	iorlw	104
  1064     019C  0099               	movwf	25	;volatile
  1065     019D                     l1135:
  1066                           
  1067                           ;init.c: 14:     ANSELAbits.ANSA0 = 1;
  1068     019D  0023               	movlb	3	; select bank3
  1069     019E  140C               	bsf	12,0	;volatile
  1070     019F                     l1137:
  1071                           
  1072                           ;init.c: 15:     ANSELAbits.ANSA1 = 0;
  1073     019F  108C               	bcf	12,1	;volatile
  1074     01A0                     l1139:
  1075                           
  1076                           ;init.c: 16:     ANSELAbits.ANSA2 = 0;
  1077     01A0  110C               	bcf	12,2	;volatile
  1078     01A1                     l1141:
  1079                           
  1080                           ;init.c: 17:     ANSELAbits.ANSA3 = 0;
  1081     01A1  118C               	bcf	12,3	;volatile
  1082     01A2                     l1143:
  1083                           
  1084                           ;init.c: 18:     ANSELAbits.ANSA4 = 0;
  1085     01A2  120C               	bcf	12,4	;volatile
  1086     01A3                     l1145:
  1087                           
  1088                           ;init.c: 21:     TRISAbits.TRISA0 = 1;
  1089     01A3  0021               	movlb	1	; select bank1
  1090     01A4  140C               	bsf	12,0	;volatile
  1091     01A5                     l1147:
  1092                           
  1093                           ;init.c: 22:     TRISAbits.TRISA1 = 0;
  1094     01A5  108C               	bcf	12,1	;volatile
  1095     01A6                     l1149:
  1096                           
  1097                           ;init.c: 23:     TRISAbits.TRISA2 = 0;
  1098     01A6  110C               	bcf	12,2	;volatile
  1099     01A7                     l1151:
  1100                           
  1101                           ;init.c: 24:     TRISAbits.TRISA3 = 0;
  1102     01A7  118C               	bcf	12,3	;volatile
  1103     01A8                     l1153:
  1104                           
  1105                           ;init.c: 25:     TRISAbits.TRISA4 = 0;
  1106     01A8  120C               	bcf	12,4	;volatile
  1107     01A9                     l1155:
  1108                           
  1109                           ;init.c: 26:     TRISAbits.TRISA6 = 0;
  1110     01A9  130C               	bcf	12,6	;volatile
  1111     01AA                     l1157:
  1112                           
  1113                           ;init.c: 27:     TRISAbits.TRISA7 = 0;
  1114     01AA  138C               	bcf	12,7	;volatile
  1115     01AB                     l1159:
  1116                           
  1117                           ;init.c: 31:     ANSELBbits.ANSB1 = 0;
  1118     01AB  0023               	movlb	3	; select bank3
  1119     01AC  108D               	bcf	13,1	;volatile
  1120     01AD                     l1161:
  1121                           
  1122                           ;init.c: 32:     ANSELBbits.ANSB2 = 0;
  1123     01AD  110D               	bcf	13,2	;volatile
  1124     01AE                     l1163:
  1125                           
  1126                           ;init.c: 33:     ANSELBbits.ANSB3 = 0;
  1127     01AE  118D               	bcf	13,3	;volatile
  1128     01AF                     l1165:
  1129                           
  1130                           ;init.c: 34:     ANSELBbits.ANSB4 = 0;
  1131     01AF  120D               	bcf	13,4	;volatile
  1132     01B0                     l1167:
  1133                           
  1134                           ;init.c: 35:     ANSELBbits.ANSB5 = 0;
  1135     01B0  128D               	bcf	13,5	;volatile
  1136     01B1                     l1169:
  1137                           
  1138                           ;init.c: 36:     ANSELBbits.ANSB6 = 0;
  1139     01B1  130D               	bcf	13,6	;volatile
  1140     01B2                     l1171:
  1141                           
  1142                           ;init.c: 37:     ANSELBbits.ANSB7 = 0;
  1143     01B2  138D               	bcf	13,7	;volatile
  1144     01B3                     l1173:
  1145                           
  1146                           ;init.c: 40:     TRISBbits.TRISB0 = 0;
  1147     01B3  0021               	movlb	1	; select bank1
  1148     01B4  100D               	bcf	13,0	;volatile
  1149     01B5                     l1175:
  1150                           
  1151                           ;init.c: 41:     TRISBbits.TRISB1 = 1;
  1152     01B5  148D               	bsf	13,1	;volatile
  1153     01B6                     l1177:
  1154                           
  1155                           ;init.c: 42:     TRISBbits.TRISB2 = 0;
  1156     01B6  110D               	bcf	13,2	;volatile
  1157     01B7                     l1179:
  1158                           
  1159                           ;init.c: 43:     TRISBbits.TRISB3 = 0;
  1160     01B7  118D               	bcf	13,3	;volatile
  1161     01B8                     l1181:
  1162                           
  1163                           ;init.c: 44:     TRISBbits.TRISB4 = 0;
  1164     01B8  120D               	bcf	13,4	;volatile
  1165     01B9                     l1183:
  1166                           
  1167                           ;init.c: 45:     TRISBbits.TRISB5 = 0;
  1168     01B9  128D               	bcf	13,5	;volatile
  1169     01BA                     l1185:
  1170                           
  1171                           ;init.c: 46:     TRISBbits.TRISB6 = 0;
  1172     01BA  130D               	bcf	13,6	;volatile
  1173     01BB                     l1187:
  1174                           
  1175                           ;init.c: 47:     TRISBbits.TRISB7 = 0;
  1176     01BB  138D               	bcf	13,7	;volatile
  1177     01BC                     l1189:
  1178                           
  1179                           ;init.c: 50:     ADCON0bits.ADON = 0;
  1180     01BC  101D               	bcf	29,0	;volatile
  1181     01BD                     l1191:
  1182                           
  1183                           ;init.c: 51:     FVRCONbits.FVREN = 1;
  1184     01BD  0022               	movlb	2	; select bank2
  1185     01BE  1797               	bsf	23,7	;volatile
  1186                           
  1187                           ;init.c: 52:     FVRCONbits.ADFVR = 0b11;
  1188     01BF  3003               	movlw	3
  1189     01C0  0497               	iorwf	23,f	;volatile
  1190                           
  1191                           ;init.c: 54:     ADCON1bits.ADCS = 0b001;
  1192     01C1  0021               	movlb	1	; select bank1
  1193     01C2  081E               	movf	30,w	;volatile
  1194     01C3  398F               	andlw	-113
  1195     01C4  3810               	iorlw	16
  1196     01C5  009E               	movwf	30	;volatile
  1197                           
  1198                           ;init.c: 55:     ADCON0bits.CHS = 0b00000;
  1199     01C6  3083               	movlw	-125
  1200     01C7  059D               	andwf	29,f	;volatile
  1201     01C8                     l1193:
  1202                           
  1203                           ;init.c: 56:     ADCON1bits.ADFM = 1;
  1204     01C8  179E               	bsf	30,7	;volatile
  1205     01C9                     l1195:
  1206                           
  1207                           ;init.c: 57:     ADCON1bits.ADNREF = 0;
  1208     01C9  111E               	bcf	30,2	;volatile
  1209                           
  1210                           ;init.c: 58:     ADCON1bits.ADPREF = 0b11;
  1211     01CA  3003               	movlw	3
  1212     01CB  049E               	iorwf	30,f	;volatile
  1213     01CC                     l1197:
  1214                           
  1215                           ;init.c: 60:     PIE1bits.ADIE = 1;
  1216     01CC  1711               	bsf	17,6	;volatile
  1217     01CD                     l1199:
  1218                           
  1219                           ;init.c: 61:     PIR1bits.ADIF = 0;
  1220     01CD  0020               	movlb	0	; select bank0
  1221     01CE  1311               	bcf	17,6	;volatile
  1222                           
  1223                           ;init.c: 65:     WDTCONbits.WDTPS = 0b01010;
  1224     01CF  0021               	movlb	1	; select bank1
  1225     01D0  0817               	movf	23,w	;volatile
  1226     01D1  39C1               	andlw	-63
  1227     01D2  3814               	iorlw	20
  1228     01D3  0097               	movwf	23	;volatile
  1229     01D4                     l1201:
  1230                           
  1231                           ;init.c: 67:     LATAbits.LATA4 = 0;
  1232     01D4  0022               	movlb	2	; select bank2
  1233     01D5  120C               	bcf	12,4	;volatile
  1234     01D6                     l1203:
  1235                           
  1236                           ;init.c: 68:     LATAbits.LATA6 = 0;
  1237     01D6  130C               	bcf	12,6	;volatile
  1238     01D7                     l1205:
  1239                           
  1240                           ;init.c: 69:     LATAbits.LATA7 = 0;
  1241     01D7  138C               	bcf	12,7	;volatile
  1242     01D8                     l1207:
  1243                           
  1244                           ;init.c: 70:     LATBbits.LATB0 = 0;
  1245     01D8  100D               	bcf	13,0	;volatile
  1246     01D9                     l1209:
  1247                           
  1248                           ;init.c: 71:     LATBbits.LATB3 = 0;
  1249     01D9  118D               	bcf	13,3	;volatile
  1250     01DA                     l1211:
  1251                           
  1252                           ;init.c: 72:     LATBbits.LATB4 = 0;
  1253     01DA  120D               	bcf	13,4	;volatile
  1254     01DB                     l1213:
  1255                           
  1256                           ;init.c: 73:     LATBbits.LATB5 = 0;
  1257     01DB  128D               	bcf	13,5	;volatile
  1258     01DC                     l1215:
  1259                           
  1260                           ;init.c: 75:     INTCONbits.GIE = 1;
  1261     01DC  178B               	bsf	11,7	;volatile
  1262     01DD                     l1217:
  1263                           
  1264                           ;init.c: 76:     INTCONbits.PEIE = 1;
  1265     01DD  170B               	bsf	11,6	;volatile
  1266     01DE                     l1219:
  1267                           
  1268                           ;init.c: 78:     init_UART();
  1269     01DE  3182  228F  3181   	fcall	_init_UART
  1270     01E1                     l108:
  1271     01E1  0008               	return
  1272     01E2                     __end_of_init_IO:
  1273                           
  1274                           	psect	text3
  1275     028F                     __ptext3:	
  1276 ;; *************** function _init_UART *****************
  1277 ;; Defined at:
  1278 ;;		line 82 in file "init.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1292 ;;      Params:         0       0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 3
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_init_IO
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306     028F                     _init_UART:	
  1307                           ;psect for function _init_UART
  1308                           
  1309     028F                     l1127:	
  1310                           ;incstack = 0
  1311                           ; Regs used in _init_UART: [wreg]
  1312                           
  1313                           
  1314                           ;init.c: 84:     APFCON1bits.TXCKSEL = 0;
  1315     028F  0022               	movlb	2	; select bank2
  1316     0290  101E               	bcf	30,0	;volatile
  1317                           
  1318                           ;init.c: 85:     TXSTAbits.TRMT = 1;
  1319     0291  0023               	movlb	3	; select bank3
  1320     0292  149E               	bsf	30,1	;volatile
  1321                           
  1322                           ;init.c: 86:     TXSTAbits.TXEN = 1;
  1323     0293  169E               	bsf	30,5	;volatile
  1324                           
  1325                           ;init.c: 87:     BAUDCONbits.RCIDL = 1;
  1326     0294  171F               	bsf	31,6	;volatile
  1327                           
  1328                           ;init.c: 90:     TXSTAbits.SYNC = 0;
  1329     0295  121E               	bcf	30,4	;volatile
  1330                           
  1331                           ;init.c: 91:     TXSTAbits.TX9 = 0;
  1332     0296  131E               	bcf	30,6	;volatile
  1333                           
  1334                           ;init.c: 92:     TXSTAbits.BRGH = 1;
  1335     0297  151E               	bsf	30,2	;volatile
  1336     0298                     l1129:
  1337                           
  1338                           ;init.c: 93:     SPBRG = 25;
  1339     0298  3019               	movlw	25
  1340     0299  009B               	movwf	27	;volatile
  1341     029A                     l1131:
  1342                           
  1343                           ;init.c: 94:     RCSTAbits.SPEN = 1;
  1344     029A  179D               	bsf	29,7	;volatile
  1345     029B                     l111:
  1346     029B  0008               	return
  1347     029C                     __end_of_init_UART:
  1348                           
  1349                           	psect	intentry
  1350     0004                     __pintentry:	
  1351 ;; *************** function _INT_TMR0 *****************
  1352 ;; Defined at:
  1353 ;;		line 29 in file "main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  B               1   39[BANK0 ] PTR unsigned short 
  1358 ;;		 -> BinTOBcd@r(6), 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1368 ;;      Params:         0       0       0       0       0       0
  1369 ;;      Locals:         0       1       0       0       0       0
  1370 ;;      Temps:          0       5       0       0       0       0
  1371 ;;      Totals:         0       6       0       0       0       0
  1372 ;;Total ram usage:        6 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; Hardware stack levels required when called: 2
  1375 ;; This function calls:
  1376 ;;		_ASCII_Con
  1377 ;;		_BinTOBcd
  1378 ;;		_UART_print
  1379 ;; This function is called by:
  1380 ;;		Interrupt level 1
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384     0004                     _INT_TMR0:
  1385                           
  1386                           ;incstack = 0
  1387     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1388                           
  1389                           ; Regs used in _INT_TMR0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1390     0005  3180               	pagesel	$
  1391     0006                     i1l1117:
  1392                           
  1393                           ;main.c: 33:     if(PIR1bits.ADIF == 1){
  1394     0006  0020               	movlb	0	; select bank0
  1395     0007  1F11               	btfss	17,6	;volatile
  1396     0008  280A               	goto	u46_21
  1397     0009  280B               	goto	u46_20
  1398     000A                     u46_21:
  1399     000A  2847               	goto	i1l32
  1400     000B                     u46_20:
  1401     000B                     i1l1119:
  1402                           
  1403                           ;main.c: 35:         PIR1bits.ADIF = 0;
  1404     000B  1311               	bcf	17,6	;volatile
  1405                           
  1406                           ;main.c: 36:         ADCON0bits.ADON = 0;
  1407     000C  0021               	movlb	1	; select bank1
  1408     000D  101D               	bcf	29,0	;volatile
  1409     000E                     i1l1121:
  1410                           
  1411                           ;main.c: 38:         unsigned short *B = BinTOBcd((unsigned long)((ADRESH<<8) + ADRESL))
      +                          ;
  1412     000E  081B               	movf	27,w	;volatile
  1413     000F  0020               	movlb	0	; select bank0
  1414     0010  00C2               	movwf	??_INT_TMR0
  1415     0011  01C3               	clrf	??_INT_TMR0+1
  1416     0012  0021               	movlb	1	; select bank1
  1417     0013  081C               	movf	28,w	;volatile
  1418     0014  0020               	movlb	0	; select bank0
  1419     0015  00C4               	movwf	??_INT_TMR0+2
  1420     0016  01C5               	clrf	??_INT_TMR0+3
  1421     0017  0844               	movf	??_INT_TMR0+2,w
  1422     0018  00C5               	movwf	??_INT_TMR0+3
  1423     0019  01C4               	clrf	??_INT_TMR0+2
  1424     001A  0842               	movf	??_INT_TMR0,w
  1425     001B  0744               	addwf	??_INT_TMR0+2,w
  1426     001C  00B6               	movwf	BinTOBcd@iADC
  1427     001D  0843               	movf	??_INT_TMR0+1,w
  1428     001E  3D45               	addwfc	??_INT_TMR0+3,w
  1429     001F  00B7               	movwf	BinTOBcd@iADC+1
  1430     0020  01B8               	clrf	BinTOBcd@iADC+2
  1431     0021  1BB7               	btfsc	BinTOBcd@iADC+1,7
  1432     0022  03B8               	decf	BinTOBcd@iADC+2,f
  1433     0023  0838               	movf	BinTOBcd@iADC+2,w
  1434     0024  00B9               	movwf	BinTOBcd@iADC+3
  1435     0025  3180  2057  3180   	fcall	_BinTOBcd
  1436     0028  0020               	movlb	0	; select bank0
  1437     0029  00C7               	movwf	INT_TMR0@B
  1438     002A                     i1l1123:
  1439                           
  1440                           ;main.c: 39:         UART_print(ASCII_Con(B[2], B[1], B[0]));
  1441     002A  0847               	movf	INT_TMR0@B,w
  1442     002B  3E04               	addlw	4
  1443     002C  0086               	movwf	6
  1444     002D  0187               	clrf	7
  1445     002E  3F40               	moviw [0]fsr1
  1446     002F  00F0               	movwf	ASCII_Con@a
  1447     0030  3F41               	moviw [1]fsr1
  1448     0031  00F1               	movwf	ASCII_Con@a+1
  1449     0032  0847               	movf	INT_TMR0@B,w
  1450     0033  3E02               	addlw	2
  1451     0034  0086               	movwf	6
  1452     0035  0187               	clrf	7
  1453     0036  3F40               	moviw [0]fsr1
  1454     0037  00F2               	movwf	ASCII_Con@b
  1455     0038  3F41               	moviw [1]fsr1
  1456     0039  00F3               	movwf	ASCII_Con@b+1
  1457     003A  0847               	movf	INT_TMR0@B,w
  1458     003B  0086               	movwf	6
  1459     003C  0187               	clrf	7
  1460     003D  3F40               	moviw [0]fsr1
  1461     003E  00F4               	movwf	ASCII_Con@c
  1462     003F  3F41               	moviw [1]fsr1
  1463     0040  00F5               	movwf	ASCII_Con@c+1
  1464     0041  3182  227C  3180   	fcall	_ASCII_Con
  1465     0044  3182  2260  3180   	fcall	_UART_print
  1466     0047                     i1l32:
  1467     0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1468     0048  0009               	retfie
  1469     0049                     __end_of_INT_TMR0:
  1470                           
  1471                           	psect	text5
  1472     0260                     __ptext5:	
  1473 ;; *************** function _UART_print *****************
  1474 ;; Defined at:
  1475 ;;		line 48 in file "funtions.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  cadena          1    wreg     PTR unsigned char 
  1478 ;;		 -> ASCII_Con@r(7), 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  cadena          1    2[COMMON] PTR unsigned char 
  1481 ;;		 -> ASCII_Con@r(7), 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1491 ;;      Params:         0       0       0       0       0       0
  1492 ;;      Locals:         1       0       0       0       0       0
  1493 ;;      Temps:          1       0       0       0       0       0
  1494 ;;      Totals:         2       0       0       0       0       0
  1495 ;;Total ram usage:        2 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; Hardware stack levels required when called: 1
  1498 ;; This function calls:
  1499 ;;		_UART_write
  1500 ;; This function is called by:
  1501 ;;		_INT_TMR0
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505     0260                     _UART_print:	
  1506                           ;psect for function _UART_print
  1507                           
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _UART_print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1511                           ;UART_print@cadena stored from wreg
  1512     0260  00F2               	movwf	UART_print@cadena
  1513     0261                     i1l1103:
  1514                           
  1515                           ;funtions.c: 49:     while (*cadena != 0) {
  1516     0261  2A6D               	goto	i1l1109
  1517     0262                     i1l1105:
  1518                           
  1519                           ;funtions.c: 50:         UART_write(*cadena);
  1520     0262  0872               	movf	UART_print@cadena,w
  1521     0263  0086               	movwf	6
  1522     0264  0187               	clrf	7
  1523     0265  0801               	movf	1,w
  1524     0266  3182  22A5  3182   	fcall	_UART_write
  1525     0269                     i1l1107:
  1526                           
  1527                           ;funtions.c: 51:         cadena++;
  1528     0269  3001               	movlw	1
  1529     026A  00F1               	movwf	??_UART_print
  1530     026B  0871               	movf	??_UART_print,w
  1531     026C  07F2               	addwf	UART_print@cadena,f
  1532     026D                     i1l1109:
  1533                           
  1534                           ;funtions.c: 49:     while (*cadena != 0) {
  1535     026D  0872               	movf	UART_print@cadena,w
  1536     026E  0086               	movwf	6
  1537     026F  0187               	clrf	7
  1538     0270  0801               	movf	1,w
  1539     0271  1D03               	btfss	3,2
  1540     0272  2A74               	goto	u45_21
  1541     0273  2A75               	goto	u45_20
  1542     0274                     u45_21:
  1543     0274  2A62               	goto	i1l1105
  1544     0275                     u45_20:
  1545     0275                     i1l1111:
  1546                           
  1547                           ;funtions.c: 53:     WDTCONbits.WDTPS = 0b01010;
  1548     0275  0021               	movlb	1	; select bank1
  1549     0276  0817               	movf	23,w	;volatile
  1550     0277  39C1               	andlw	-63
  1551     0278  3814               	iorlw	20
  1552     0279  0097               	movwf	23	;volatile
  1553     027A  0063               	sleep	;# 
  1554     027B                     i1l60:
  1555     027B  0008               	return
  1556     027C                     __end_of_UART_print:
  1557                           
  1558                           	psect	text6
  1559     02A5                     __ptext6:	
  1560 ;; *************** function _UART_write *****************
  1561 ;; Defined at:
  1562 ;;		line 39 in file "funtions.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  c               1    wreg     unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  c               1    0[COMMON] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1576 ;;      Params:         0       0       0       0       0       0
  1577 ;;      Locals:         1       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0
  1579 ;;      Totals:         1       0       0       0       0       0
  1580 ;;Total ram usage:        1 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_UART_print
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589     02A5                     _UART_write:	
  1590                           ;psect for function _UART_write
  1591                           
  1592                           
  1593                           ;incstack = 0
  1594                           ; Regs used in _UART_write: [wreg]
  1595                           ;UART_write@c stored from wreg
  1596     02A5  00F0               	movwf	UART_write@c
  1597     02A6                     i1l923:
  1598                           
  1599                           ;funtions.c: 40:     TXREG = c;
  1600     02A6  0870               	movf	UART_write@c,w
  1601     02A7  0023               	movlb	3	; select bank3
  1602     02A8  009A               	movwf	26	;volatile
  1603     02A9                     i1l51:	
  1604                           ;funtions.c: 41:     while (TXSTAbits.TRMT == 0);
  1605                           
  1606     02A9  1C9E               	btfss	30,1	;volatile
  1607     02AA  2AAC               	goto	u24_21
  1608     02AB  2AAD               	goto	u24_20
  1609     02AC                     u24_21:
  1610     02AC  2AA9               	goto	i1l51
  1611     02AD                     u24_20:
  1612     02AD                     i1l54:
  1613     02AD  0008               	return
  1614     02AE                     __end_of_UART_write:
  1615                           
  1616                           	psect	text7
  1617     0057                     __ptext7:	
  1618 ;; *************** function _BinTOBcd *****************
  1619 ;; Defined at:
  1620 ;;		line 12 in file "funtions.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  iADC            4   22[BANK0 ] unsigned long 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      PTR unsigned short 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1634 ;;      Params:         0       4       0       0       0       0
  1635 ;;      Locals:         0       4       0       0       0       0
  1636 ;;      Temps:          0       4       0       0       0       0
  1637 ;;      Totals:         0      12       0       0       0       0
  1638 ;;Total ram usage:       12 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 1
  1641 ;; This function calls:
  1642 ;;		___lldiv
  1643 ;;		___llmod
  1644 ;;		___lmul
  1645 ;; This function is called by:
  1646 ;;		_INT_TMR0
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650     0057                     _BinTOBcd:	
  1651                           ;psect for function _BinTOBcd
  1652                           
  1653     0057                     i1l1079:	
  1654                           ;incstack = 0
  1655                           ; Regs used in _BinTOBcd: [wreg+status,2+status,0+pclath+cstack]
  1656                           
  1657                           
  1658                           ;funtions.c: 14:     static unsigned short r[3];;funtions.c: 15:     r[0] = ((iADC * 100
      +                          0) / 1024) % 10;
  1659     0057  3000               	movlw	0
  1660     0058  0020               	movlb	0	; select bank0
  1661     0059  00B0               	movwf	___llmod@divisor+3
  1662     005A  3000               	movlw	0
  1663     005B  00AF               	movwf	___llmod@divisor+2
  1664     005C  3000               	movlw	0
  1665     005D  00AE               	movwf	___llmod@divisor+1
  1666     005E  300A               	movlw	10
  1667     005F  00AD               	movwf	___llmod@divisor
  1668     0060  3000               	movlw	0
  1669     0061  00F7               	movwf	___lmul@multiplicand+3
  1670     0062  3000               	movlw	0
  1671     0063  00F6               	movwf	___lmul@multiplicand+2
  1672     0064  3003               	movlw	3
  1673     0065  00F5               	movwf	___lmul@multiplicand+1
  1674     0066  30E8               	movlw	232
  1675     0067  00F4               	movwf	___lmul@multiplicand
  1676     0068  0839               	movf	BinTOBcd@iADC+3,w
  1677     0069  00F3               	movwf	___lmul@multiplier+3
  1678     006A  0838               	movf	BinTOBcd@iADC+2,w
  1679     006B  00F2               	movwf	___lmul@multiplier+2
  1680     006C  0837               	movf	BinTOBcd@iADC+1,w
  1681     006D  00F1               	movwf	___lmul@multiplier+1
  1682     006E  0836               	movf	BinTOBcd@iADC,w
  1683     006F  00F0               	movwf	___lmul@multiplier
  1684     0070  3182  222D  3180   	fcall	___lmul
  1685     0073  0870               	movf	?___lmul,w
  1686     0074  0020               	movlb	0	; select bank0
  1687     0075  00BA               	movwf	??_BinTOBcd
  1688     0076  0871               	movf	?___lmul+1,w
  1689     0077  00BB               	movwf	??_BinTOBcd+1
  1690     0078  0872               	movf	?___lmul+2,w
  1691     0079  00BC               	movwf	??_BinTOBcd+2
  1692     007A  0873               	movf	?___lmul+3,w
  1693     007B  00BD               	movwf	??_BinTOBcd+3
  1694     007C  300A               	movlw	10
  1695     007D                     u42_25:
  1696     007D  36BD               	lsrf	??_BinTOBcd+3,f
  1697     007E  0CBC               	rrf	??_BinTOBcd+2,f
  1698     007F  0CBB               	rrf	??_BinTOBcd+1,f
  1699     0080  0CBA               	rrf	??_BinTOBcd,f
  1700     0081                     u42_20:
  1701     0081  0B89               	decfsz	9,f
  1702     0082  287D               	goto	u42_25
  1703     0083  083D               	movf	??_BinTOBcd+3,w
  1704     0084  00B4               	movwf	___llmod@dividend+3
  1705     0085  083C               	movf	??_BinTOBcd+2,w
  1706     0086  00B3               	movwf	___llmod@dividend+2
  1707     0087  083B               	movf	??_BinTOBcd+1,w
  1708     0088  00B2               	movwf	___llmod@dividend+1
  1709     0089  083A               	movf	??_BinTOBcd,w
  1710     008A  00B1               	movwf	___llmod@dividend
  1711     008B  3181  21E2  3180   	fcall	___llmod
  1712     008E  0020               	movlb	0	; select bank0
  1713     008F  082E               	movf	?___llmod+1,w
  1714     0090  00D0               	movwf	BinTOBcd@r+1
  1715     0091  082D               	movf	?___llmod,w
  1716     0092  00CF               	movwf	BinTOBcd@r
  1717                           
  1718                           ;funtions.c: 16:     r[1] = (((iADC * 1000) / 1024) / 10) % 10;
  1719     0093  3000               	movlw	0
  1720     0094  00B0               	movwf	___llmod@divisor+3
  1721     0095  3000               	movlw	0
  1722     0096  00AF               	movwf	___llmod@divisor+2
  1723     0097  3000               	movlw	0
  1724     0098  00AE               	movwf	___llmod@divisor+1
  1725     0099  300A               	movlw	10
  1726     009A  00AD               	movwf	___llmod@divisor
  1727     009B  3000               	movlw	0
  1728     009C  00A3               	movwf	___lldiv@divisor+3
  1729     009D  3000               	movlw	0
  1730     009E  00A2               	movwf	___lldiv@divisor+2
  1731     009F  3000               	movlw	0
  1732     00A0  00A1               	movwf	___lldiv@divisor+1
  1733     00A1  300A               	movlw	10
  1734     00A2  00A0               	movwf	___lldiv@divisor
  1735     00A3  3000               	movlw	0
  1736     00A4  00F7               	movwf	___lmul@multiplicand+3
  1737     00A5  3000               	movlw	0
  1738     00A6  00F6               	movwf	___lmul@multiplicand+2
  1739     00A7  3003               	movlw	3
  1740     00A8  00F5               	movwf	___lmul@multiplicand+1
  1741     00A9  30E8               	movlw	232
  1742     00AA  00F4               	movwf	___lmul@multiplicand
  1743     00AB  0839               	movf	BinTOBcd@iADC+3,w
  1744     00AC  00F3               	movwf	___lmul@multiplier+3
  1745     00AD  0838               	movf	BinTOBcd@iADC+2,w
  1746     00AE  00F2               	movwf	___lmul@multiplier+2
  1747     00AF  0837               	movf	BinTOBcd@iADC+1,w
  1748     00B0  00F1               	movwf	___lmul@multiplier+1
  1749     00B1  0836               	movf	BinTOBcd@iADC,w
  1750     00B2  00F0               	movwf	___lmul@multiplier
  1751     00B3  3182  222D  3180   	fcall	___lmul
  1752     00B6  0870               	movf	?___lmul,w
  1753     00B7  0020               	movlb	0	; select bank0
  1754     00B8  00BA               	movwf	??_BinTOBcd
  1755     00B9  0871               	movf	?___lmul+1,w
  1756     00BA  00BB               	movwf	??_BinTOBcd+1
  1757     00BB  0872               	movf	?___lmul+2,w
  1758     00BC  00BC               	movwf	??_BinTOBcd+2
  1759     00BD  0873               	movf	?___lmul+3,w
  1760     00BE  00BD               	movwf	??_BinTOBcd+3
  1761     00BF  300A               	movlw	10
  1762     00C0                     u43_25:
  1763     00C0  36BD               	lsrf	??_BinTOBcd+3,f
  1764     00C1  0CBC               	rrf	??_BinTOBcd+2,f
  1765     00C2  0CBB               	rrf	??_BinTOBcd+1,f
  1766     00C3  0CBA               	rrf	??_BinTOBcd,f
  1767     00C4                     u43_20:
  1768     00C4  0B89               	decfsz	9,f
  1769     00C5  28C0               	goto	u43_25
  1770     00C6  083D               	movf	??_BinTOBcd+3,w
  1771     00C7  00A7               	movwf	___lldiv@dividend+3
  1772     00C8  083C               	movf	??_BinTOBcd+2,w
  1773     00C9  00A6               	movwf	___lldiv@dividend+2
  1774     00CA  083B               	movf	??_BinTOBcd+1,w
  1775     00CB  00A5               	movwf	___lldiv@dividend+1
  1776     00CC  083A               	movf	??_BinTOBcd,w
  1777     00CD  00A4               	movwf	___lldiv@dividend
  1778     00CE  3181  213B  3180   	fcall	___lldiv
  1779     00D1  0020               	movlb	0	; select bank0
  1780     00D2  0823               	movf	?___lldiv+3,w
  1781     00D3  00B4               	movwf	___llmod@dividend+3
  1782     00D4  0822               	movf	?___lldiv+2,w
  1783     00D5  00B3               	movwf	___llmod@dividend+2
  1784     00D6  0821               	movf	?___lldiv+1,w
  1785     00D7  00B2               	movwf	___llmod@dividend+1
  1786     00D8  0820               	movf	?___lldiv,w
  1787     00D9  00B1               	movwf	___llmod@dividend
  1788     00DA  3181  21E2  3180   	fcall	___llmod
  1789     00DD  0020               	movlb	0	; select bank0
  1790     00DE  082E               	movf	?___llmod+1,w
  1791     00DF  00D2               	movwf	BinTOBcd@r+3
  1792     00E0  082D               	movf	?___llmod,w
  1793     00E1  00D1               	movwf	BinTOBcd@r+2
  1794                           
  1795                           ;funtions.c: 17:     r[2] = (((iADC * 1000) / 1024) / 10) / 10;
  1796     00E2  3000               	movlw	0
  1797     00E3  00A3               	movwf	___lldiv@divisor+3
  1798     00E4  3000               	movlw	0
  1799     00E5  00A2               	movwf	___lldiv@divisor+2
  1800     00E6  3000               	movlw	0
  1801     00E7  00A1               	movwf	___lldiv@divisor+1
  1802     00E8  300A               	movlw	10
  1803     00E9  00A0               	movwf	___lldiv@divisor
  1804     00EA  3000               	movlw	0
  1805     00EB  00F7               	movwf	___lmul@multiplicand+3
  1806     00EC  3000               	movlw	0
  1807     00ED  00F6               	movwf	___lmul@multiplicand+2
  1808     00EE  3003               	movlw	3
  1809     00EF  00F5               	movwf	___lmul@multiplicand+1
  1810     00F0  30E8               	movlw	232
  1811     00F1  00F4               	movwf	___lmul@multiplicand
  1812     00F2  0839               	movf	BinTOBcd@iADC+3,w
  1813     00F3  00F3               	movwf	___lmul@multiplier+3
  1814     00F4  0838               	movf	BinTOBcd@iADC+2,w
  1815     00F5  00F2               	movwf	___lmul@multiplier+2
  1816     00F6  0837               	movf	BinTOBcd@iADC+1,w
  1817     00F7  00F1               	movwf	___lmul@multiplier+1
  1818     00F8  0836               	movf	BinTOBcd@iADC,w
  1819     00F9  00F0               	movwf	___lmul@multiplier
  1820     00FA  3182  222D  3180   	fcall	___lmul
  1821     00FD  0870               	movf	?___lmul,w
  1822     00FE  0020               	movlb	0	; select bank0
  1823     00FF  00BA               	movwf	??_BinTOBcd
  1824     0100  0871               	movf	?___lmul+1,w
  1825     0101  00BB               	movwf	??_BinTOBcd+1
  1826     0102  0872               	movf	?___lmul+2,w
  1827     0103  00BC               	movwf	??_BinTOBcd+2
  1828     0104  0873               	movf	?___lmul+3,w
  1829     0105  00BD               	movwf	??_BinTOBcd+3
  1830     0106  300A               	movlw	10
  1831     0107                     u44_25:
  1832     0107  36BD               	lsrf	??_BinTOBcd+3,f
  1833     0108  0CBC               	rrf	??_BinTOBcd+2,f
  1834     0109  0CBB               	rrf	??_BinTOBcd+1,f
  1835     010A  0CBA               	rrf	??_BinTOBcd,f
  1836     010B                     u44_20:
  1837     010B  0B89               	decfsz	9,f
  1838     010C  2907               	goto	u44_25
  1839     010D  083D               	movf	??_BinTOBcd+3,w
  1840     010E  00A7               	movwf	___lldiv@dividend+3
  1841     010F  083C               	movf	??_BinTOBcd+2,w
  1842     0110  00A6               	movwf	___lldiv@dividend+2
  1843     0111  083B               	movf	??_BinTOBcd+1,w
  1844     0112  00A5               	movwf	___lldiv@dividend+1
  1845     0113  083A               	movf	??_BinTOBcd,w
  1846     0114  00A4               	movwf	___lldiv@dividend
  1847     0115  3181  213B  3180   	fcall	___lldiv
  1848     0118  0020               	movlb	0	; select bank0
  1849     0119  0823               	movf	?___lldiv+3,w
  1850     011A  00C1               	movwf	_BinTOBcd$1319+3
  1851     011B  0822               	movf	?___lldiv+2,w
  1852     011C  00C0               	movwf	_BinTOBcd$1319+2
  1853     011D  0821               	movf	?___lldiv+1,w
  1854     011E  00BF               	movwf	_BinTOBcd$1319+1
  1855     011F  0820               	movf	?___lldiv,w
  1856     0120  00BE               	movwf	_BinTOBcd$1319
  1857                           
  1858                           ;funtions.c: 17:     r[2] = (((iADC * 1000) / 1024) / 10) / 10;
  1859     0121  3000               	movlw	0
  1860     0122  00A3               	movwf	___lldiv@divisor+3
  1861     0123  3000               	movlw	0
  1862     0124  00A2               	movwf	___lldiv@divisor+2
  1863     0125  3000               	movlw	0
  1864     0126  00A1               	movwf	___lldiv@divisor+1
  1865     0127  300A               	movlw	10
  1866     0128  00A0               	movwf	___lldiv@divisor
  1867     0129  0841               	movf	_BinTOBcd$1319+3,w
  1868     012A  00A7               	movwf	___lldiv@dividend+3
  1869     012B  0840               	movf	_BinTOBcd$1319+2,w
  1870     012C  00A6               	movwf	___lldiv@dividend+2
  1871     012D  083F               	movf	_BinTOBcd$1319+1,w
  1872     012E  00A5               	movwf	___lldiv@dividend+1
  1873     012F  083E               	movf	_BinTOBcd$1319,w
  1874     0130  00A4               	movwf	___lldiv@dividend
  1875     0131  3181  213B  3180   	fcall	___lldiv
  1876     0134  0020               	movlb	0	; select bank0
  1877     0135  0821               	movf	?___lldiv+1,w
  1878     0136  00D4               	movwf	BinTOBcd@r+5
  1879     0137  0820               	movf	?___lldiv,w
  1880     0138  00D3               	movwf	BinTOBcd@r+4
  1881     0139                     i1l1081:
  1882                           
  1883                           ;funtions.c: 19:     return r;
  1884     0139  304F               	movlw	(low (BinTOBcd@r| 0))& (0+255)
  1885     013A                     i1l45:
  1886     013A  0008               	return
  1887     013B                     __end_of_BinTOBcd:
  1888                           
  1889                           	psect	text8
  1890     022D                     __ptext8:	
  1891 ;; *************** function ___lmul *****************
  1892 ;; Defined at:
  1893 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  multiplier      4    0[COMMON] unsigned long 
  1896 ;;  multiplicand    4    4[COMMON] unsigned long 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  product         4    8[COMMON] unsigned long 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  4    0[COMMON] unsigned long 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1908 ;;      Params:         8       0       0       0       0       0
  1909 ;;      Locals:         4       0       0       0       0       0
  1910 ;;      Temps:          0       0       0       0       0       0
  1911 ;;      Totals:        12       0       0       0       0       0
  1912 ;;Total ram usage:       12 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_BinTOBcd
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921     022D                     ___lmul:	
  1922                           ;psect for function ___lmul
  1923                           
  1924     022D                     i1l931:	
  1925                           ;incstack = 0
  1926                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1927                           
  1928     022D  3000               	movlw	0
  1929     022E  00FB               	movwf	___lmul@product+3
  1930     022F  3000               	movlw	0
  1931     0230  00FA               	movwf	___lmul@product+2
  1932     0231  3000               	movlw	0
  1933     0232  00F9               	movwf	___lmul@product+1
  1934     0233  3000               	movlw	0
  1935     0234  00F8               	movwf	___lmul@product
  1936     0235                     i1l933:
  1937     0235  1C70               	btfss	___lmul@multiplier,0
  1938     0236  2A38               	goto	u25_21
  1939     0237  2A39               	goto	u25_20
  1940     0238                     u25_21:
  1941     0238  2A41               	goto	i1l937
  1942     0239                     u25_20:
  1943     0239                     i1l935:
  1944     0239  0874               	movf	___lmul@multiplicand,w
  1945     023A  07F8               	addwf	___lmul@product,f
  1946     023B  0875               	movf	___lmul@multiplicand+1,w
  1947     023C  3DF9               	addwfc	___lmul@product+1,f
  1948     023D  0876               	movf	___lmul@multiplicand+2,w
  1949     023E  3DFA               	addwfc	___lmul@product+2,f
  1950     023F  0877               	movf	___lmul@multiplicand+3,w
  1951     0240  3DFB               	addwfc	___lmul@product+3,f
  1952     0241                     i1l937:
  1953     0241  3001               	movlw	1
  1954     0242                     u26_25:
  1955     0242  35F4               	lslf	___lmul@multiplicand,f
  1956     0243  0DF5               	rlf	___lmul@multiplicand+1,f
  1957     0244  0DF6               	rlf	___lmul@multiplicand+2,f
  1958     0245  0DF7               	rlf	___lmul@multiplicand+3,f
  1959     0246  0B89               	decfsz	9,f
  1960     0247  2A42               	goto	u26_25
  1961     0248                     i1l939:
  1962     0248  3001               	movlw	1
  1963     0249                     u27_25:
  1964     0249  36F3               	lsrf	___lmul@multiplier+3,f
  1965     024A  0CF2               	rrf	___lmul@multiplier+2,f
  1966     024B  0CF1               	rrf	___lmul@multiplier+1,f
  1967     024C  0CF0               	rrf	___lmul@multiplier,f
  1968     024D  0B89               	decfsz	9,f
  1969     024E  2A49               	goto	u27_25
  1970     024F  0873               	movf	___lmul@multiplier+3,w
  1971     0250  0472               	iorwf	___lmul@multiplier+2,w
  1972     0251  0471               	iorwf	___lmul@multiplier+1,w
  1973     0252  0470               	iorwf	___lmul@multiplier,w
  1974     0253  1D03               	skipz
  1975     0254  2A56               	goto	u28_21
  1976     0255  2A57               	goto	u28_20
  1977     0256                     u28_21:
  1978     0256  2A35               	goto	i1l933
  1979     0257                     u28_20:
  1980     0257                     i1l941:
  1981     0257  087B               	movf	___lmul@product+3,w
  1982     0258  00F3               	movwf	?___lmul+3
  1983     0259  087A               	movf	___lmul@product+2,w
  1984     025A  00F2               	movwf	?___lmul+2
  1985     025B  0879               	movf	___lmul@product+1,w
  1986     025C  00F1               	movwf	?___lmul+1
  1987     025D  0878               	movf	___lmul@product,w
  1988     025E  00F0               	movwf	?___lmul
  1989     025F                     i1l275:
  1990     025F  0008               	return
  1991     0260                     __end_of___lmul:
  1992                           
  1993                           	psect	text9
  1994     01E2                     __ptext9:	
  1995 ;; *************** function ___llmod *****************
  1996 ;; Defined at:
  1997 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\llmod.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  divisor         4   13[BANK0 ] unsigned long 
  2000 ;;  dividend        4   17[BANK0 ] unsigned long 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  counter         1   21[BANK0 ] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  4   13[BANK0 ] unsigned long 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2012 ;;      Params:         0       8       0       0       0       0
  2013 ;;      Locals:         0       1       0       0       0       0
  2014 ;;      Temps:          1       0       0       0       0       0
  2015 ;;      Totals:         1       9       0       0       0       0
  2016 ;;Total ram usage:       10 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_BinTOBcd
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025     01E2                     ___llmod:	
  2026                           ;psect for function ___llmod
  2027                           
  2028     01E2                     i1l969:	
  2029                           ;incstack = 0
  2030                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2031                           
  2032     01E2  0020               	movlb	0	; select bank0
  2033     01E3  0830               	movf	___llmod@divisor+3,w
  2034     01E4  042F               	iorwf	___llmod@divisor+2,w
  2035     01E5  042E               	iorwf	___llmod@divisor+1,w
  2036     01E6  042D               	iorwf	___llmod@divisor,w
  2037     01E7  1903               	skipnz
  2038     01E8  29EA               	goto	u36_21
  2039     01E9  29EB               	goto	u36_20
  2040     01EA                     u36_21:
  2041     01EA  2A24               	goto	i1l985
  2042     01EB                     u36_20:
  2043     01EB                     i1l971:
  2044     01EB  01B5               	clrf	___llmod@counter
  2045     01EC  0AB5               	incf	___llmod@counter,f
  2046     01ED  29F9               	goto	i1l975
  2047     01EE                     i1l973:
  2048     01EE  3001               	movlw	1
  2049     01EF                     u37_25:
  2050     01EF  35AD               	lslf	___llmod@divisor,f
  2051     01F0  0DAE               	rlf	___llmod@divisor+1,f
  2052     01F1  0DAF               	rlf	___llmod@divisor+2,f
  2053     01F2  0DB0               	rlf	___llmod@divisor+3,f
  2054     01F3  0B89               	decfsz	9,f
  2055     01F4  29EF               	goto	u37_25
  2056     01F5  3001               	movlw	1
  2057     01F6  00FD               	movwf	??___llmod
  2058     01F7  087D               	movf	??___llmod,w
  2059     01F8  07B5               	addwf	___llmod@counter,f
  2060     01F9                     i1l975:
  2061     01F9  1FB0               	btfss	___llmod@divisor+3,7
  2062     01FA  29FC               	goto	u38_21
  2063     01FB  29FD               	goto	u38_20
  2064     01FC                     u38_21:
  2065     01FC  29EE               	goto	i1l973
  2066     01FD                     u38_20:
  2067     01FD                     i1l977:
  2068     01FD  0830               	movf	___llmod@divisor+3,w
  2069     01FE  0234               	subwf	___llmod@dividend+3,w
  2070     01FF  1D03               	skipz
  2071     0200  2A0B               	goto	u39_25
  2072     0201  082F               	movf	___llmod@divisor+2,w
  2073     0202  0233               	subwf	___llmod@dividend+2,w
  2074     0203  1D03               	skipz
  2075     0204  2A0B               	goto	u39_25
  2076     0205  082E               	movf	___llmod@divisor+1,w
  2077     0206  0232               	subwf	___llmod@dividend+1,w
  2078     0207  1D03               	skipz
  2079     0208  2A0B               	goto	u39_25
  2080     0209  082D               	movf	___llmod@divisor,w
  2081     020A  0231               	subwf	___llmod@dividend,w
  2082     020B                     u39_25:
  2083     020B  1C03               	skipc
  2084     020C  2A0E               	goto	u39_21
  2085     020D  2A0F               	goto	u39_20
  2086     020E                     u39_21:
  2087     020E  2A17               	goto	i1l981
  2088     020F                     u39_20:
  2089     020F                     i1l979:
  2090     020F  082D               	movf	___llmod@divisor,w
  2091     0210  02B1               	subwf	___llmod@dividend,f
  2092     0211  082E               	movf	___llmod@divisor+1,w
  2093     0212  3BB2               	subwfb	___llmod@dividend+1,f
  2094     0213  082F               	movf	___llmod@divisor+2,w
  2095     0214  3BB3               	subwfb	___llmod@dividend+2,f
  2096     0215  0830               	movf	___llmod@divisor+3,w
  2097     0216  3BB4               	subwfb	___llmod@dividend+3,f
  2098     0217                     i1l981:
  2099     0217  3001               	movlw	1
  2100     0218                     u40_25:
  2101     0218  36B0               	lsrf	___llmod@divisor+3,f
  2102     0219  0CAF               	rrf	___llmod@divisor+2,f
  2103     021A  0CAE               	rrf	___llmod@divisor+1,f
  2104     021B  0CAD               	rrf	___llmod@divisor,f
  2105     021C  0B89               	decfsz	9,f
  2106     021D  2A18               	goto	u40_25
  2107     021E                     i1l983:
  2108     021E  3001               	movlw	1
  2109     021F  02B5               	subwf	___llmod@counter,f
  2110     0220  1D03               	btfss	3,2
  2111     0221  2A23               	goto	u41_21
  2112     0222  2A24               	goto	u41_20
  2113     0223                     u41_21:
  2114     0223  29FD               	goto	i1l977
  2115     0224                     u41_20:
  2116     0224                     i1l985:
  2117     0224  0834               	movf	___llmod@dividend+3,w
  2118     0225  00B0               	movwf	?___llmod+3
  2119     0226  0833               	movf	___llmod@dividend+2,w
  2120     0227  00AF               	movwf	?___llmod+2
  2121     0228  0832               	movf	___llmod@dividend+1,w
  2122     0229  00AE               	movwf	?___llmod+1
  2123     022A  0831               	movf	___llmod@dividend,w
  2124     022B  00AD               	movwf	?___llmod
  2125     022C                     i1l491:
  2126     022C  0008               	return
  2127     022D                     __end_of___llmod:
  2128                           
  2129                           	psect	text10
  2130     013B                     __ptext10:	
  2131 ;; *************** function ___lldiv *****************
  2132 ;; Defined at:
  2133 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;  divisor         4    0[BANK0 ] unsigned long 
  2136 ;;  dividend        4    4[BANK0 ] unsigned long 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  quotient        4    8[BANK0 ] unsigned long 
  2139 ;;  counter         1   12[BANK0 ] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  4    0[BANK0 ] unsigned long 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2149 ;;      Params:         0       8       0       0       0       0
  2150 ;;      Locals:         0       5       0       0       0       0
  2151 ;;      Temps:          1       0       0       0       0       0
  2152 ;;      Totals:         1      13       0       0       0       0
  2153 ;;Total ram usage:       14 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_BinTOBcd
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162     013B                     ___lldiv:	
  2163                           ;psect for function ___lldiv
  2164                           
  2165     013B                     i1l945:	
  2166                           ;incstack = 0
  2167                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2168                           
  2169     013B  3000               	movlw	0
  2170     013C  0020               	movlb	0	; select bank0
  2171     013D  00AB               	movwf	___lldiv@quotient+3
  2172     013E  3000               	movlw	0
  2173     013F  00AA               	movwf	___lldiv@quotient+2
  2174     0140  3000               	movlw	0
  2175     0141  00A9               	movwf	___lldiv@quotient+1
  2176     0142  3000               	movlw	0
  2177     0143  00A8               	movwf	___lldiv@quotient
  2178     0144  0823               	movf	___lldiv@divisor+3,w
  2179     0145  0422               	iorwf	___lldiv@divisor+2,w
  2180     0146  0421               	iorwf	___lldiv@divisor+1,w
  2181     0147  0420               	iorwf	___lldiv@divisor,w
  2182     0148  1903               	skipnz
  2183     0149  294B               	goto	u29_21
  2184     014A  294C               	goto	u29_20
  2185     014B                     u29_21:
  2186     014B  298D               	goto	i1l965
  2187     014C                     u29_20:
  2188     014C                     i1l947:
  2189     014C  01AC               	clrf	___lldiv@counter
  2190     014D  0AAC               	incf	___lldiv@counter,f
  2191     014E  295A               	goto	i1l951
  2192     014F                     i1l949:
  2193     014F  3001               	movlw	1
  2194     0150                     u30_25:
  2195     0150  35A0               	lslf	___lldiv@divisor,f
  2196     0151  0DA1               	rlf	___lldiv@divisor+1,f
  2197     0152  0DA2               	rlf	___lldiv@divisor+2,f
  2198     0153  0DA3               	rlf	___lldiv@divisor+3,f
  2199     0154  0B89               	decfsz	9,f
  2200     0155  2950               	goto	u30_25
  2201     0156  3001               	movlw	1
  2202     0157  00FC               	movwf	??___lldiv
  2203     0158  087C               	movf	??___lldiv,w
  2204     0159  07AC               	addwf	___lldiv@counter,f
  2205     015A                     i1l951:
  2206     015A  1FA3               	btfss	___lldiv@divisor+3,7
  2207     015B  295D               	goto	u31_21
  2208     015C  295E               	goto	u31_20
  2209     015D                     u31_21:
  2210     015D  294F               	goto	i1l949
  2211     015E                     u31_20:
  2212     015E                     i1l953:
  2213     015E  3001               	movlw	1
  2214     015F                     u32_25:
  2215     015F  35A8               	lslf	___lldiv@quotient,f
  2216     0160  0DA9               	rlf	___lldiv@quotient+1,f
  2217     0161  0DAA               	rlf	___lldiv@quotient+2,f
  2218     0162  0DAB               	rlf	___lldiv@quotient+3,f
  2219     0163  0B89               	decfsz	9,f
  2220     0164  295F               	goto	u32_25
  2221     0165                     i1l955:
  2222     0165  0823               	movf	___lldiv@divisor+3,w
  2223     0166  0227               	subwf	___lldiv@dividend+3,w
  2224     0167  1D03               	skipz
  2225     0168  2973               	goto	u33_25
  2226     0169  0822               	movf	___lldiv@divisor+2,w
  2227     016A  0226               	subwf	___lldiv@dividend+2,w
  2228     016B  1D03               	skipz
  2229     016C  2973               	goto	u33_25
  2230     016D  0821               	movf	___lldiv@divisor+1,w
  2231     016E  0225               	subwf	___lldiv@dividend+1,w
  2232     016F  1D03               	skipz
  2233     0170  2973               	goto	u33_25
  2234     0171  0820               	movf	___lldiv@divisor,w
  2235     0172  0224               	subwf	___lldiv@dividend,w
  2236     0173                     u33_25:
  2237     0173  1C03               	skipc
  2238     0174  2976               	goto	u33_21
  2239     0175  2977               	goto	u33_20
  2240     0176                     u33_21:
  2241     0176  2980               	goto	i1l961
  2242     0177                     u33_20:
  2243     0177                     i1l957:
  2244     0177  0820               	movf	___lldiv@divisor,w
  2245     0178  02A4               	subwf	___lldiv@dividend,f
  2246     0179  0821               	movf	___lldiv@divisor+1,w
  2247     017A  3BA5               	subwfb	___lldiv@dividend+1,f
  2248     017B  0822               	movf	___lldiv@divisor+2,w
  2249     017C  3BA6               	subwfb	___lldiv@dividend+2,f
  2250     017D  0823               	movf	___lldiv@divisor+3,w
  2251     017E  3BA7               	subwfb	___lldiv@dividend+3,f
  2252     017F                     i1l959:
  2253     017F  1428               	bsf	___lldiv@quotient,0
  2254     0180                     i1l961:
  2255     0180  3001               	movlw	1
  2256     0181                     u34_25:
  2257     0181  36A3               	lsrf	___lldiv@divisor+3,f
  2258     0182  0CA2               	rrf	___lldiv@divisor+2,f
  2259     0183  0CA1               	rrf	___lldiv@divisor+1,f
  2260     0184  0CA0               	rrf	___lldiv@divisor,f
  2261     0185  0B89               	decfsz	9,f
  2262     0186  2981               	goto	u34_25
  2263     0187                     i1l963:
  2264     0187  3001               	movlw	1
  2265     0188  02AC               	subwf	___lldiv@counter,f
  2266     0189  1D03               	btfss	3,2
  2267     018A  298C               	goto	u35_21
  2268     018B  298D               	goto	u35_20
  2269     018C                     u35_21:
  2270     018C  295E               	goto	i1l953
  2271     018D                     u35_20:
  2272     018D                     i1l965:
  2273     018D  082B               	movf	___lldiv@quotient+3,w
  2274     018E  00A3               	movwf	?___lldiv+3
  2275     018F  082A               	movf	___lldiv@quotient+2,w
  2276     0190  00A2               	movwf	?___lldiv+2
  2277     0191  0829               	movf	___lldiv@quotient+1,w
  2278     0192  00A1               	movwf	?___lldiv+1
  2279     0193  0828               	movf	___lldiv@quotient,w
  2280     0194  00A0               	movwf	?___lldiv
  2281     0195                     i1l297:
  2282     0195  0008               	return
  2283     0196                     __end_of___lldiv:
  2284                           
  2285                           	psect	text11
  2286     027C                     __ptext11:	
  2287 ;; *************** function _ASCII_Con *****************
  2288 ;; Defined at:
  2289 ;;		line 65 in file "funtions.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  a               2    0[COMMON] unsigned short 
  2292 ;;  b               2    2[COMMON] unsigned short 
  2293 ;;  c               2    4[COMMON] unsigned short 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      PTR unsigned char 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2305 ;;      Params:         6       0       0       0       0       0
  2306 ;;      Locals:         0       0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0
  2308 ;;      Totals:         6       0       0       0       0       0
  2309 ;;Total ram usage:        6 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_INT_TMR0
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318     027C                     _ASCII_Con:	
  2319                           ;psect for function _ASCII_Con
  2320                           
  2321     027C                     i1l1085:	
  2322                           ;incstack = 0
  2323                           ; Regs used in _ASCII_Con: [wreg+status,2+status,0]
  2324                           
  2325                           
  2326                           ;funtions.c: 66:     static unsigned char r[7];;funtions.c: 67:     r[0] = (char)(a + 48
      +                          );
  2327     027C  0870               	movf	ASCII_Con@a,w
  2328     027D  3E30               	addlw	48
  2329     027E  0020               	movlb	0	; select bank0
  2330     027F  00C8               	movwf	ASCII_Con@r
  2331     0280                     i1l1087:
  2332                           
  2333                           ;funtions.c: 68:     r[1] = '.';
  2334     0280  302E               	movlw	46
  2335     0281  00C9               	movwf	ASCII_Con@r+1
  2336     0282                     i1l1089:
  2337                           
  2338                           ;funtions.c: 69:     r[2] = (char)(b + 48);
  2339     0282  0872               	movf	ASCII_Con@b,w
  2340     0283  3E30               	addlw	48
  2341     0284  00CA               	movwf	ASCII_Con@r+2
  2342     0285                     i1l1091:
  2343                           
  2344                           ;funtions.c: 70:     r[3] = (char)(c + 48);;
  2345     0285  0874               	movf	ASCII_Con@c,w
  2346     0286  3E30               	addlw	48
  2347     0287  00CB               	movwf	ASCII_Con@r+3
  2348     0288                     i1l1093:
  2349                           
  2350                           ;funtions.c: 71:     r[4] = ' ';
  2351     0288  3020               	movlw	32
  2352     0289  00CC               	movwf	ASCII_Con@r+4
  2353     028A                     i1l1095:
  2354                           
  2355                           ;funtions.c: 72:     r[5] = 'V';
  2356     028A  3056               	movlw	86
  2357     028B  00CD               	movwf	ASCII_Con@r+5
  2358     028C                     i1l1097:
  2359                           
  2360                           ;funtions.c: 73:     r[6] = '\0';
  2361     028C  01CE               	clrf	ASCII_Con@r+6
  2362     028D                     i1l1099:
  2363                           
  2364                           ;funtions.c: 75:     return r;
  2365     028D  3048               	movlw	(low (ASCII_Con@r| 0))& (0+255)
  2366     028E                     i1l65:
  2367     028E  0008               	return
  2368     028F                     __end_of_ASCII_Con:
  2369     007E                     btemp	set	126	;btemp
  2370     007E                     int$flags	set	126
  2371     007E                     wtemp0	set	126
  2372                           
  2373                           	psect	idloc
  2374                           
  2375                           ;Config register IDLOC0 @ 0x8000
  2376                           ;	unspecified, using default values
  2377     8000                     	org	32768
  2378     8000  3FFF               	dw	16383
  2379                           
  2380                           ;Config register IDLOC1 @ 0x8001
  2381                           ;	unspecified, using default values
  2382     8001                     	org	32769
  2383     8001  3FFF               	dw	16383
  2384                           
  2385                           ;Config register IDLOC2 @ 0x8002
  2386                           ;	unspecified, using default values
  2387     8002                     	org	32770
  2388     8002  3FFF               	dw	16383
  2389                           
  2390                           ;Config register IDLOC3 @ 0x8003
  2391                           ;	unspecified, using default values
  2392     8003                     	org	32771
  2393     8003  3FFF               	dw	16383
  2394                           
  2395                           	psect	config
  2396                           
  2397                           ;Config register CONFIG1 @ 0x8007
  2398                           ;	Oscillator Selection
  2399                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2400                           ;	Watchdog Timer Enable
  2401                           ;	WDTE = ON, WDT enabled
  2402                           ;	Power-up Timer Enable
  2403                           ;	PWRTE = OFF, PWRT disabled
  2404                           ;	MCLR Pin Function Select
  2405                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2406                           ;	Flash Program Memory Code Protection
  2407                           ;	CP = OFF, Program memory code protection is disabled
  2408                           ;	Data Memory Code Protection
  2409                           ;	CPD = OFF, Data memory code protection is disabled
  2410                           ;	Brown-out Reset Enable
  2411                           ;	BOREN = ON, Brown-out Reset enabled
  2412                           ;	Clock Out Enable
  2413                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2414                           ;	Internal/External Switchover
  2415                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2416                           ;	Fail-Safe Clock Monitor Enable
  2417                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2418     8007                     	org	32775
  2419     8007  3FFC               	dw	16380
  2420                           
  2421                           ;Config register CONFIG2 @ 0x8008
  2422                           ;	Flash Memory Self-Write Protection
  2423                           ;	WRT = OFF, Write protection off
  2424                           ;	PLL Enable
  2425                           ;	PLLEN = OFF, 4x PLL disabled
  2426                           ;	Stack Overflow/Underflow Reset Enable
  2427                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2428                           ;	Brown-out Reset Voltage Selection
  2429                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2430                           ;	Low-Voltage Programming Enable
  2431                           ;	LVP = ON, Low-voltage programming enabled
  2432     8008                     	org	32776
  2433     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      53
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    UART_print@cadena	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    sp__ASCII_Con	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    sp__BinTOBcd	PTR unsigned short  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    INT_TMR0@B	PTR unsigned short  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INT_TMR0 in COMMON

    _UART_print->_UART_write
    _BinTOBcd->___llmod
    ___llmod->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_TMR0 in BANK0

    _INT_TMR0->_BinTOBcd
    _BinTOBcd->___llmod
    ___llmod->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_TMR0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_TMR0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_TMR0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_TMR0 in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _init_IO
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT_TMR0                                             6     6      0    2255
                                             34 BANK0      6     6      0
                          _ASCII_Con
                           _BinTOBcd
                         _UART_print
 ---------------------------------------------------------------------------------
 (4) _UART_print                                           2     2      0     100
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (5) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _BinTOBcd                                            12     8      4    1794
                                             22 BANK0     12     8      4
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     548
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     463
                                             13 COMMON     1     1      0
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     618
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _ASCII_Con                                            6     0      6     294
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_IO
     _init_UART
   _readADC

 _INT_TMR0 (ROOT)
   _ASCII_Con
   _BinTOBcd
     ___lldiv
       ___lmul (ARG)
     ___llmod
       ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul
   _UART_print
     _UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      43       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      43      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 18 13:29:22 2023

                     l48 02B7                      l111 029B                      l108 01E1  
                    wreg 0009                     l1201 01D4                     l1131 029A  
                   l1211 01DA                     l1203 01D6                     l1213 01DB  
                   l1205 01D7                     l1141 01A1                     l1133 0196  
                   l1221 02B4                     l1127 028F                     l1215 01DC  
                   l1207 01D8                     l1151 01A7                     l1143 01A2  
                   l1135 019D                     l1223 029C                     l1129 0298  
                   l1217 01DD                     l1209 01D9                     l1161 01AD  
                   l1153 01A8                     l1145 01A3                     l1137 019F  
                   l1225 029F                     l1219 01DE                     l1171 01B2  
                   l1163 01AE                     l1155 01A9                     l1147 01A5  
                   l1139 01A0                     l1181 01B8                     l1173 01B3  
                   l1165 01AF                     l1157 01AA                     l1149 01A6  
                   l1191 01BD                     l1183 01B9                     l1175 01B5  
                   l1167 01B0                     l1159 01AB                     l1193 01C8  
                   l1185 01BA                     l1177 01B6                     l1169 01B1  
                   l1195 01C9                     l1187 01BB                     l1179 01B7  
                   l1197 01CC                     l1189 01BC                     l1199 01CD  
                   i1l32 0047                     i1l51 02A9                     i1l60 027B  
                   i1l45 013A                     i1l54 02AD                     i1l65 028E  
                   _main 029C                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 0049  
                  ?_main 0070          __end_of___lldiv 0196          __end_of___llmod 022D  
       __end_of_INT_TMR0 0049                    i1l275 025F                    i1l297 0195  
                  i1l491 022C                    i1l931 022D                    i1l923 02A6  
                  i1l941 0257                    i1l933 0235                    i1l951 015A  
                  i1l935 0239                    i1l961 0180                    i1l953 015E  
                  i1l945 013B                    i1l937 0241                    i1l963 0187  
                  i1l955 0165                    i1l947 014C                    i1l971 01EB  
                  i1l939 0248                    i1l957 0177                    i1l949 014F  
                  i1l965 018D                    i1l981 0217                    i1l973 01EE  
                  i1l959 017F                    i1l983 021E                    i1l975 01F9  
                  i1l977 01FD                    i1l985 0224                    i1l969 01E2  
                  i1l979 020F                    u30_25 0150                    u31_20 015E  
                  u31_21 015D                    u24_20 02AD                    u24_21 02AC  
                  u32_25 015F                    u40_25 0218                    u33_20 0177  
                  u41_20 0224                    u25_20 0239                    u33_21 0176  
                  u41_21 0223                    u25_21 0238                    u33_25 0173  
                  u42_20 0081                    _SPBRG 019B                    u34_25 0181  
                  u26_25 0242                    u42_25 007D                    u35_20 018D  
                  u43_20 00C4                    u35_21 018C                    u27_25 0249  
                  u43_25 00C0                    u36_20 01EB                    u28_20 0257  
                  u44_20 010B                    u36_21 01EA                    u28_21 0256  
                  u44_25 0107                    u29_20 014C                    u45_20 0275  
                  u29_21 014B                    u45_21 0274                    u37_25 01EF  
                  u38_20 01FD                    u46_20 000B                    u38_21 01FC  
                  u46_21 000A                    u39_20 020F                    u39_21 020E  
                  u39_25 020B                    _TXREG 019A      ___lmul@multiplicand 0074  
        __end_of_readADC 02B8          __end_of_init_IO 01E2              ?_UART_print 0070  
            ?_UART_write 0070         __end_of_BinTOBcd 013B            _BinTOBcd$1319 003E  
                  status 0003                    wtemp0 007E        __end_of_ASCII_Con 028F  
        __initialization 004B             __end_of_main 02A5                   ??_main 0000  
       ___llmod@dividend 0031                   _ADRESH 009C                   _ADRESL 009B  
                 i1l1111 0275                   i1l1103 0261                   i1l1105 0262  
                 i1l1121 000E                   i1l1107 0269                   i1l1123 002A  
                 i1l1109 026D                   i1l1117 0006                   i1l1119 000B  
                 i1l1081 0139                   i1l1091 0285                   i1l1093 0288  
                 i1l1085 027C                   i1l1095 028A                   i1l1087 0280  
                 i1l1079 0057                   i1l1097 028C                   i1l1089 0282  
                 i1l1099 028D                   ___lmul 022D                ??___lldiv 007C  
              ??___llmod 007D                ??_readADC 0000                ??_init_IO 0000  
__end_of__initialization 0053                ?_INT_TMR0 0070             BinTOBcd@iADC 0036  
         __pcstackCOMMON 0070                ?_BinTOBcd 0036                INT_TMR0@B 0047  
             __pbssBANK0 0048               ??_INT_TMR0 0042               __pmaintext 029C  
                ?___lmul 0070               __pintentry 0004           ___lmul@product 0078  
             ??_BinTOBcd 003A             ??_UART_print 0071             ??_UART_write 0070  
              _ASCII_Con 027C                  ___lldiv 013B                  ___llmod 01E2  
              BinTOBcd@r 004F               ASCII_Con@a 0070               ASCII_Con@b 0072  
             ASCII_Con@c 0074               ASCII_Con@r 0048       __end_of_UART_print 027C  
     __end_of_UART_write 02AE                  __ptext1 02B4                  __ptext2 0196  
                __ptext3 028F                  __ptext5 0260                  __ptext6 02A5  
                __ptext7 0057                  __ptext8 022D                  __ptext9 01E2  
      __end_of_init_UART 029C                  _readADC 02B4                  _init_IO 0196  
                clrloop0 02AF     end_of_initialization 0053          ___lldiv@divisor 0020  
        ___lldiv@counter 002C                _RCSTAbits 019D              UART_write@c 0070  
             ?_ASCII_Con 0070                _TRISAbits 008C                _TRISBbits 008D  
              _TXSTAbits 019E           __end_of___lmul 0260              _BAUDCONbits 019F  
    start_initialization 004B          ___llmod@divisor 002D          ___llmod@counter 0035  
            _APFCON1bits 011E                 ??___lmul 0078              ??_ASCII_Con 0076  
              ___latbits 0001            __pcstackBANK0 0020            __pcstackBANK1 0000  
               ?___lldiv 0020                 ?___llmod 002D                 ?_readADC 0070  
               ?_init_IO 0070                _init_UART 028F                 _LATAbits 010C  
               _LATBbits 010D                clear_ram0 02AE                 _PIE1bits 0091  
               _INT_TMR0 0004                 _PIR1bits 0011               _ADCON0bits 009D  
             _ADCON1bits 009E                 _BinTOBcd 0057               ?_init_UART 0070  
      ___lmul@multiplier 0070         UART_print@cadena 0072               _ANSELAbits 018C  
             _ANSELBbits 018D                 __ptext10 013B                 __ptext11 027C  
               int$flags 007E               _INTCONbits 000B               _FVRCONbits 0117  
            ??_init_UART 0000                 intlevel1 0000         ___lldiv@dividend 0024  
             _OSCCONbits 0099         ___lldiv@quotient 0028               _WDTCONbits 0097  
             _UART_print 0260               _UART_write 02A5  
