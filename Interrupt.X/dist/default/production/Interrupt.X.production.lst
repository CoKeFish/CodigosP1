

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 18 11:40:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1827 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     0111                     	;# 
   118     0112                     	;# 
   119     0113                     	;# 
   120     0114                     	;# 
   121     0115                     	;# 
   122     0116                     	;# 
   123     0117                     	;# 
   124     0118                     	;# 
   125     0119                     	;# 
   126     011A                     	;# 
   127     011B                     	;# 
   128     011D                     	;# 
   129     011E                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0191                     	;# 
   133     0191                     	;# 
   134     0192                     	;# 
   135     0193                     	;# 
   136     0193                     	;# 
   137     0193                     	;# 
   138     0194                     	;# 
   139     0195                     	;# 
   140     0196                     	;# 
   141     0199                     	;# 
   142     019A                     	;# 
   143     019B                     	;# 
   144     019B                     	;# 
   145     019B                     	;# 
   146     019B                     	;# 
   147     019C                     	;# 
   148     019C                     	;# 
   149     019D                     	;# 
   150     019E                     	;# 
   151     019F                     	;# 
   152     020C                     	;# 
   153     020D                     	;# 
   154     0211                     	;# 
   155     0211                     	;# 
   156     0212                     	;# 
   157     0212                     	;# 
   158     0213                     	;# 
   159     0213                     	;# 
   160     0214                     	;# 
   161     0214                     	;# 
   162     0215                     	;# 
   163     0215                     	;# 
   164     0215                     	;# 
   165     0216                     	;# 
   166     0216                     	;# 
   167     0217                     	;# 
   168     0217                     	;# 
   169     0219                     	;# 
   170     021A                     	;# 
   171     021B                     	;# 
   172     021C                     	;# 
   173     021D                     	;# 
   174     021E                     	;# 
   175     021F                     	;# 
   176     0291                     	;# 
   177     0291                     	;# 
   178     0292                     	;# 
   179     0293                     	;# 
   180     0294                     	;# 
   181     0295                     	;# 
   182     0295                     	;# 
   183     0296                     	;# 
   184     0298                     	;# 
   185     0298                     	;# 
   186     0299                     	;# 
   187     029A                     	;# 
   188     029B                     	;# 
   189     029C                     	;# 
   190     029C                     	;# 
   191     029D                     	;# 
   192     029E                     	;# 
   193     029E                     	;# 
   194     0311                     	;# 
   195     0311                     	;# 
   196     0312                     	;# 
   197     0313                     	;# 
   198     0318                     	;# 
   199     0318                     	;# 
   200     0319                     	;# 
   201     031A                     	;# 
   202     0394                     	;# 
   203     0395                     	;# 
   204     0396                     	;# 
   205     039A                     	;# 
   206     039C                     	;# 
   207     039D                     	;# 
   208     039E                     	;# 
   209     039F                     	;# 
   210     0415                     	;# 
   211     0416                     	;# 
   212     0417                     	;# 
   213     041C                     	;# 
   214     041D                     	;# 
   215     041E                     	;# 
   216     0FE4                     	;# 
   217     0FE5                     	;# 
   218     0FE6                     	;# 
   219     0FE7                     	;# 
   220     0FE8                     	;# 
   221     0FE9                     	;# 
   222     0FEA                     	;# 
   223     0FEB                     	;# 
   224     0FED                     	;# 
   225     0FEE                     	;# 
   226     0FEF                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     0011                     	;# 
   242     0012                     	;# 
   243     0013                     	;# 
   244     0014                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0016                     	;# 
   248     0017                     	;# 
   249     0018                     	;# 
   250     0019                     	;# 
   251     001A                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001E                     	;# 
   255     001F                     	;# 
   256     008C                     	;# 
   257     008D                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0094                     	;# 
   262     0095                     	;# 
   263     0096                     	;# 
   264     0097                     	;# 
   265     0098                     	;# 
   266     0099                     	;# 
   267     009A                     	;# 
   268     009B                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     010C                     	;# 
   274     010D                     	;# 
   275     0111                     	;# 
   276     0112                     	;# 
   277     0113                     	;# 
   278     0114                     	;# 
   279     0115                     	;# 
   280     0116                     	;# 
   281     0117                     	;# 
   282     0118                     	;# 
   283     0119                     	;# 
   284     011A                     	;# 
   285     011B                     	;# 
   286     011D                     	;# 
   287     011E                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0191                     	;# 
   291     0191                     	;# 
   292     0192                     	;# 
   293     0193                     	;# 
   294     0193                     	;# 
   295     0193                     	;# 
   296     0194                     	;# 
   297     0195                     	;# 
   298     0196                     	;# 
   299     0199                     	;# 
   300     019A                     	;# 
   301     019B                     	;# 
   302     019B                     	;# 
   303     019B                     	;# 
   304     019B                     	;# 
   305     019C                     	;# 
   306     019C                     	;# 
   307     019D                     	;# 
   308     019E                     	;# 
   309     019F                     	;# 
   310     020C                     	;# 
   311     020D                     	;# 
   312     0211                     	;# 
   313     0211                     	;# 
   314     0212                     	;# 
   315     0212                     	;# 
   316     0213                     	;# 
   317     0213                     	;# 
   318     0214                     	;# 
   319     0214                     	;# 
   320     0215                     	;# 
   321     0215                     	;# 
   322     0215                     	;# 
   323     0216                     	;# 
   324     0216                     	;# 
   325     0217                     	;# 
   326     0217                     	;# 
   327     0219                     	;# 
   328     021A                     	;# 
   329     021B                     	;# 
   330     021C                     	;# 
   331     021D                     	;# 
   332     021E                     	;# 
   333     021F                     	;# 
   334     0291                     	;# 
   335     0291                     	;# 
   336     0292                     	;# 
   337     0293                     	;# 
   338     0294                     	;# 
   339     0295                     	;# 
   340     0295                     	;# 
   341     0296                     	;# 
   342     0298                     	;# 
   343     0298                     	;# 
   344     0299                     	;# 
   345     029A                     	;# 
   346     029B                     	;# 
   347     029C                     	;# 
   348     029C                     	;# 
   349     029D                     	;# 
   350     029E                     	;# 
   351     029E                     	;# 
   352     0311                     	;# 
   353     0311                     	;# 
   354     0312                     	;# 
   355     0313                     	;# 
   356     0318                     	;# 
   357     0318                     	;# 
   358     0319                     	;# 
   359     031A                     	;# 
   360     0394                     	;# 
   361     0395                     	;# 
   362     0396                     	;# 
   363     039A                     	;# 
   364     039C                     	;# 
   365     039D                     	;# 
   366     039E                     	;# 
   367     039F                     	;# 
   368     0415                     	;# 
   369     0416                     	;# 
   370     0417                     	;# 
   371     041C                     	;# 
   372     041D                     	;# 
   373     041E                     	;# 
   374     0FE4                     	;# 
   375     0FE5                     	;# 
   376     0FE6                     	;# 
   377     0FE7                     	;# 
   378     0FE8                     	;# 
   379     0FE9                     	;# 
   380     0FEA                     	;# 
   381     0FEB                     	;# 
   382     0FED                     	;# 
   383     0FEE                     	;# 
   384     0FEF                     	;# 
   385     0000                     	;# 
   386     0001                     	;# 
   387     0002                     	;# 
   388     0003                     	;# 
   389     0004                     	;# 
   390     0005                     	;# 
   391     0006                     	;# 
   392     0007                     	;# 
   393     0008                     	;# 
   394     0009                     	;# 
   395     000A                     	;# 
   396     000B                     	;# 
   397     000C                     	;# 
   398     000D                     	;# 
   399     0011                     	;# 
   400     0012                     	;# 
   401     0013                     	;# 
   402     0014                     	;# 
   403     0015                     	;# 
   404     0016                     	;# 
   405     0016                     	;# 
   406     0017                     	;# 
   407     0018                     	;# 
   408     0019                     	;# 
   409     001A                     	;# 
   410     001B                     	;# 
   411     001C                     	;# 
   412     001E                     	;# 
   413     001F                     	;# 
   414     008C                     	;# 
   415     008D                     	;# 
   416     0091                     	;# 
   417     0092                     	;# 
   418     0093                     	;# 
   419     0094                     	;# 
   420     0095                     	;# 
   421     0096                     	;# 
   422     0097                     	;# 
   423     0098                     	;# 
   424     0099                     	;# 
   425     009A                     	;# 
   426     009B                     	;# 
   427     009B                     	;# 
   428     009C                     	;# 
   429     009D                     	;# 
   430     009E                     	;# 
   431     010C                     	;# 
   432     010D                     	;# 
   433     0111                     	;# 
   434     0112                     	;# 
   435     0113                     	;# 
   436     0114                     	;# 
   437     0115                     	;# 
   438     0116                     	;# 
   439     0117                     	;# 
   440     0118                     	;# 
   441     0119                     	;# 
   442     011A                     	;# 
   443     011B                     	;# 
   444     011D                     	;# 
   445     011E                     	;# 
   446     018C                     	;# 
   447     018D                     	;# 
   448     0191                     	;# 
   449     0191                     	;# 
   450     0192                     	;# 
   451     0193                     	;# 
   452     0193                     	;# 
   453     0193                     	;# 
   454     0194                     	;# 
   455     0195                     	;# 
   456     0196                     	;# 
   457     0199                     	;# 
   458     019A                     	;# 
   459     019B                     	;# 
   460     019B                     	;# 
   461     019B                     	;# 
   462     019B                     	;# 
   463     019C                     	;# 
   464     019C                     	;# 
   465     019D                     	;# 
   466     019E                     	;# 
   467     019F                     	;# 
   468     020C                     	;# 
   469     020D                     	;# 
   470     0211                     	;# 
   471     0211                     	;# 
   472     0212                     	;# 
   473     0212                     	;# 
   474     0213                     	;# 
   475     0213                     	;# 
   476     0214                     	;# 
   477     0214                     	;# 
   478     0215                     	;# 
   479     0215                     	;# 
   480     0215                     	;# 
   481     0216                     	;# 
   482     0216                     	;# 
   483     0217                     	;# 
   484     0217                     	;# 
   485     0219                     	;# 
   486     021A                     	;# 
   487     021B                     	;# 
   488     021C                     	;# 
   489     021D                     	;# 
   490     021E                     	;# 
   491     021F                     	;# 
   492     0291                     	;# 
   493     0291                     	;# 
   494     0292                     	;# 
   495     0293                     	;# 
   496     0294                     	;# 
   497     0295                     	;# 
   498     0295                     	;# 
   499     0296                     	;# 
   500     0298                     	;# 
   501     0298                     	;# 
   502     0299                     	;# 
   503     029A                     	;# 
   504     029B                     	;# 
   505     029C                     	;# 
   506     029C                     	;# 
   507     029D                     	;# 
   508     029E                     	;# 
   509     029E                     	;# 
   510     0311                     	;# 
   511     0311                     	;# 
   512     0312                     	;# 
   513     0313                     	;# 
   514     0318                     	;# 
   515     0318                     	;# 
   516     0319                     	;# 
   517     031A                     	;# 
   518     0394                     	;# 
   519     0395                     	;# 
   520     0396                     	;# 
   521     039A                     	;# 
   522     039C                     	;# 
   523     039D                     	;# 
   524     039E                     	;# 
   525     039F                     	;# 
   526     0415                     	;# 
   527     0416                     	;# 
   528     0417                     	;# 
   529     041C                     	;# 
   530     041D                     	;# 
   531     041E                     	;# 
   532     0FE4                     	;# 
   533     0FE5                     	;# 
   534     0FE6                     	;# 
   535     0FE7                     	;# 
   536     0FE8                     	;# 
   537     0FE9                     	;# 
   538     0FEA                     	;# 
   539     0FEB                     	;# 
   540     0FED                     	;# 
   541     0FEE                     	;# 
   542     0FEF                     	;# 
   543     0000                     	;# 
   544     0001                     	;# 
   545     0002                     	;# 
   546     0003                     	;# 
   547     0004                     	;# 
   548     0005                     	;# 
   549     0006                     	;# 
   550     0007                     	;# 
   551     0008                     	;# 
   552     0009                     	;# 
   553     000A                     	;# 
   554     000B                     	;# 
   555     000C                     	;# 
   556     000D                     	;# 
   557     0011                     	;# 
   558     0012                     	;# 
   559     0013                     	;# 
   560     0014                     	;# 
   561     0015                     	;# 
   562     0016                     	;# 
   563     0016                     	;# 
   564     0017                     	;# 
   565     0018                     	;# 
   566     0019                     	;# 
   567     001A                     	;# 
   568     001B                     	;# 
   569     001C                     	;# 
   570     001E                     	;# 
   571     001F                     	;# 
   572     008C                     	;# 
   573     008D                     	;# 
   574     0091                     	;# 
   575     0092                     	;# 
   576     0093                     	;# 
   577     0094                     	;# 
   578     0095                     	;# 
   579     0096                     	;# 
   580     0097                     	;# 
   581     0098                     	;# 
   582     0099                     	;# 
   583     009A                     	;# 
   584     009B                     	;# 
   585     009B                     	;# 
   586     009C                     	;# 
   587     009D                     	;# 
   588     009E                     	;# 
   589     010C                     	;# 
   590     010D                     	;# 
   591     0111                     	;# 
   592     0112                     	;# 
   593     0113                     	;# 
   594     0114                     	;# 
   595     0115                     	;# 
   596     0116                     	;# 
   597     0117                     	;# 
   598     0118                     	;# 
   599     0119                     	;# 
   600     011A                     	;# 
   601     011B                     	;# 
   602     011D                     	;# 
   603     011E                     	;# 
   604     018C                     	;# 
   605     018D                     	;# 
   606     0191                     	;# 
   607     0191                     	;# 
   608     0192                     	;# 
   609     0193                     	;# 
   610     0193                     	;# 
   611     0193                     	;# 
   612     0194                     	;# 
   613     0195                     	;# 
   614     0196                     	;# 
   615     0199                     	;# 
   616     019A                     	;# 
   617     019B                     	;# 
   618     019B                     	;# 
   619     019B                     	;# 
   620     019B                     	;# 
   621     019C                     	;# 
   622     019C                     	;# 
   623     019D                     	;# 
   624     019E                     	;# 
   625     019F                     	;# 
   626     020C                     	;# 
   627     020D                     	;# 
   628     0211                     	;# 
   629     0211                     	;# 
   630     0212                     	;# 
   631     0212                     	;# 
   632     0213                     	;# 
   633     0213                     	;# 
   634     0214                     	;# 
   635     0214                     	;# 
   636     0215                     	;# 
   637     0215                     	;# 
   638     0215                     	;# 
   639     0216                     	;# 
   640     0216                     	;# 
   641     0217                     	;# 
   642     0217                     	;# 
   643     0219                     	;# 
   644     021A                     	;# 
   645     021B                     	;# 
   646     021C                     	;# 
   647     021D                     	;# 
   648     021E                     	;# 
   649     021F                     	;# 
   650     0291                     	;# 
   651     0291                     	;# 
   652     0292                     	;# 
   653     0293                     	;# 
   654     0294                     	;# 
   655     0295                     	;# 
   656     0295                     	;# 
   657     0296                     	;# 
   658     0298                     	;# 
   659     0298                     	;# 
   660     0299                     	;# 
   661     029A                     	;# 
   662     029B                     	;# 
   663     029C                     	;# 
   664     029C                     	;# 
   665     029D                     	;# 
   666     029E                     	;# 
   667     029E                     	;# 
   668     0311                     	;# 
   669     0311                     	;# 
   670     0312                     	;# 
   671     0313                     	;# 
   672     0318                     	;# 
   673     0318                     	;# 
   674     0319                     	;# 
   675     031A                     	;# 
   676     0394                     	;# 
   677     0395                     	;# 
   678     0396                     	;# 
   679     039A                     	;# 
   680     039C                     	;# 
   681     039D                     	;# 
   682     039E                     	;# 
   683     039F                     	;# 
   684     0415                     	;# 
   685     0416                     	;# 
   686     0417                     	;# 
   687     041C                     	;# 
   688     041D                     	;# 
   689     041E                     	;# 
   690     0FE4                     	;# 
   691     0FE5                     	;# 
   692     0FE6                     	;# 
   693     0FE7                     	;# 
   694     0FE8                     	;# 
   695     0FE9                     	;# 
   696     0FEA                     	;# 
   697     0FEB                     	;# 
   698     0FED                     	;# 
   699     0FEE                     	;# 
   700     0FEF                     	;# 
   701                           
   702                           	psect	idataBANK1
   703     0462                     __pidataBANK1:
   704                           
   705                           ;initializer for seg7@F2503
   706     0462  347E               	retlw	126
   707     0463  3400               	retlw	0
   708     0464  3430               	retlw	48
   709     0465  3400               	retlw	0
   710     0466  346D               	retlw	109
   711     0467  3400               	retlw	0
   712     0468  3479               	retlw	121
   713     0469  3400               	retlw	0
   714     046A  3433               	retlw	51
   715     046B  3400               	retlw	0
   716     046C  345B               	retlw	91
   717     046D  3400               	retlw	0
   718     046E  345F               	retlw	95
   719     046F  3400               	retlw	0
   720     0470  3470               	retlw	112
   721     0471  3400               	retlw	0
   722     0472  347F               	retlw	127
   723     0473  3400               	retlw	0
   724     0474  347B               	retlw	123
   725     0475  3400               	retlw	0
   726     0011                     _PIR1bits	set	17
   727     0015                     _TMR0	set	21
   728     000B                     _INTCONbits	set	11
   729     0095                     _OPTION_REGbits	set	149
   730     0091                     _PIE1bits	set	145
   731     008D                     _TRISBbits	set	141
   732     008C                     _TRISAbits	set	140
   733     0099                     _OSCCONbits	set	153
   734     009E                     _ADCON1bits	set	158
   735     009B                     _ADRESL	set	155
   736     009C                     _ADRESH	set	156
   737     009D                     _ADCON0bits	set	157
   738     011E                     _APFCON1bits	set	286
   739     0117                     _FVRCONbits	set	279
   740     010D                     _LATBbits	set	269
   741     010C                     _LATAbits	set	268
   742     019D                     _RCSTAbits	set	413
   743     019B                     _SPBRG	set	411
   744     019F                     _BAUDCONbits	set	415
   745     018D                     _ANSELBbits	set	397
   746     018C                     _ANSELAbits	set	396
   747     019E                     _TXSTAbits	set	414
   748     019A                     _TXREG	set	410
   749                           
   750                           	psect	cinit
   751     008C                     start_initialization:	
   752                           ; #config settings
   753                           
   754     008C                     __initialization:
   755                           
   756                           ; Initialize objects allocated to BANK1
   757     008C  3062               	movlw	low __pidataBANK1
   758     008D  0084               	movwf	4
   759     008E  3084               	movlw	(high __pidataBANK1)| (0+128)
   760     008F  0085               	movwf	5
   761     0090  30A0               	movlw	low __pdataBANK1
   762     0091  0086               	movwf	6
   763     0092  3000               	movlw	high __pdataBANK1
   764     0093  0087               	movwf	7
   765     0094  3014               	movlw	20
   766     0095  3184  24B7  3180   	fcall	init_ram
   767                           
   768                           ; Clear objects allocated to BANK0
   769     0098  304A               	movlw	low __pbssBANK0
   770     0099  0084               	movwf	4
   771     009A  3000               	movlw	high __pbssBANK0
   772     009B  0085               	movwf	5
   773     009C  3016               	movlw	22
   774     009D  3184  24BD  3180   	fcall	clear_ram0
   775     00A0                     end_of_initialization:	
   776                           ;End of C runtime variable initialization code
   777                           
   778     00A0                     __end_of__initialization:
   779     00A0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   780     00A1  0020               	movlb	0
   781     00A2  3184  2CC3         	ljmp	_main	;jump to C main() function
   782                           
   783                           	psect	bssBANK0
   784     004A                     __pbssBANK0:
   785     004A                     INT_TMR0@count:
   786     004A                     	ds	2
   787     004C                     INT_TMR0@A:
   788     004C                     	ds	1
   789     004D                     ASCII_Con@r:
   790     004D                     	ds	7
   791     0054                     seg7@r:
   792     0054                     	ds	6
   793     005A                     BinTOBcd@r:
   794     005A                     	ds	6
   795                           
   796                           	psect	dataBANK1
   797     00A0                     __pdataBANK1:
   798     00A0                     seg7@F2503:
   799     00A0                     	ds	20
   800                           
   801                           	psect	inittext
   802     04B7                     init_ram:
   803     04B7  00FE               	movwf	btemp
   804     04B8                     initloop:
   805     04B8  0012               	moviw fsr0++
   806     04B9  001E               	movwi fsr1++
   807     04BA  0BFE               	decfsz	btemp,f
   808     04BB  2CB8               	goto	initloop
   809     04BC  3400               	retlw	0
   810                           
   811                           	psect	clrtext
   812     04BD                     clear_ram0:	
   813                           ;	Called with FSR0 containing the base address, and
   814                           ;	WREG with the size to clear
   815                           
   816     04BD  0064               	clrwdt	;clear the watchdog before getting into this loop
   817     04BE                     clrloop0:
   818     04BE  0180               	clrf	0	;clear RAM location pointed to by FSR
   819     04BF  3101               	addfsr 0,1
   820     04C0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   821     04C1  2CBE               	goto	clrloop0	;have we reached the end yet?
   822     04C2  3400               	retlw	0	;all done for this memory range, return
   823                           
   824                           	psect	cstackBANK1
   825     0000                     __pcstackBANK1:
   826     0000                     ??_init_IO:
   827     0000                     ??_init_UART:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0000                     ??_TMR0_INIT:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0000                     ??_main:	
   834                           ; 1 bytes @ 0x0
   835                           
   836                           
   837                           	psect	cstackCOMMON
   838     0070                     __pcstackCOMMON:	
   839                           ; 1 bytes @ 0x0
   840                           
   841     0070                     ?_init_IO:
   842     0070                     ?_readADC:	
   843                           ; 1 bytes @ 0x0
   844                           
   845     0070                     ??_readADC:	
   846                           ; 1 bytes @ 0x0
   847                           
   848     0070                     ?_seg7:	
   849                           ; 1 bytes @ 0x0
   850                           
   851     0070                     ??_seg7:	
   852                           ; 1 bytes @ 0x0
   853                           
   854     0070                     ?_UART_print:	
   855                           ; 1 bytes @ 0x0
   856                           
   857     0070                     ?_ASCII_Con:	
   858                           ; 1 bytes @ 0x0
   859                           
   860     0070                     ?_init_UART:	
   861                           ; 1 bytes @ 0x0
   862                           
   863     0070                     ?_TMR0_INIT:	
   864                           ; 1 bytes @ 0x0
   865                           
   866     0070                     ?_main:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0070                     ?_INT_TMR0:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0070                     ?_showNumber:	
   873                           ; 1 bytes @ 0x0
   874                           
   875     0070                     ?_UART_write:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0070                     ??_UART_write:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0070                     ?___awmod:	
   882                           ; 1 bytes @ 0x0
   883                           
   884     0070                     ?___lmul:	
   885                           ; 2 bytes @ 0x0
   886                           
   887     0070                     UART_write@c:	
   888                           ; 4 bytes @ 0x0
   889                           
   890     0070                     showNumber@digit:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ASCII_Con@a:	
   894                           ; 2 bytes @ 0x0
   895                           
   896     0070                     ___awmod@divisor:	
   897                           ; 2 bytes @ 0x0
   898                           
   899     0070                     ___lmul@multiplier:	
   900                           ; 2 bytes @ 0x0
   901                           
   902                           
   903                           ; 4 bytes @ 0x0
   904     0070                     	ds	1
   905     0071                     ??_UART_print:
   906                           
   907                           ; 1 bytes @ 0x1
   908     0071                     	ds	1
   909     0072                     ??_showNumber:
   910     0072                     UART_print@cadena:	
   911                           ; 1 bytes @ 0x2
   912                           
   913     0072                     ASCII_Con@b:	
   914                           ; 1 bytes @ 0x2
   915                           
   916     0072                     ___awmod@dividend:	
   917                           ; 2 bytes @ 0x2
   918                           
   919                           
   920                           ; 2 bytes @ 0x2
   921     0072                     	ds	2
   922     0074                     ??___awmod:
   923     0074                     ASCII_Con@c:	
   924                           ; 1 bytes @ 0x4
   925                           
   926     0074                     ___lmul@multiplicand:	
   927                           ; 2 bytes @ 0x4
   928                           
   929                           
   930                           ; 4 bytes @ 0x4
   931     0074                     	ds	1
   932     0075                     ___awmod@counter:
   933                           
   934                           ; 1 bytes @ 0x5
   935     0075                     	ds	1
   936     0076                     ??_ASCII_Con:
   937     0076                     ___awmod@sign:	
   938                           ; 1 bytes @ 0x6
   939                           
   940                           
   941                           ; 1 bytes @ 0x6
   942     0076                     	ds	1
   943     0077                     ?_showNumbers:
   944     0077                     showNumbers@n:	
   945                           ; 1 bytes @ 0x7
   946                           
   947                           
   948                           ; 2 bytes @ 0x7
   949     0077                     	ds	1
   950     0078                     ??___lmul:
   951     0078                     ___lmul@product:	
   952                           ; 1 bytes @ 0x8
   953                           
   954                           
   955                           ; 4 bytes @ 0x8
   956     0078                     	ds	1
   957     0079                     ??_showNumbers:
   958     0079                     showNumbers@digits:	
   959                           ; 1 bytes @ 0x9
   960                           
   961                           
   962                           ; 1 bytes @ 0x9
   963     0079                     	ds	3
   964     007C                     ??___aldiv:
   965                           
   966                           ; 1 bytes @ 0xC
   967     007C                     	ds	1
   968     007D                     ??___almod:
   969                           
   970                           ; 1 bytes @ 0xD
   971     007D                     	ds	1
   972     007E                     ??_BinTOBcd:
   973                           
   974                           	psect	cstackBANK0
   975     0020                     __pcstackBANK0:	
   976                           ; 1 bytes @ 0xE
   977                           
   978     0020                     ?___aldiv:
   979     0020                     ___aldiv@divisor:	
   980                           ; 4 bytes @ 0x0
   981                           
   982     0020                     seg7@numbers:	
   983                           ; 4 bytes @ 0x0
   984                           
   985                           
   986                           ; 20 bytes @ 0x0
   987     0020                     	ds	4
   988     0024                     ___aldiv@dividend:
   989                           
   990                           ; 4 bytes @ 0x4
   991     0024                     	ds	4
   992     0028                     ___aldiv@counter:
   993                           
   994                           ; 1 bytes @ 0x8
   995     0028                     	ds	1
   996     0029                     ___aldiv@sign:
   997                           
   998                           ; 1 bytes @ 0x9
   999     0029                     	ds	1
  1000     002A                     ___aldiv@quotient:
  1001                           
  1002                           ; 4 bytes @ 0xA
  1003     002A                     	ds	4
  1004     002E                     ?___almod:
  1005     002E                     ___almod@divisor:	
  1006                           ; 4 bytes @ 0xE
  1007                           
  1008                           
  1009                           ; 4 bytes @ 0xE
  1010     002E                     	ds	4
  1011     0032                     ___almod@dividend:
  1012                           
  1013                           ; 4 bytes @ 0x12
  1014     0032                     	ds	2
  1015     0034                     seg7@iBCD:
  1016                           
  1017                           ; 1 bytes @ 0x14
  1018     0034                     	ds	2
  1019     0036                     ___almod@counter:
  1020                           
  1021                           ; 1 bytes @ 0x16
  1022     0036                     	ds	1
  1023     0037                     ___almod@sign:
  1024                           
  1025                           ; 1 bytes @ 0x17
  1026     0037                     	ds	1
  1027     0038                     ?_BinTOBcd:
  1028     0038                     BinTOBcd@iADC:	
  1029                           ; 1 bytes @ 0x18
  1030                           
  1031                           
  1032                           ; 4 bytes @ 0x18
  1033     0038                     	ds	4
  1034     003C                     _BinTOBcd$1429:
  1035                           
  1036                           ; 4 bytes @ 0x1C
  1037     003C                     	ds	4
  1038     0040                     _BinTOBcd$1428:
  1039                           
  1040                           ; 4 bytes @ 0x20
  1041     0040                     	ds	4
  1042     0044                     ??_INT_TMR0:
  1043                           
  1044                           ; 1 bytes @ 0x24
  1045     0044                     	ds	5
  1046     0049                     INT_TMR0@B:
  1047                           
  1048                           ; 1 bytes @ 0x29
  1049     0049                     	ds	1
  1050                           
  1051                           	psect	maintext
  1052     04C3                     __pmaintext:	
  1053 ;;
  1054 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1055 ;;
  1056 ;; *************** function _main *****************
  1057 ;; Defined at:
  1058 ;;		line 16 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : B1F/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1072 ;;      Params:         0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels required when called: 5
  1078 ;; This function calls:
  1079 ;;		_init_IO
  1080 ;; This function is called by:
  1081 ;;		Startup code after reset
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085     04C3                     _main:	
  1086                           ;psect for function _main
  1087                           
  1088     04C3                     l1430:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1091                           
  1092                           
  1093                           ;main.c: 17:     init_IO();
  1094     04C3  3183  2365  3184   	fcall	_init_IO
  1095     04C6                     l33:	
  1096                           ;main.c: 20:     while(1)
  1097                           
  1098     04C6                     l34:	
  1099                           ;main.c: 21:     {;main.c: 24:     }
  1100                           
  1101     04C6  2CC6               	goto	l33
  1102     04C7  3180  288A         	ljmp	start
  1103     04C9                     __end_of_main:
  1104                           
  1105                           	psect	text1
  1106     0365                     __ptext1:	
  1107 ;; *************** function _init_IO *****************
  1108 ;; Defined at:
  1109 ;;		line 4 in file "init.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1123 ;;      Params:         0       0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 4
  1130 ;; This function calls:
  1131 ;;		_TMR0_INIT
  1132 ;;		_init_UART
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138     0365                     _init_IO:	
  1139                           ;psect for function _init_IO
  1140                           
  1141     0365                     l1264:	
  1142                           ;incstack = 0
  1143                           ; Regs used in _init_IO: [wreg+status,2+status,0+pclath+cstack]
  1144                           
  1145                           
  1146                           ;init.c: 7:     OSCCONbits.SCS = 0;
  1147     0365  30FC               	movlw	-4
  1148     0366  0021               	movlb	1	; select bank1
  1149     0367  0599               	andwf	25,f	;volatile
  1150                           
  1151                           ;init.c: 8:     OSCCONbits.IRCF = 0b1101;
  1152     0368  0819               	movf	25,w	;volatile
  1153     0369  3987               	andlw	-121
  1154     036A  3868               	iorlw	104
  1155     036B  0099               	movwf	25	;volatile
  1156     036C                     l1266:
  1157                           
  1158                           ;init.c: 14:     ANSELAbits.ANSA0 = 1;
  1159     036C  0023               	movlb	3	; select bank3
  1160     036D  140C               	bsf	12,0	;volatile
  1161     036E                     l1268:
  1162                           
  1163                           ;init.c: 15:     ANSELAbits.ANSA1 = 0;
  1164     036E  108C               	bcf	12,1	;volatile
  1165     036F                     l1270:
  1166                           
  1167                           ;init.c: 16:     ANSELAbits.ANSA2 = 0;
  1168     036F  110C               	bcf	12,2	;volatile
  1169     0370                     l1272:
  1170                           
  1171                           ;init.c: 17:     ANSELAbits.ANSA3 = 0;
  1172     0370  118C               	bcf	12,3	;volatile
  1173     0371                     l1274:
  1174                           
  1175                           ;init.c: 18:     ANSELAbits.ANSA4 = 0;
  1176     0371  120C               	bcf	12,4	;volatile
  1177     0372                     l1276:
  1178                           
  1179                           ;init.c: 21:     TRISAbits.TRISA0 = 1;
  1180     0372  0021               	movlb	1	; select bank1
  1181     0373  140C               	bsf	12,0	;volatile
  1182     0374                     l1278:
  1183                           
  1184                           ;init.c: 22:     TRISAbits.TRISA1 = 0;
  1185     0374  108C               	bcf	12,1	;volatile
  1186     0375                     l1280:
  1187                           
  1188                           ;init.c: 23:     TRISAbits.TRISA2 = 0;
  1189     0375  110C               	bcf	12,2	;volatile
  1190     0376                     l1282:
  1191                           
  1192                           ;init.c: 24:     TRISAbits.TRISA3 = 0;
  1193     0376  118C               	bcf	12,3	;volatile
  1194     0377                     l1284:
  1195                           
  1196                           ;init.c: 25:     TRISAbits.TRISA4 = 0;
  1197     0377  120C               	bcf	12,4	;volatile
  1198     0378                     l1286:
  1199                           
  1200                           ;init.c: 26:     TRISAbits.TRISA6 = 0;
  1201     0378  130C               	bcf	12,6	;volatile
  1202     0379                     l1288:
  1203                           
  1204                           ;init.c: 27:     TRISAbits.TRISA7 = 0;
  1205     0379  138C               	bcf	12,7	;volatile
  1206     037A                     l1290:
  1207                           
  1208                           ;init.c: 31:     ANSELBbits.ANSB1 = 0;
  1209     037A  0023               	movlb	3	; select bank3
  1210     037B  108D               	bcf	13,1	;volatile
  1211     037C                     l1292:
  1212                           
  1213                           ;init.c: 32:     ANSELBbits.ANSB2 = 0;
  1214     037C  110D               	bcf	13,2	;volatile
  1215     037D                     l1294:
  1216                           
  1217                           ;init.c: 33:     ANSELBbits.ANSB3 = 0;
  1218     037D  118D               	bcf	13,3	;volatile
  1219     037E                     l1296:
  1220                           
  1221                           ;init.c: 34:     ANSELBbits.ANSB4 = 0;
  1222     037E  120D               	bcf	13,4	;volatile
  1223     037F                     l1298:
  1224                           
  1225                           ;init.c: 35:     ANSELBbits.ANSB5 = 0;
  1226     037F  128D               	bcf	13,5	;volatile
  1227     0380                     l1300:
  1228                           
  1229                           ;init.c: 36:     ANSELBbits.ANSB6 = 0;
  1230     0380  130D               	bcf	13,6	;volatile
  1231     0381                     l1302:
  1232                           
  1233                           ;init.c: 37:     ANSELBbits.ANSB7 = 0;
  1234     0381  138D               	bcf	13,7	;volatile
  1235     0382                     l1304:
  1236                           
  1237                           ;init.c: 40:     TRISBbits.TRISB0 = 0;
  1238     0382  0021               	movlb	1	; select bank1
  1239     0383  100D               	bcf	13,0	;volatile
  1240     0384                     l1306:
  1241                           
  1242                           ;init.c: 41:     TRISBbits.TRISB1 = 1;
  1243     0384  148D               	bsf	13,1	;volatile
  1244     0385                     l1308:
  1245                           
  1246                           ;init.c: 42:     TRISBbits.TRISB2 = 0;
  1247     0385  110D               	bcf	13,2	;volatile
  1248     0386                     l1310:
  1249                           
  1250                           ;init.c: 43:     TRISBbits.TRISB3 = 0;
  1251     0386  118D               	bcf	13,3	;volatile
  1252     0387                     l1312:
  1253                           
  1254                           ;init.c: 44:     TRISBbits.TRISB4 = 0;
  1255     0387  120D               	bcf	13,4	;volatile
  1256     0388                     l1314:
  1257                           
  1258                           ;init.c: 45:     TRISBbits.TRISB5 = 0;
  1259     0388  128D               	bcf	13,5	;volatile
  1260     0389                     l1316:
  1261                           
  1262                           ;init.c: 46:     TRISBbits.TRISB6 = 0;
  1263     0389  130D               	bcf	13,6	;volatile
  1264     038A                     l1318:
  1265                           
  1266                           ;init.c: 47:     TRISBbits.TRISB7 = 0;
  1267     038A  138D               	bcf	13,7	;volatile
  1268     038B                     l1320:
  1269                           
  1270                           ;init.c: 50:     ADCON0bits.ADON = 0;
  1271     038B  101D               	bcf	29,0	;volatile
  1272     038C                     l1322:
  1273                           
  1274                           ;init.c: 51:     FVRCONbits.FVREN = 1;
  1275     038C  0022               	movlb	2	; select bank2
  1276     038D  1797               	bsf	23,7	;volatile
  1277                           
  1278                           ;init.c: 52:     FVRCONbits.ADFVR = 0b11;
  1279     038E  3003               	movlw	3
  1280     038F  0497               	iorwf	23,f	;volatile
  1281     0390                     l1324:
  1282                           
  1283                           ;init.c: 53:     ADCON1bits.ADNREF = 0;
  1284     0390  0021               	movlb	1	; select bank1
  1285     0391  111E               	bcf	30,2	;volatile
  1286                           
  1287                           ;init.c: 54:     ADCON1bits.ADPREF = 0b11;
  1288     0392  3003               	movlw	3
  1289     0393  049E               	iorwf	30,f	;volatile
  1290     0394                     l1326:
  1291                           
  1292                           ;init.c: 55:     PIE1bits.ADIE = 1;
  1293     0394  1711               	bsf	17,6	;volatile
  1294     0395                     l1328:
  1295                           
  1296                           ;init.c: 56:     PIR1bits.ADIF = 0;
  1297     0395  0020               	movlb	0	; select bank0
  1298     0396  1311               	bcf	17,6	;volatile
  1299     0397                     l1330:
  1300                           
  1301                           ;init.c: 60:     LATAbits.LATA1 = 1;
  1302     0397  0022               	movlb	2	; select bank2
  1303     0398  148C               	bsf	12,1	;volatile
  1304     0399                     l1332:
  1305                           
  1306                           ;init.c: 61:     LATAbits.LATA2 = 1;
  1307     0399  150C               	bsf	12,2	;volatile
  1308     039A                     l1334:
  1309                           
  1310                           ;init.c: 62:     LATAbits.LATA3 = 1;
  1311     039A  158C               	bsf	12,3	;volatile
  1312     039B                     l1336:
  1313                           
  1314                           ;init.c: 63:     LATAbits.LATA4 = 0;
  1315     039B  120C               	bcf	12,4	;volatile
  1316     039C                     l1338:
  1317                           
  1318                           ;init.c: 64:     LATAbits.LATA6 = 0;
  1319     039C  130C               	bcf	12,6	;volatile
  1320     039D                     l1340:
  1321                           
  1322                           ;init.c: 65:     LATAbits.LATA7 = 0;
  1323     039D  138C               	bcf	12,7	;volatile
  1324     039E                     l1342:
  1325                           
  1326                           ;init.c: 66:     LATBbits.LATB0 = 0;
  1327     039E  100D               	bcf	13,0	;volatile
  1328     039F                     l1344:
  1329                           
  1330                           ;init.c: 67:     LATBbits.LATB3 = 0;
  1331     039F  118D               	bcf	13,3	;volatile
  1332     03A0                     l1346:
  1333                           
  1334                           ;init.c: 68:     LATBbits.LATB4 = 0;
  1335     03A0  120D               	bcf	13,4	;volatile
  1336     03A1                     l1348:
  1337                           
  1338                           ;init.c: 69:     LATBbits.LATB5 = 0;
  1339     03A1  128D               	bcf	13,5	;volatile
  1340     03A2                     l1350:
  1341                           
  1342                           ;init.c: 71:     init_UART();
  1343     03A2  3184  2489  3183   	fcall	_init_UART
  1344     03A5                     l1352:
  1345                           
  1346                           ;init.c: 72:     TMR0_INIT();
  1347     03A5  3184  2496  3183   	fcall	_TMR0_INIT
  1348     03A8                     l148:
  1349     03A8  0008               	return
  1350     03A9                     __end_of_init_IO:
  1351                           
  1352                           	psect	text2
  1353     0489                     __ptext2:	
  1354 ;; *************** function _init_UART *****************
  1355 ;; Defined at:
  1356 ;;		line 76 in file "init.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1370 ;;      Params:         0       0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 3
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_init_IO
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384     0489                     _init_UART:	
  1385                           ;psect for function _init_UART
  1386                           
  1387     0489                     l1120:	
  1388                           ;incstack = 0
  1389                           ; Regs used in _init_UART: [wreg]
  1390                           
  1391                           
  1392                           ;init.c: 78:     APFCON1bits.TXCKSEL = 0;
  1393     0489  0022               	movlb	2	; select bank2
  1394     048A  101E               	bcf	30,0	;volatile
  1395                           
  1396                           ;init.c: 79:     TXSTAbits.TRMT = 1;
  1397     048B  0023               	movlb	3	; select bank3
  1398     048C  149E               	bsf	30,1	;volatile
  1399                           
  1400                           ;init.c: 80:     TXSTAbits.TXEN = 1;
  1401     048D  169E               	bsf	30,5	;volatile
  1402                           
  1403                           ;init.c: 81:     BAUDCONbits.RCIDL = 1;
  1404     048E  171F               	bsf	31,6	;volatile
  1405                           
  1406                           ;init.c: 84:     TXSTAbits.SYNC = 0;
  1407     048F  121E               	bcf	30,4	;volatile
  1408                           
  1409                           ;init.c: 85:     TXSTAbits.TX9 = 0;
  1410     0490  131E               	bcf	30,6	;volatile
  1411                           
  1412                           ;init.c: 86:     TXSTAbits.BRGH = 1;
  1413     0491  151E               	bsf	30,2	;volatile
  1414     0492                     l1122:
  1415                           
  1416                           ;init.c: 87:     SPBRG = 25;
  1417     0492  3019               	movlw	25
  1418     0493  009B               	movwf	27	;volatile
  1419     0494                     l1124:
  1420                           
  1421                           ;init.c: 88:     RCSTAbits.SPEN = 1;
  1422     0494  179D               	bsf	29,7	;volatile
  1423     0495                     l151:
  1424     0495  0008               	return
  1425     0496                     __end_of_init_UART:
  1426                           
  1427                           	psect	text3
  1428     0496                     __ptext3:	
  1429 ;; *************** function _TMR0_INIT *****************
  1430 ;; Defined at:
  1431 ;;		line 92 in file "init.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1445 ;;      Params:         0       0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0
  1448 ;;      Totals:         0       0       0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 3
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_init_IO
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459     0496                     _TMR0_INIT:	
  1460                           ;psect for function _TMR0_INIT
  1461                           
  1462     0496                     l1126:	
  1463                           ;incstack = 0
  1464                           ; Regs used in _TMR0_INIT: [wreg+status,2+status,0]
  1465                           
  1466                           
  1467                           ;init.c: 94:      OPTION_REGbits.TMR0CS = 0;
  1468     0496  0021               	movlb	1	; select bank1
  1469     0497  1295               	bcf	21,5	;volatile
  1470                           
  1471                           ;init.c: 95:      OPTION_REGbits.PSA = 0;
  1472     0498  1195               	bcf	21,3	;volatile
  1473     0499                     l1128:
  1474                           
  1475                           ;init.c: 96:      OPTION_REGbits.PS = 0b111;
  1476     0499  3007               	movlw	7
  1477     049A  0495               	iorwf	21,f	;volatile
  1478     049B                     l1130:
  1479                           
  1480                           ;init.c: 98:      INTCONbits.GIE = 1;
  1481     049B  178B               	bsf	11,7	;volatile
  1482     049C                     l1132:
  1483                           
  1484                           ;init.c: 99:      INTCONbits.PEIE = 1;
  1485     049C  170B               	bsf	11,6	;volatile
  1486     049D                     l1134:
  1487                           
  1488                           ;init.c: 100:      INTCONbits.TMR0IE = 1;
  1489     049D  168B               	bsf	11,5	;volatile
  1490     049E                     l1136:
  1491                           
  1492                           ;init.c: 101:      INTCONbits.TMR0IF = 0;
  1493     049E  110B               	bcf	11,2	;volatile
  1494     049F                     l1138:
  1495                           
  1496                           ;init.c: 103:      TMR0 = 158;
  1497     049F  309E               	movlw	158
  1498     04A0  0020               	movlb	0	; select bank0
  1499     04A1  0095               	movwf	21	;volatile
  1500     04A2                     l154:
  1501     04A2  0008               	return
  1502     04A3                     __end_of_TMR0_INIT:
  1503                           
  1504                           	psect	intentry
  1505     0004                     __pintentry:	
  1506 ;; *************** function _INT_TMR0 *****************
  1507 ;; Defined at:
  1508 ;;		line 29 in file "main.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  B               1   41[BANK0 ] PTR int 
  1513 ;;		 -> BinTOBcd@r(6), 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1523 ;;      Params:         0       0       0       0       0       0
  1524 ;;      Locals:         0       1       0       0       0       0
  1525 ;;      Temps:          0       5       0       0       0       0
  1526 ;;      Totals:         0       6       0       0       0       0
  1527 ;;Total ram usage:        6 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 2
  1530 ;; This function calls:
  1531 ;;		_ASCII_Con
  1532 ;;		_BinTOBcd
  1533 ;;		_UART_print
  1534 ;;		_readADC
  1535 ;;		_seg7
  1536 ;;		_showNumbers
  1537 ;; This function is called by:
  1538 ;;		Interrupt level 1
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542     0004                     _INT_TMR0:
  1543                           
  1544                           ;incstack = 0
  1545     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1546                           
  1547                           ; Regs used in _INT_TMR0: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1548     0005  3180               	pagesel	$
  1549     0006                     i1l1432:
  1550                           
  1551                           ;main.c: 31:     static int count = 0;;main.c: 32:     static int* A ;;main.c: 34:     i
      +                          f(INTCONbits.TMR0IF == 1){
  1552     0006  1D0B               	btfss	11,2	;volatile
  1553     0007  2809               	goto	u108_21
  1554     0008  280A               	goto	u108_20
  1555     0009                     u108_21:
  1556     0009  2834               	goto	i1l45
  1557     000A                     u108_20:
  1558     000A                     i1l1434:
  1559                           
  1560                           ;main.c: 35:         if(count == 40)
  1561     000A  3028               	movlw	40
  1562     000B  0020               	movlb	0	; select bank0
  1563     000C  064A               	xorwf	INT_TMR0@count,w
  1564     000D  044B               	iorwf	INT_TMR0@count+1,w
  1565     000E  1D03               	btfss	3,2
  1566     000F  2811               	goto	u109_21
  1567     0010  2812               	goto	u109_20
  1568     0011                     u109_21:
  1569     0011  2824               	goto	i1l1442
  1570     0012                     u109_20:
  1571     0012                     i1l1436:
  1572                           
  1573                           ;main.c: 36:         {;main.c: 37:             LATAbits.LATA4 = ! LATAbits.LATA4;
  1574     0012  1003               	clrc
  1575     0013  0022               	movlb	2	; select bank2
  1576     0014  1E0C               	btfss	12,4	;volatile
  1577     0015  1403               	setc
  1578     0016  1803               	btfsc	3,0
  1579     0017  2819               	goto	u110_21
  1580     0018  281C               	goto	u110_20
  1581     0019                     u110_21:
  1582     0019  0022               	movlb	2	; select bank2
  1583     001A  160C               	bsf	12,4	;volatile
  1584     001B  281E               	goto	u111_24
  1585     001C                     u110_20:
  1586     001C  0022               	movlb	2	; select bank2
  1587     001D  120C               	bcf	12,4	;volatile
  1588     001E                     u111_24:
  1589     001E                     i1l1438:
  1590                           
  1591                           ;main.c: 38:             readADC();
  1592     001E  3184  24A3  3180   	fcall	_readADC
  1593     0021                     i1l1440:
  1594                           
  1595                           ;main.c: 39:             count = 0;
  1596     0021  0020               	movlb	0	; select bank0
  1597     0022  01CA               	clrf	INT_TMR0@count
  1598     0023  01CB               	clrf	INT_TMR0@count+1
  1599     0024                     i1l1442:
  1600                           
  1601                           ;main.c: 42:         count++;
  1602     0024  3001               	movlw	1
  1603     0025  07CA               	addwf	INT_TMR0@count,f
  1604     0026  3000               	movlw	0
  1605     0027  3DCB               	addwfc	INT_TMR0@count+1,f
  1606     0028                     i1l1444:
  1607                           
  1608                           ;main.c: 43:         TMR0 = 158;
  1609     0028  309E               	movlw	158
  1610     0029  0095               	movwf	21	;volatile
  1611     002A                     i1l1446:
  1612                           
  1613                           ;main.c: 44:         INTCONbits.TMR0IF = 0;
  1614     002A  110B               	bcf	11,2	;volatile
  1615     002B                     i1l1448:
  1616                           
  1617                           ;main.c: 45:         showNumbers(A, count);
  1618     002B  084B               	movf	INT_TMR0@count+1,w
  1619     002C  00F8               	movwf	showNumbers@n+1
  1620     002D  084A               	movf	INT_TMR0@count,w
  1621     002E  00F7               	movwf	showNumbers@n
  1622     002F  084C               	movf	INT_TMR0@A,w
  1623     0030  3182  22B3  3180   	fcall	_showNumbers
  1624     0033  2888               	goto	i1l47
  1625     0034                     i1l45:	
  1626                           ;main.c: 47:     }
  1627                           
  1628                           
  1629                           ;main.c: 48:     if(PIR1bits.ADIF == 1){
  1630     0034  0020               	movlb	0	; select bank0
  1631     0035  1F11               	btfss	17,6	;volatile
  1632     0036  2838               	goto	u112_21
  1633     0037  2839               	goto	u112_20
  1634     0038                     u112_21:
  1635     0038  2888               	goto	i1l47
  1636     0039                     u112_20:
  1637     0039                     i1l1452:
  1638                           
  1639                           ;main.c: 50:         LATAbits.LATA6 = ! LATAbits.LATA6;
  1640     0039  1003               	clrc
  1641     003A  0022               	movlb	2	; select bank2
  1642     003B  1F0C               	btfss	12,6	;volatile
  1643     003C  1403               	setc
  1644     003D  1803               	btfsc	3,0
  1645     003E  2840               	goto	u113_21
  1646     003F  2843               	goto	u113_20
  1647     0040                     u113_21:
  1648     0040  0022               	movlb	2	; select bank2
  1649     0041  170C               	bsf	12,6	;volatile
  1650     0042  2845               	goto	u114_24
  1651     0043                     u113_20:
  1652     0043  0022               	movlb	2	; select bank2
  1653     0044  130C               	bcf	12,6	;volatile
  1654     0045                     u114_24:
  1655     0045                     i1l1454:
  1656                           
  1657                           ;main.c: 51:         PIR1bits.ADIF = 0;
  1658     0045  0020               	movlb	0	; select bank0
  1659     0046  1311               	bcf	17,6	;volatile
  1660     0047                     i1l1456:
  1661                           
  1662                           ;main.c: 52:         ADCON0bits.ADON = 0;
  1663     0047  0021               	movlb	1	; select bank1
  1664     0048  101D               	bcf	29,0	;volatile
  1665     0049                     i1l1458:
  1666                           
  1667                           ;main.c: 54:         int *B = BinTOBcd(((ADRESH<<8) + ADRESL));
  1668     0049  081B               	movf	27,w	;volatile
  1669     004A  0020               	movlb	0	; select bank0
  1670     004B  00C4               	movwf	??_INT_TMR0
  1671     004C  01C5               	clrf	??_INT_TMR0+1
  1672     004D  0021               	movlb	1	; select bank1
  1673     004E  081C               	movf	28,w	;volatile
  1674     004F  0020               	movlb	0	; select bank0
  1675     0050  00C6               	movwf	??_INT_TMR0+2
  1676     0051  01C7               	clrf	??_INT_TMR0+3
  1677     0052  0846               	movf	??_INT_TMR0+2,w
  1678     0053  00C7               	movwf	??_INT_TMR0+3
  1679     0054  01C6               	clrf	??_INT_TMR0+2
  1680     0055  0844               	movf	??_INT_TMR0,w
  1681     0056  0746               	addwf	??_INT_TMR0+2,w
  1682     0057  00B8               	movwf	BinTOBcd@iADC
  1683     0058  0845               	movf	??_INT_TMR0+1,w
  1684     0059  3D47               	addwfc	??_INT_TMR0+3,w
  1685     005A  00B9               	movwf	BinTOBcd@iADC+1
  1686     005B  01BA               	clrf	BinTOBcd@iADC+2
  1687     005C  1BB9               	btfsc	BinTOBcd@iADC+1,7
  1688     005D  03BA               	decf	BinTOBcd@iADC+2,f
  1689     005E  083A               	movf	BinTOBcd@iADC+2,w
  1690     005F  00BB               	movwf	BinTOBcd@iADC+3
  1691     0060  3180  20A4  3180   	fcall	_BinTOBcd
  1692     0063  0020               	movlb	0	; select bank0
  1693     0064  00C9               	movwf	INT_TMR0@B
  1694     0065                     i1l1460:
  1695                           
  1696                           ;main.c: 57:         A = seg7(B);
  1697     0065  0849               	movf	INT_TMR0@B,w
  1698     0066  3183  23E4  3180   	fcall	_seg7
  1699     0069  0020               	movlb	0	; select bank0
  1700     006A  00CC               	movwf	INT_TMR0@A
  1701     006B                     i1l1462:
  1702                           
  1703                           ;main.c: 58:         UART_print(ASCII_Con(B[2], B[1], B[0]));
  1704     006B  0849               	movf	INT_TMR0@B,w
  1705     006C  3E04               	addlw	4
  1706     006D  0086               	movwf	6
  1707     006E  0187               	clrf	7
  1708     006F  3F40               	moviw [0]fsr1
  1709     0070  00F0               	movwf	ASCII_Con@a
  1710     0071  3F41               	moviw [1]fsr1
  1711     0072  00F1               	movwf	ASCII_Con@a+1
  1712     0073  0849               	movf	INT_TMR0@B,w
  1713     0074  3E02               	addlw	2
  1714     0075  0086               	movwf	6
  1715     0076  0187               	clrf	7
  1716     0077  3F40               	moviw [0]fsr1
  1717     0078  00F2               	movwf	ASCII_Con@b
  1718     0079  3F41               	moviw [1]fsr1
  1719     007A  00F3               	movwf	ASCII_Con@b+1
  1720     007B  0849               	movf	INT_TMR0@B,w
  1721     007C  0086               	movwf	6
  1722     007D  0187               	clrf	7
  1723     007E  3F40               	moviw [0]fsr1
  1724     007F  00F4               	movwf	ASCII_Con@c
  1725     0080  3F41               	moviw [1]fsr1
  1726     0081  00F5               	movwf	ASCII_Con@c+1
  1727     0082  3184  2476  3180   	fcall	_ASCII_Con
  1728     0085  3184  244C  3180   	fcall	_UART_print
  1729     0088                     i1l47:
  1730     0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1731     0089  0009               	retfie
  1732     008A                     __end_of_INT_TMR0:
  1733                           
  1734                           	psect	text5
  1735     02B3                     __ptext5:	
  1736 ;; *************** function _showNumbers *****************
  1737 ;; Defined at:
  1738 ;;		line 67 in file "funtions.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  digits          1    wreg     PTR int 
  1741 ;;		 -> NULL(0), seg7@r(6), 
  1742 ;;  n               2    7[COMMON] int 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  digits          1    9[COMMON] PTR int 
  1745 ;;		 -> NULL(0), seg7@r(6), 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1755 ;;      Params:         2       0       0       0       0       0
  1756 ;;      Locals:         1       0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0
  1758 ;;      Totals:         3       0       0       0       0       0
  1759 ;;Total ram usage:        3 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 1
  1762 ;; This function calls:
  1763 ;;		___awmod
  1764 ;;		_showNumber
  1765 ;; This function is called by:
  1766 ;;		_INT_TMR0
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770     02B3                     _showNumbers:	
  1771                           ;psect for function _showNumbers
  1772                           
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _showNumbers: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1776                           ;showNumbers@digits stored from wreg
  1777     02B3  00F9               	movwf	showNumbers@digits
  1778     02B4                     i1l1362:
  1779                           
  1780                           ;funtions.c: 67: void showNumbers(int *digits, int n);funtions.c: 68: {;funtions.c: 72: 
      +                              if(n%3 == 0)
  1781     02B4  3003               	movlw	3
  1782     02B5  00F0               	movwf	___awmod@divisor
  1783     02B6  3000               	movlw	0
  1784     02B7  00F1               	movwf	___awmod@divisor+1
  1785     02B8  0878               	movf	showNumbers@n+1,w
  1786     02B9  00F3               	movwf	___awmod@dividend+1
  1787     02BA  0877               	movf	showNumbers@n,w
  1788     02BB  00F2               	movwf	___awmod@dividend
  1789     02BC  3183  2312  3182   	fcall	___awmod
  1790     02BF  0870               	movf	?___awmod,w
  1791     02C0  0471               	iorwf	?___awmod+1,w
  1792     02C1  1D03               	btfss	3,2
  1793     02C2  2AC4               	goto	u103_21
  1794     02C3  2AC5               	goto	u103_20
  1795     02C4                     u103_21:
  1796     02C4  2AD2               	goto	i1l1370
  1797     02C5                     u103_20:
  1798     02C5                     i1l1364:
  1799                           
  1800                           ;funtions.c: 73:     {;funtions.c: 74:         showNumber(digits[0]);
  1801     02C5  0879               	movf	showNumbers@digits,w
  1802     02C6  0086               	movwf	6
  1803     02C7  0187               	clrf	7
  1804     02C8  3F40               	moviw [0]fsr1
  1805     02C9  00F0               	movwf	showNumber@digit
  1806     02CA  3F41               	moviw [1]fsr1
  1807     02CB  00F1               	movwf	showNumber@digit+1
  1808     02CC  3183  23A9  3182   	fcall	_showNumber
  1809     02CF                     i1l1366:
  1810                           
  1811                           ;funtions.c: 75:         LATAbits.LATA3 = 0;
  1812     02CF  0022               	movlb	2	; select bank2
  1813     02D0  118C               	bcf	12,3	;volatile
  1814     02D1                     i1l1368:
  1815                           
  1816                           ;funtions.c: 76:         LATAbits.LATA1 = 1;
  1817     02D1  148C               	bsf	12,1	;volatile
  1818     02D2                     i1l1370:
  1819                           
  1820                           ;funtions.c: 78:     if(n%3 == 1)
  1821     02D2  3003               	movlw	3
  1822     02D3  00F0               	movwf	___awmod@divisor
  1823     02D4  3000               	movlw	0
  1824     02D5  00F1               	movwf	___awmod@divisor+1
  1825     02D6  0878               	movf	showNumbers@n+1,w
  1826     02D7  00F3               	movwf	___awmod@dividend+1
  1827     02D8  0877               	movf	showNumbers@n,w
  1828     02D9  00F2               	movwf	___awmod@dividend
  1829     02DA  3183  2312  3182   	fcall	___awmod
  1830     02DD  0370               	decf	?___awmod,w
  1831     02DE  0471               	iorwf	?___awmod+1,w
  1832     02DF  1D03               	btfss	3,2
  1833     02E0  2AE2               	goto	u104_21
  1834     02E1  2AE3               	goto	u104_20
  1835     02E2                     u104_21:
  1836     02E2  2AF1               	goto	i1l1378
  1837     02E3                     u104_20:
  1838     02E3                     i1l1372:
  1839                           
  1840                           ;funtions.c: 79:     {;funtions.c: 80:         showNumber(digits[1]);
  1841     02E3  0879               	movf	showNumbers@digits,w
  1842     02E4  3E02               	addlw	2
  1843     02E5  0086               	movwf	6
  1844     02E6  0187               	clrf	7
  1845     02E7  3F40               	moviw [0]fsr1
  1846     02E8  00F0               	movwf	showNumber@digit
  1847     02E9  3F41               	moviw [1]fsr1
  1848     02EA  00F1               	movwf	showNumber@digit+1
  1849     02EB  3183  23A9  3182   	fcall	_showNumber
  1850     02EE                     i1l1374:
  1851                           
  1852                           ;funtions.c: 81:         LATAbits.LATA2 = 0;
  1853     02EE  0022               	movlb	2	; select bank2
  1854     02EF  110C               	bcf	12,2	;volatile
  1855     02F0                     i1l1376:
  1856                           
  1857                           ;funtions.c: 82:         LATAbits.LATA3 = 1;
  1858     02F0  158C               	bsf	12,3	;volatile
  1859     02F1                     i1l1378:
  1860                           
  1861                           ;funtions.c: 84:     if(n%3 == 2)
  1862     02F1  3003               	movlw	3
  1863     02F2  00F0               	movwf	___awmod@divisor
  1864     02F3  3000               	movlw	0
  1865     02F4  00F1               	movwf	___awmod@divisor+1
  1866     02F5  0878               	movf	showNumbers@n+1,w
  1867     02F6  00F3               	movwf	___awmod@dividend+1
  1868     02F7  0877               	movf	showNumbers@n,w
  1869     02F8  00F2               	movwf	___awmod@dividend
  1870     02F9  3183  2312  3182   	fcall	___awmod
  1871     02FC  3002               	movlw	2
  1872     02FD  0670               	xorwf	?___awmod,w
  1873     02FE  0471               	iorwf	?___awmod+1,w
  1874     02FF  1D03               	btfss	3,2
  1875     0300  2B02               	goto	u105_21
  1876     0301  2B03               	goto	u105_20
  1877     0302                     u105_21:
  1878     0302  2B11               	goto	i1l81
  1879     0303                     u105_20:
  1880     0303                     i1l1380:
  1881                           
  1882                           ;funtions.c: 85:     {;funtions.c: 86:         showNumber(digits[2]);
  1883     0303  0879               	movf	showNumbers@digits,w
  1884     0304  3E04               	addlw	4
  1885     0305  0086               	movwf	6
  1886     0306  0187               	clrf	7
  1887     0307  3F40               	moviw [0]fsr1
  1888     0308  00F0               	movwf	showNumber@digit
  1889     0309  3F41               	moviw [1]fsr1
  1890     030A  00F1               	movwf	showNumber@digit+1
  1891     030B  3183  23A9  3182   	fcall	_showNumber
  1892     030E                     i1l1382:
  1893                           
  1894                           ;funtions.c: 87:         LATAbits.LATA1 = 0;
  1895     030E  0022               	movlb	2	; select bank2
  1896     030F  108C               	bcf	12,1	;volatile
  1897     0310                     i1l1384:
  1898                           
  1899                           ;funtions.c: 88:         LATAbits.LATA2 = 1;
  1900     0310  150C               	bsf	12,2	;volatile
  1901     0311                     i1l81:
  1902     0311  0008               	return
  1903     0312                     __end_of_showNumbers:
  1904                           
  1905                           	psect	text6
  1906     03A9                     __ptext6:	
  1907 ;; *************** function _showNumber *****************
  1908 ;; Defined at:
  1909 ;;		line 53 in file "funtions.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  digit           2    0[COMMON] int 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1923 ;;      Params:         2       0       0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0
  1925 ;;      Temps:          1       0       0       0       0       0
  1926 ;;      Totals:         3       0       0       0       0       0
  1927 ;;Total ram usage:        3 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_showNumbers
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936     03A9                     _showNumber:	
  1937                           ;psect for function _showNumber
  1938                           
  1939     03A9                     i1l1114:	
  1940                           ;incstack = 0
  1941                           ; Regs used in _showNumber: [wreg+status,2+status,0]
  1942                           
  1943                           
  1944                           ;funtions.c: 53: void showNumber(int digit);funtions.c: 54: {;funtions.c: 55:     LATAbi
      +                          ts.LATA4 = !!(digit & (1<<6));
  1945     03A9  1B70               	btfsc	showNumber@digit,6
  1946     03AA  2BAC               	goto	u58_21
  1947     03AB  2BAF               	goto	u58_20
  1948     03AC                     u58_21:
  1949     03AC  0022               	movlb	2	; select bank2
  1950     03AD  160C               	bsf	12,4	;volatile
  1951     03AE  2BB1               	goto	u59_24
  1952     03AF                     u58_20:
  1953     03AF  0022               	movlb	2	; select bank2
  1954     03B0  120C               	bcf	12,4	;volatile
  1955     03B1                     u59_24:
  1956                           
  1957                           ;funtions.c: 56:     LATAbits.LATA6 = !!(digit & (1<<5));
  1958     03B1  1AF0               	btfsc	showNumber@digit,5
  1959     03B2  2BB4               	goto	u60_21
  1960     03B3  2BB7               	goto	u60_20
  1961     03B4                     u60_21:
  1962     03B4  0022               	movlb	2	; select bank2
  1963     03B5  170C               	bsf	12,6	;volatile
  1964     03B6  2BB9               	goto	u61_24
  1965     03B7                     u60_20:
  1966     03B7  0022               	movlb	2	; select bank2
  1967     03B8  130C               	bcf	12,6	;volatile
  1968     03B9                     u61_24:
  1969                           
  1970                           ;funtions.c: 57:     LATAbits.LATA7 = !!(digit & (1<<4));
  1971     03B9  1A70               	btfsc	showNumber@digit,4
  1972     03BA  2BBC               	goto	u62_21
  1973     03BB  2BBF               	goto	u62_20
  1974     03BC                     u62_21:
  1975     03BC  0022               	movlb	2	; select bank2
  1976     03BD  178C               	bsf	12,7	;volatile
  1977     03BE  2BC1               	goto	u63_24
  1978     03BF                     u62_20:
  1979     03BF  0022               	movlb	2	; select bank2
  1980     03C0  138C               	bcf	12,7	;volatile
  1981     03C1                     u63_24:
  1982                           
  1983                           ;funtions.c: 58:     LATBbits.LATB0 = !!(digit & (1<<3));
  1984     03C1  19F0               	btfsc	showNumber@digit,3
  1985     03C2  2BC4               	goto	u64_21
  1986     03C3  2BC7               	goto	u64_20
  1987     03C4                     u64_21:
  1988     03C4  0022               	movlb	2	; select bank2
  1989     03C5  140D               	bsf	13,0	;volatile
  1990     03C6  2BC9               	goto	u65_24
  1991     03C7                     u64_20:
  1992     03C7  0022               	movlb	2	; select bank2
  1993     03C8  100D               	bcf	13,0	;volatile
  1994     03C9                     u65_24:
  1995                           
  1996                           ;funtions.c: 59:     LATBbits.LATB3 = !!(digit & (1<<2));
  1997     03C9  1970               	btfsc	showNumber@digit,2
  1998     03CA  2BCC               	goto	u66_21
  1999     03CB  2BCF               	goto	u66_20
  2000     03CC                     u66_21:
  2001     03CC  0022               	movlb	2	; select bank2
  2002     03CD  158D               	bsf	13,3	;volatile
  2003     03CE  2BD1               	goto	u67_24
  2004     03CF                     u66_20:
  2005     03CF  0022               	movlb	2	; select bank2
  2006     03D0  118D               	bcf	13,3	;volatile
  2007     03D1                     u67_24:
  2008                           
  2009                           ;funtions.c: 60:     LATBbits.LATB4 = !!(digit & (1<<1));
  2010     03D1  18F0               	btfsc	showNumber@digit,1
  2011     03D2  2BD4               	goto	u68_21
  2012     03D3  2BD7               	goto	u68_20
  2013     03D4                     u68_21:
  2014     03D4  0022               	movlb	2	; select bank2
  2015     03D5  160D               	bsf	13,4	;volatile
  2016     03D6  2BD9               	goto	u69_24
  2017     03D7                     u68_20:
  2018     03D7  0022               	movlb	2	; select bank2
  2019     03D8  120D               	bcf	13,4	;volatile
  2020     03D9                     u69_24:
  2021     03D9                     i1l1116:
  2022                           
  2023                           ;funtions.c: 61:     LATBbits.LATB5 = digit & 1;
  2024     03D9  0870               	movf	showNumber@digit,w
  2025     03DA  3901               	andlw	1
  2026     03DB  00F2               	movwf	??_showNumber
  2027     03DC  0EF2               	swapf	??_showNumber,f
  2028     03DD  0DF2               	rlf	??_showNumber,f
  2029     03DE  080D               	movf	13,w	;volatile
  2030     03DF  0672               	xorwf	??_showNumber,w
  2031     03E0  39DF               	andlw	-33
  2032     03E1  0672               	xorwf	??_showNumber,w
  2033     03E2  008D               	movwf	13	;volatile
  2034     03E3                     i1l75:
  2035     03E3  0008               	return
  2036     03E4                     __end_of_showNumber:
  2037                           
  2038                           	psect	text7
  2039     0312                     __ptext7:	
  2040 ;; *************** function ___awmod *****************
  2041 ;; Defined at:
  2042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  divisor         2    0[COMMON] int 
  2045 ;;  dividend        2    2[COMMON] int 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  sign            1    6[COMMON] unsigned char 
  2048 ;;  counter         1    5[COMMON] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    0[COMMON] int 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2058 ;;      Params:         4       0       0       0       0       0
  2059 ;;      Locals:         2       0       0       0       0       0
  2060 ;;      Temps:          1       0       0       0       0       0
  2061 ;;      Totals:         7       0       0       0       0       0
  2062 ;;Total ram usage:        7 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_showNumbers
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071     0312                     ___awmod:	
  2072                           ;psect for function ___awmod
  2073                           
  2074     0312                     i1l1226:	
  2075                           ;incstack = 0
  2076                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2077                           
  2078     0312  01F6               	clrf	___awmod@sign
  2079     0313                     i1l1228:
  2080     0313  1FF3               	btfss	___awmod@dividend+1,7
  2081     0314  2B16               	goto	u94_21
  2082     0315  2B17               	goto	u94_20
  2083     0316                     u94_21:
  2084     0316  2B1E               	goto	i1l1234
  2085     0317                     u94_20:
  2086     0317                     i1l1230:
  2087     0317  09F2               	comf	___awmod@dividend,f
  2088     0318  09F3               	comf	___awmod@dividend+1,f
  2089     0319  0AF2               	incf	___awmod@dividend,f
  2090     031A  1903               	skipnz
  2091     031B  0AF3               	incf	___awmod@dividend+1,f
  2092     031C                     i1l1232:
  2093     031C  01F6               	clrf	___awmod@sign
  2094     031D  0AF6               	incf	___awmod@sign,f
  2095     031E                     i1l1234:
  2096     031E  1FF1               	btfss	___awmod@divisor+1,7
  2097     031F  2B21               	goto	u95_21
  2098     0320  2B22               	goto	u95_20
  2099     0321                     u95_21:
  2100     0321  2B27               	goto	i1l1238
  2101     0322                     u95_20:
  2102     0322                     i1l1236:
  2103     0322  09F0               	comf	___awmod@divisor,f
  2104     0323  09F1               	comf	___awmod@divisor+1,f
  2105     0324  0AF0               	incf	___awmod@divisor,f
  2106     0325  1903               	skipnz
  2107     0326  0AF1               	incf	___awmod@divisor+1,f
  2108     0327                     i1l1238:
  2109     0327  0870               	movf	___awmod@divisor,w
  2110     0328  0471               	iorwf	___awmod@divisor+1,w
  2111     0329  1903               	btfsc	3,2
  2112     032A  2B2C               	goto	u96_21
  2113     032B  2B2D               	goto	u96_20
  2114     032C                     u96_21:
  2115     032C  2B56               	goto	i1l1256
  2116     032D                     u96_20:
  2117     032D                     i1l1240:
  2118     032D  01F5               	clrf	___awmod@counter
  2119     032E  0AF5               	incf	___awmod@counter,f
  2120     032F  2B39               	goto	i1l1246
  2121     0330                     i1l1242:
  2122     0330  3001               	movlw	1
  2123     0331                     u97_25:
  2124     0331  35F0               	lslf	___awmod@divisor,f
  2125     0332  0DF1               	rlf	___awmod@divisor+1,f
  2126     0333  0B89               	decfsz	9,f
  2127     0334  2B31               	goto	u97_25
  2128     0335                     i1l1244:
  2129     0335  3001               	movlw	1
  2130     0336  00F4               	movwf	??___awmod
  2131     0337  0874               	movf	??___awmod,w
  2132     0338  07F5               	addwf	___awmod@counter,f
  2133     0339                     i1l1246:
  2134     0339  1FF1               	btfss	___awmod@divisor+1,7
  2135     033A  2B3C               	goto	u98_21
  2136     033B  2B3D               	goto	u98_20
  2137     033C                     u98_21:
  2138     033C  2B30               	goto	i1l1242
  2139     033D                     u98_20:
  2140     033D                     i1l1248:
  2141     033D  0871               	movf	___awmod@divisor+1,w
  2142     033E  0273               	subwf	___awmod@dividend+1,w
  2143     033F  1D03               	skipz
  2144     0340  2B43               	goto	u99_25
  2145     0341  0870               	movf	___awmod@divisor,w
  2146     0342  0272               	subwf	___awmod@dividend,w
  2147     0343                     u99_25:
  2148     0343  1C03               	skipc
  2149     0344  2B46               	goto	u99_21
  2150     0345  2B47               	goto	u99_20
  2151     0346                     u99_21:
  2152     0346  2B4B               	goto	i1l1252
  2153     0347                     u99_20:
  2154     0347                     i1l1250:
  2155     0347  0870               	movf	___awmod@divisor,w
  2156     0348  02F2               	subwf	___awmod@dividend,f
  2157     0349  0871               	movf	___awmod@divisor+1,w
  2158     034A  3BF3               	subwfb	___awmod@dividend+1,f
  2159     034B                     i1l1252:
  2160     034B  3001               	movlw	1
  2161     034C                     u100_25:
  2162     034C  36F1               	lsrf	___awmod@divisor+1,f
  2163     034D  0CF0               	rrf	___awmod@divisor,f
  2164     034E  0B89               	decfsz	9,f
  2165     034F  2B4C               	goto	u100_25
  2166     0350                     i1l1254:
  2167     0350  3001               	movlw	1
  2168     0351  02F5               	subwf	___awmod@counter,f
  2169     0352  1D03               	btfss	3,2
  2170     0353  2B55               	goto	u101_21
  2171     0354  2B56               	goto	u101_20
  2172     0355                     u101_21:
  2173     0355  2B3D               	goto	i1l1248
  2174     0356                     u101_20:
  2175     0356                     i1l1256:
  2176     0356  0876               	movf	___awmod@sign,w
  2177     0357  1903               	btfsc	3,2
  2178     0358  2B5A               	goto	u102_21
  2179     0359  2B5B               	goto	u102_20
  2180     035A                     u102_21:
  2181     035A  2B60               	goto	i1l1260
  2182     035B                     u102_20:
  2183     035B                     i1l1258:
  2184     035B  09F2               	comf	___awmod@dividend,f
  2185     035C  09F3               	comf	___awmod@dividend+1,f
  2186     035D  0AF2               	incf	___awmod@dividend,f
  2187     035E  1903               	skipnz
  2188     035F  0AF3               	incf	___awmod@dividend+1,f
  2189     0360                     i1l1260:
  2190     0360  0873               	movf	___awmod@dividend+1,w
  2191     0361  00F1               	movwf	?___awmod+1
  2192     0362  0872               	movf	___awmod@dividend,w
  2193     0363  00F0               	movwf	?___awmod
  2194     0364                     i1l470:
  2195     0364  0008               	return
  2196     0365                     __end_of___awmod:
  2197                           
  2198                           	psect	text8
  2199     03E4                     __ptext8:	
  2200 ;; *************** function _seg7 *****************
  2201 ;; Defined at:
  2202 ;;		line 25 in file "funtions.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  iBCD            1    wreg     PTR const int 
  2205 ;;		 -> BinTOBcd@r(6), 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  iBCD            1   20[BANK0 ] PTR const int 
  2208 ;;		 -> BinTOBcd@r(6), 
  2209 ;;  numbers        20    0[BANK0 ] int [10]
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      PTR int 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2219 ;;      Params:         0       0       0       0       0       0
  2220 ;;      Locals:         0      21       0       0       0       0
  2221 ;;      Temps:          1       0       0       0       0       0
  2222 ;;      Totals:         1      21       0       0       0       0
  2223 ;;Total ram usage:       22 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_INT_TMR0
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232     03E4                     _seg7:	
  2233                           ;psect for function _seg7
  2234                           
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in _seg7: [wreg-fsr1h+status,2+status,0]
  2238                           ;seg7@iBCD stored from wreg
  2239     03E4  0020               	movlb	0	; select bank0
  2240     03E5  00B4               	movwf	seg7@iBCD
  2241     03E6                     i1l1392:
  2242                           
  2243                           ;funtions.c: 25: int* seg7(const int * iBCD);funtions.c: 26: {;funtions.c: 28:     int n
      +                          umbers[10] = {
  2244     03E6  30A0               	movlw	low seg7@F2503
  2245     03E7  0086               	movwf	6
  2246     03E8  3000               	movlw	high seg7@F2503
  2247     03E9  0087               	movwf	7
  2248     03EA  3020               	movlw	low seg7@numbers
  2249     03EB  0084               	movwf	4
  2250     03EC  3000               	movlw	high seg7@numbers
  2251     03ED  0085               	movwf	5
  2252     03EE  3014               	movlw	20
  2253     03EF  00F0               	movwf	??_seg7
  2254     03F0                     u106_20:
  2255     03F0  0016               	moviw fsr1++
  2256     03F1  001A               	movwi fsr0++
  2257     03F2  0BF0               	decfsz	??_seg7,f
  2258     03F3  2BF0               	goto	u106_20
  2259     03F4                     i1l1394:
  2260                           
  2261                           ;funtions.c: 42:     static int r[3];;funtions.c: 43:     r[0] = numbers[iBCD[0]];
  2262     03F4  0834               	movf	seg7@iBCD,w
  2263     03F5  0086               	movwf	6
  2264     03F6  0187               	clrf	7
  2265     03F7  3501               	lslf	1,w
  2266     03F8  3E20               	addlw	(low (seg7@numbers| 0))& (0+255)
  2267     03F9  0086               	movwf	6
  2268     03FA  0187               	clrf	7
  2269     03FB  3F40               	moviw [0]fsr1
  2270     03FC  00D4               	movwf	seg7@r
  2271     03FD  3F41               	moviw [1]fsr1
  2272     03FE  00D5               	movwf	seg7@r+1
  2273     03FF                     i1l1396:
  2274                           
  2275                           ;funtions.c: 44:     r[1] = numbers[iBCD[1]];
  2276     03FF  0834               	movf	seg7@iBCD,w
  2277     0400  3E02               	addlw	2
  2278     0401  0086               	movwf	6
  2279     0402  0187               	clrf	7
  2280     0403  3501               	lslf	1,w
  2281     0404  3E20               	addlw	(low (seg7@numbers| 0))& (0+255)
  2282     0405  0086               	movwf	6
  2283     0406  0187               	clrf	7
  2284     0407  3F40               	moviw [0]fsr1
  2285     0408  00D6               	movwf	seg7@r+2
  2286     0409  3F41               	moviw [1]fsr1
  2287     040A  00D7               	movwf	seg7@r+3
  2288     040B                     i1l1398:
  2289                           
  2290                           ;funtions.c: 45:     r[2] = numbers[iBCD[2]];
  2291     040B  0834               	movf	seg7@iBCD,w
  2292     040C  3E04               	addlw	4
  2293     040D  0086               	movwf	6
  2294     040E  0187               	clrf	7
  2295     040F  3501               	lslf	1,w
  2296     0410  3E20               	addlw	(low (seg7@numbers| 0))& (0+255)
  2297     0411  0086               	movwf	6
  2298     0412  0187               	clrf	7
  2299     0413  3F40               	moviw [0]fsr1
  2300     0414  00D8               	movwf	seg7@r+4
  2301     0415  3F41               	moviw [1]fsr1
  2302     0416  00D9               	movwf	seg7@r+5
  2303     0417                     i1l1400:
  2304                           
  2305                           ;funtions.c: 47:     return r;
  2306     0417  3054               	movlw	(low (seg7@r| 0))& (0+255)
  2307     0418                     i1l72:
  2308     0418  0008               	return
  2309     0419                     __end_of_seg7:
  2310                           
  2311                           	psect	text9
  2312     04A3                     __ptext9:	
  2313 ;; *************** function _readADC *****************
  2314 ;; Defined at:
  2315 ;;		line 95 in file "funtions.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;		None
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2329 ;;      Params:         0       0       0       0       0       0
  2330 ;;      Locals:         0       0       0       0       0       0
  2331 ;;      Temps:          0       0       0       0       0       0
  2332 ;;      Totals:         0       0       0       0       0       0
  2333 ;;Total ram usage:        0 bytes
  2334 ;; Hardware stack levels used: 1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_INT_TMR0
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342     04A3                     _readADC:	
  2343                           ;psect for function _readADC
  2344                           
  2345     04A3                     i1l1354:	
  2346                           ;incstack = 0
  2347                           ; Regs used in _readADC: [wreg+status,2+status,0]
  2348                           
  2349                           
  2350                           ;funtions.c: 97:     ADCON0bits.ADON = 1;
  2351     04A3  0021               	movlb	1	; select bank1
  2352     04A4  141D               	bsf	29,0	;volatile
  2353     04A5                     i1l1356:
  2354                           
  2355                           ;funtions.c: 99:     ADCON1bits.ADCS = 0b001;
  2356     04A5  081E               	movf	30,w	;volatile
  2357     04A6  398F               	andlw	-113
  2358     04A7  3810               	iorlw	16
  2359     04A8  009E               	movwf	30	;volatile
  2360                           
  2361                           ;funtions.c: 101:     ADCON0bits.CHS = 0b00000;
  2362     04A9  3083               	movlw	-125
  2363     04AA  059D               	andwf	29,f	;volatile
  2364     04AB                     i1l1358:
  2365                           
  2366                           ;funtions.c: 103:     ADCON1bits.ADFM = 1;
  2367     04AB  179E               	bsf	30,7	;volatile
  2368     04AC                     i1l1360:
  2369                           
  2370                           ;funtions.c: 105:     ADCON0bits.GO_nDONE = 1;
  2371     04AC  149D               	bsf	29,1	;volatile
  2372     04AD                     i1l84:
  2373     04AD  0008               	return
  2374     04AE                     __end_of_readADC:
  2375                           
  2376                           	psect	text10
  2377     044C                     __ptext10:	
  2378 ;; *************** function _UART_print *****************
  2379 ;; Defined at:
  2380 ;;		line 124 in file "funtions.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  cadena          1    wreg     PTR unsigned char 
  2383 ;;		 -> ASCII_Con@r(7), 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  cadena          1    2[COMMON] PTR unsigned char 
  2386 ;;		 -> ASCII_Con@r(7), 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2396 ;;      Params:         0       0       0       0       0       0
  2397 ;;      Locals:         1       0       0       0       0       0
  2398 ;;      Temps:          1       0       0       0       0       0
  2399 ;;      Totals:         2       0       0       0       0       0
  2400 ;;Total ram usage:        2 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; Hardware stack levels required when called: 1
  2403 ;; This function calls:
  2404 ;;		_UART_write
  2405 ;; This function is called by:
  2406 ;;		_INT_TMR0
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410     044C                     _UART_print:	
  2411                           ;psect for function _UART_print
  2412                           
  2413                           
  2414                           ;incstack = 0
  2415                           ; Regs used in _UART_print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2416                           ;UART_print@cadena stored from wreg
  2417     044C  00F2               	movwf	UART_print@cadena
  2418     044D                     i1l1422:
  2419                           
  2420                           ;funtions.c: 124: void UART_print(unsigned char* cadena);funtions.c: 125: {;funtions.c: 
      +                          126:     while(*cadena != 0)
  2421     044D  2C59               	goto	i1l1428
  2422     044E                     i1l1424:
  2423                           
  2424                           ;funtions.c: 127:     {;funtions.c: 128:         UART_write(*cadena);
  2425     044E  0872               	movf	UART_print@cadena,w
  2426     044F  0086               	movwf	6
  2427     0450  0187               	clrf	7
  2428     0451  0801               	movf	1,w
  2429     0452  3184  24AE  3184   	fcall	_UART_write
  2430     0455                     i1l1426:
  2431                           
  2432                           ;funtions.c: 129:         cadena++;
  2433     0455  3001               	movlw	1
  2434     0456  00F1               	movwf	??_UART_print
  2435     0457  0871               	movf	??_UART_print,w
  2436     0458  07F2               	addwf	UART_print@cadena,f
  2437     0459                     i1l1428:
  2438                           
  2439                           ;funtions.c: 126:     while(*cadena != 0)
  2440     0459  0872               	movf	UART_print@cadena,w
  2441     045A  0086               	movwf	6
  2442     045B  0187               	clrf	7
  2443     045C  0801               	movf	1,w
  2444     045D  1D03               	btfss	3,2
  2445     045E  2C60               	goto	u107_21
  2446     045F  2C61               	goto	u107_20
  2447     0460                     u107_21:
  2448     0460  2C4E               	goto	i1l1424
  2449     0461                     u107_20:
  2450     0461                     i1l96:
  2451     0461  0008               	return
  2452     0462                     __end_of_UART_print:
  2453                           
  2454                           	psect	text11
  2455     04AE                     __ptext11:	
  2456 ;; *************** function _UART_write *****************
  2457 ;; Defined at:
  2458 ;;		line 118 in file "funtions.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  c               1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  c               1    0[COMMON] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2472 ;;      Params:         0       0       0       0       0       0
  2473 ;;      Locals:         1       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0
  2475 ;;      Totals:         1       0       0       0       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_UART_print
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485     04AE                     _UART_write:	
  2486                           ;psect for function _UART_write
  2487                           
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _UART_write: [wreg]
  2491                           ;UART_write@c stored from wreg
  2492     04AE  00F0               	movwf	UART_write@c
  2493     04AF                     i1l1118:
  2494                           
  2495                           ;funtions.c: 118: void UART_write(char c);funtions.c: 119: {;funtions.c: 120:     TXREG 
      +                          = c;
  2496     04AF  0870               	movf	UART_write@c,w
  2497     04B0  0023               	movlb	3	; select bank3
  2498     04B1  009A               	movwf	26	;volatile
  2499     04B2                     i1l87:	
  2500                           ;funtions.c: 121:     while(TXSTAbits.TRMT == 0);
  2501                           
  2502     04B2  1C9E               	btfss	30,1	;volatile
  2503     04B3  2CB5               	goto	u70_21
  2504     04B4  2CB6               	goto	u70_20
  2505     04B5                     u70_21:
  2506     04B5  2CB2               	goto	i1l87
  2507     04B6                     u70_20:
  2508     04B6                     i1l90:
  2509     04B6  0008               	return
  2510     04B7                     __end_of_UART_write:
  2511                           
  2512                           	psect	text12
  2513     00A4                     __ptext12:	
  2514 ;; *************** function _BinTOBcd *****************
  2515 ;; Defined at:
  2516 ;;		line 11 in file "funtions.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  iADC            4   24[BANK0 ] long 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      PTR int 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, pclath, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2530 ;;      Params:         0       4       0       0       0       0
  2531 ;;      Locals:         0       8       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0
  2533 ;;      Totals:         0      12       0       0       0       0
  2534 ;;Total ram usage:       12 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 1
  2537 ;; This function calls:
  2538 ;;		___aldiv
  2539 ;;		___almod
  2540 ;;		___lmul
  2541 ;; This function is called by:
  2542 ;;		_INT_TMR0
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546     00A4                     _BinTOBcd:	
  2547                           ;psect for function _BinTOBcd
  2548                           
  2549     00A4                     i1l1386:	
  2550                           ;incstack = 0
  2551                           ; Regs used in _BinTOBcd: [wreg+status,2+status,0+pclath+cstack]
  2552                           
  2553                           
  2554                           ;funtions.c: 11: int* BinTOBcd(long iADC);funtions.c: 12: {;funtions.c: 14:     static i
      +                          nt r[3];;funtions.c: 15:     r[0] = ((iADC*1000)/1024)%10;
  2555     00A4  3000               	movlw	0
  2556     00A5  0020               	movlb	0	; select bank0
  2557     00A6  00B1               	movwf	___almod@divisor+3
  2558     00A7  3000               	movlw	0
  2559     00A8  00B0               	movwf	___almod@divisor+2
  2560     00A9  3000               	movlw	0
  2561     00AA  00AF               	movwf	___almod@divisor+1
  2562     00AB  300A               	movlw	10
  2563     00AC  00AE               	movwf	___almod@divisor
  2564     00AD  3000               	movlw	0
  2565     00AE  00A3               	movwf	___aldiv@divisor+3
  2566     00AF  3000               	movlw	0
  2567     00B0  00A2               	movwf	___aldiv@divisor+2
  2568     00B1  3004               	movlw	4
  2569     00B2  00A1               	movwf	___aldiv@divisor+1
  2570     00B3  3000               	movlw	0
  2571     00B4  00A0               	movwf	___aldiv@divisor
  2572     00B5  083B               	movf	BinTOBcd@iADC+3,w
  2573     00B6  00F3               	movwf	___lmul@multiplier+3
  2574     00B7  083A               	movf	BinTOBcd@iADC+2,w
  2575     00B8  00F2               	movwf	___lmul@multiplier+2
  2576     00B9  0839               	movf	BinTOBcd@iADC+1,w
  2577     00BA  00F1               	movwf	___lmul@multiplier+1
  2578     00BB  0838               	movf	BinTOBcd@iADC,w
  2579     00BC  00F0               	movwf	___lmul@multiplier
  2580     00BD  3000               	movlw	0
  2581     00BE  00F7               	movwf	___lmul@multiplicand+3
  2582     00BF  3000               	movlw	0
  2583     00C0  00F6               	movwf	___lmul@multiplicand+2
  2584     00C1  3003               	movlw	3
  2585     00C2  00F5               	movwf	___lmul@multiplicand+1
  2586     00C3  30E8               	movlw	232
  2587     00C4  00F4               	movwf	___lmul@multiplicand
  2588     00C5  3184  2419  3180   	fcall	___lmul
  2589     00C8  0873               	movf	?___lmul+3,w
  2590     00C9  0020               	movlb	0	; select bank0
  2591     00CA  00A7               	movwf	___aldiv@dividend+3
  2592     00CB  0872               	movf	?___lmul+2,w
  2593     00CC  00A6               	movwf	___aldiv@dividend+2
  2594     00CD  0871               	movf	?___lmul+1,w
  2595     00CE  00A5               	movwf	___aldiv@dividend+1
  2596     00CF  0870               	movf	?___lmul,w
  2597     00D0  00A4               	movwf	___aldiv@dividend
  2598     00D1  3181  21A7  3180   	fcall	___aldiv
  2599     00D4  0020               	movlb	0	; select bank0
  2600     00D5  0823               	movf	?___aldiv+3,w
  2601     00D6  00B5               	movwf	___almod@dividend+3
  2602     00D7  0822               	movf	?___aldiv+2,w
  2603     00D8  00B4               	movwf	___almod@dividend+2
  2604     00D9  0821               	movf	?___aldiv+1,w
  2605     00DA  00B3               	movwf	___almod@dividend+1
  2606     00DB  0820               	movf	?___aldiv,w
  2607     00DC  00B2               	movwf	___almod@dividend
  2608     00DD  3182  2237  3180   	fcall	___almod
  2609     00E0  0020               	movlb	0	; select bank0
  2610     00E1  082F               	movf	?___almod+1,w
  2611     00E2  00DB               	movwf	BinTOBcd@r+1
  2612     00E3  082E               	movf	?___almod,w
  2613     00E4  00DA               	movwf	BinTOBcd@r
  2614                           
  2615                           ;funtions.c: 16:     r[1] = (((iADC*1000)/1024)/10)%10;
  2616     00E5  3000               	movlw	0
  2617     00E6  00A3               	movwf	___aldiv@divisor+3
  2618     00E7  3000               	movlw	0
  2619     00E8  00A2               	movwf	___aldiv@divisor+2
  2620     00E9  3004               	movlw	4
  2621     00EA  00A1               	movwf	___aldiv@divisor+1
  2622     00EB  3000               	movlw	0
  2623     00EC  00A0               	movwf	___aldiv@divisor
  2624     00ED  083B               	movf	BinTOBcd@iADC+3,w
  2625     00EE  00F3               	movwf	___lmul@multiplier+3
  2626     00EF  083A               	movf	BinTOBcd@iADC+2,w
  2627     00F0  00F2               	movwf	___lmul@multiplier+2
  2628     00F1  0839               	movf	BinTOBcd@iADC+1,w
  2629     00F2  00F1               	movwf	___lmul@multiplier+1
  2630     00F3  0838               	movf	BinTOBcd@iADC,w
  2631     00F4  00F0               	movwf	___lmul@multiplier
  2632     00F5  3000               	movlw	0
  2633     00F6  00F7               	movwf	___lmul@multiplicand+3
  2634     00F7  3000               	movlw	0
  2635     00F8  00F6               	movwf	___lmul@multiplicand+2
  2636     00F9  3003               	movlw	3
  2637     00FA  00F5               	movwf	___lmul@multiplicand+1
  2638     00FB  30E8               	movlw	232
  2639     00FC  00F4               	movwf	___lmul@multiplicand
  2640     00FD  3184  2419  3180   	fcall	___lmul
  2641     0100  0873               	movf	?___lmul+3,w
  2642     0101  0020               	movlb	0	; select bank0
  2643     0102  00A7               	movwf	___aldiv@dividend+3
  2644     0103  0872               	movf	?___lmul+2,w
  2645     0104  00A6               	movwf	___aldiv@dividend+2
  2646     0105  0871               	movf	?___lmul+1,w
  2647     0106  00A5               	movwf	___aldiv@dividend+1
  2648     0107  0870               	movf	?___lmul,w
  2649     0108  00A4               	movwf	___aldiv@dividend
  2650     0109  3181  21A7  3180   	fcall	___aldiv
  2651     010C  0020               	movlb	0	; select bank0
  2652     010D  0823               	movf	?___aldiv+3,w
  2653     010E  00C3               	movwf	_BinTOBcd$1428+3
  2654     010F  0822               	movf	?___aldiv+2,w
  2655     0110  00C2               	movwf	_BinTOBcd$1428+2
  2656     0111  0821               	movf	?___aldiv+1,w
  2657     0112  00C1               	movwf	_BinTOBcd$1428+1
  2658     0113  0820               	movf	?___aldiv,w
  2659     0114  00C0               	movwf	_BinTOBcd$1428
  2660                           
  2661                           ;funtions.c: 16:     r[1] = (((iADC*1000)/1024)/10)%10;
  2662     0115  3000               	movlw	0
  2663     0116  00B1               	movwf	___almod@divisor+3
  2664     0117  3000               	movlw	0
  2665     0118  00B0               	movwf	___almod@divisor+2
  2666     0119  3000               	movlw	0
  2667     011A  00AF               	movwf	___almod@divisor+1
  2668     011B  300A               	movlw	10
  2669     011C  00AE               	movwf	___almod@divisor
  2670     011D  3000               	movlw	0
  2671     011E  00A3               	movwf	___aldiv@divisor+3
  2672     011F  3000               	movlw	0
  2673     0120  00A2               	movwf	___aldiv@divisor+2
  2674     0121  3000               	movlw	0
  2675     0122  00A1               	movwf	___aldiv@divisor+1
  2676     0123  300A               	movlw	10
  2677     0124  00A0               	movwf	___aldiv@divisor
  2678     0125  0843               	movf	_BinTOBcd$1428+3,w
  2679     0126  00A7               	movwf	___aldiv@dividend+3
  2680     0127  0842               	movf	_BinTOBcd$1428+2,w
  2681     0128  00A6               	movwf	___aldiv@dividend+2
  2682     0129  0841               	movf	_BinTOBcd$1428+1,w
  2683     012A  00A5               	movwf	___aldiv@dividend+1
  2684     012B  0840               	movf	_BinTOBcd$1428,w
  2685     012C  00A4               	movwf	___aldiv@dividend
  2686     012D  3181  21A7  3180   	fcall	___aldiv
  2687     0130  0020               	movlb	0	; select bank0
  2688     0131  0823               	movf	?___aldiv+3,w
  2689     0132  00B5               	movwf	___almod@dividend+3
  2690     0133  0822               	movf	?___aldiv+2,w
  2691     0134  00B4               	movwf	___almod@dividend+2
  2692     0135  0821               	movf	?___aldiv+1,w
  2693     0136  00B3               	movwf	___almod@dividend+1
  2694     0137  0820               	movf	?___aldiv,w
  2695     0138  00B2               	movwf	___almod@dividend
  2696     0139  3182  2237  3180   	fcall	___almod
  2697     013C  0020               	movlb	0	; select bank0
  2698     013D  082F               	movf	?___almod+1,w
  2699     013E  00DD               	movwf	BinTOBcd@r+3
  2700     013F  082E               	movf	?___almod,w
  2701     0140  00DC               	movwf	BinTOBcd@r+2
  2702                           
  2703                           ;funtions.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  2704     0141  3000               	movlw	0
  2705     0142  00A3               	movwf	___aldiv@divisor+3
  2706     0143  3000               	movlw	0
  2707     0144  00A2               	movwf	___aldiv@divisor+2
  2708     0145  3004               	movlw	4
  2709     0146  00A1               	movwf	___aldiv@divisor+1
  2710     0147  3000               	movlw	0
  2711     0148  00A0               	movwf	___aldiv@divisor
  2712     0149  083B               	movf	BinTOBcd@iADC+3,w
  2713     014A  00F3               	movwf	___lmul@multiplier+3
  2714     014B  083A               	movf	BinTOBcd@iADC+2,w
  2715     014C  00F2               	movwf	___lmul@multiplier+2
  2716     014D  0839               	movf	BinTOBcd@iADC+1,w
  2717     014E  00F1               	movwf	___lmul@multiplier+1
  2718     014F  0838               	movf	BinTOBcd@iADC,w
  2719     0150  00F0               	movwf	___lmul@multiplier
  2720     0151  3000               	movlw	0
  2721     0152  00F7               	movwf	___lmul@multiplicand+3
  2722     0153  3000               	movlw	0
  2723     0154  00F6               	movwf	___lmul@multiplicand+2
  2724     0155  3003               	movlw	3
  2725     0156  00F5               	movwf	___lmul@multiplicand+1
  2726     0157  30E8               	movlw	232
  2727     0158  00F4               	movwf	___lmul@multiplicand
  2728     0159  3184  2419  3180   	fcall	___lmul
  2729     015C  0873               	movf	?___lmul+3,w
  2730     015D  0020               	movlb	0	; select bank0
  2731     015E  00A7               	movwf	___aldiv@dividend+3
  2732     015F  0872               	movf	?___lmul+2,w
  2733     0160  00A6               	movwf	___aldiv@dividend+2
  2734     0161  0871               	movf	?___lmul+1,w
  2735     0162  00A5               	movwf	___aldiv@dividend+1
  2736     0163  0870               	movf	?___lmul,w
  2737     0164  00A4               	movwf	___aldiv@dividend
  2738     0165  3181  21A7  3180   	fcall	___aldiv
  2739     0168  0020               	movlb	0	; select bank0
  2740     0169  0823               	movf	?___aldiv+3,w
  2741     016A  00C3               	movwf	_BinTOBcd$1428+3
  2742     016B  0822               	movf	?___aldiv+2,w
  2743     016C  00C2               	movwf	_BinTOBcd$1428+2
  2744     016D  0821               	movf	?___aldiv+1,w
  2745     016E  00C1               	movwf	_BinTOBcd$1428+1
  2746     016F  0820               	movf	?___aldiv,w
  2747     0170  00C0               	movwf	_BinTOBcd$1428
  2748                           
  2749                           ;funtions.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  2750     0171  3000               	movlw	0
  2751     0172  00A3               	movwf	___aldiv@divisor+3
  2752     0173  3000               	movlw	0
  2753     0174  00A2               	movwf	___aldiv@divisor+2
  2754     0175  3000               	movlw	0
  2755     0176  00A1               	movwf	___aldiv@divisor+1
  2756     0177  300A               	movlw	10
  2757     0178  00A0               	movwf	___aldiv@divisor
  2758     0179  0843               	movf	_BinTOBcd$1428+3,w
  2759     017A  00A7               	movwf	___aldiv@dividend+3
  2760     017B  0842               	movf	_BinTOBcd$1428+2,w
  2761     017C  00A6               	movwf	___aldiv@dividend+2
  2762     017D  0841               	movf	_BinTOBcd$1428+1,w
  2763     017E  00A5               	movwf	___aldiv@dividend+1
  2764     017F  0840               	movf	_BinTOBcd$1428,w
  2765     0180  00A4               	movwf	___aldiv@dividend
  2766     0181  3181  21A7  3180   	fcall	___aldiv
  2767     0184  0020               	movlb	0	; select bank0
  2768     0185  0823               	movf	?___aldiv+3,w
  2769     0186  00BF               	movwf	_BinTOBcd$1429+3
  2770     0187  0822               	movf	?___aldiv+2,w
  2771     0188  00BE               	movwf	_BinTOBcd$1429+2
  2772     0189  0821               	movf	?___aldiv+1,w
  2773     018A  00BD               	movwf	_BinTOBcd$1429+1
  2774     018B  0820               	movf	?___aldiv,w
  2775     018C  00BC               	movwf	_BinTOBcd$1429
  2776                           
  2777                           ;funtions.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  2778     018D  3000               	movlw	0
  2779     018E  00A3               	movwf	___aldiv@divisor+3
  2780     018F  3000               	movlw	0
  2781     0190  00A2               	movwf	___aldiv@divisor+2
  2782     0191  3000               	movlw	0
  2783     0192  00A1               	movwf	___aldiv@divisor+1
  2784     0193  300A               	movlw	10
  2785     0194  00A0               	movwf	___aldiv@divisor
  2786     0195  083F               	movf	_BinTOBcd$1429+3,w
  2787     0196  00A7               	movwf	___aldiv@dividend+3
  2788     0197  083E               	movf	_BinTOBcd$1429+2,w
  2789     0198  00A6               	movwf	___aldiv@dividend+2
  2790     0199  083D               	movf	_BinTOBcd$1429+1,w
  2791     019A  00A5               	movwf	___aldiv@dividend+1
  2792     019B  083C               	movf	_BinTOBcd$1429,w
  2793     019C  00A4               	movwf	___aldiv@dividend
  2794     019D  3181  21A7  3180   	fcall	___aldiv
  2795     01A0  0020               	movlb	0	; select bank0
  2796     01A1  0821               	movf	?___aldiv+1,w
  2797     01A2  00DF               	movwf	BinTOBcd@r+5
  2798     01A3  0820               	movf	?___aldiv,w
  2799     01A4  00DE               	movwf	BinTOBcd@r+4
  2800     01A5                     i1l1388:
  2801                           
  2802                           ;funtions.c: 19:     return r;
  2803     01A5  305A               	movlw	(low (BinTOBcd@r| 0))& (0+255)
  2804     01A6                     i1l65:
  2805     01A6  0008               	return
  2806     01A7                     __end_of_BinTOBcd:
  2807                           
  2808                           	psect	text13
  2809     0419                     __ptext13:	
  2810 ;; *************** function ___lmul *****************
  2811 ;; Defined at:
  2812 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  multiplier      4    0[COMMON] unsigned long 
  2815 ;;  multiplicand    4    4[COMMON] unsigned long 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  product         4    8[COMMON] unsigned long 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  4    0[COMMON] unsigned long 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2827 ;;      Params:         8       0       0       0       0       0
  2828 ;;      Locals:         4       0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0
  2830 ;;      Totals:        12       0       0       0       0       0
  2831 ;;Total ram usage:       12 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_BinTOBcd
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840     0419                     ___lmul:	
  2841                           ;psect for function ___lmul
  2842                           
  2843     0419                     i1l1140:	
  2844                           ;incstack = 0
  2845                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2846                           
  2847     0419  3000               	movlw	0
  2848     041A  00FB               	movwf	___lmul@product+3
  2849     041B  3000               	movlw	0
  2850     041C  00FA               	movwf	___lmul@product+2
  2851     041D  3000               	movlw	0
  2852     041E  00F9               	movwf	___lmul@product+1
  2853     041F  3000               	movlw	0
  2854     0420  00F8               	movwf	___lmul@product
  2855     0421                     i1l1142:
  2856     0421  1C70               	btfss	___lmul@multiplier,0
  2857     0422  2C24               	goto	u71_21
  2858     0423  2C25               	goto	u71_20
  2859     0424                     u71_21:
  2860     0424  2C2D               	goto	i1l1146
  2861     0425                     u71_20:
  2862     0425                     i1l1144:
  2863     0425  0874               	movf	___lmul@multiplicand,w
  2864     0426  07F8               	addwf	___lmul@product,f
  2865     0427  0875               	movf	___lmul@multiplicand+1,w
  2866     0428  3DF9               	addwfc	___lmul@product+1,f
  2867     0429  0876               	movf	___lmul@multiplicand+2,w
  2868     042A  3DFA               	addwfc	___lmul@product+2,f
  2869     042B  0877               	movf	___lmul@multiplicand+3,w
  2870     042C  3DFB               	addwfc	___lmul@product+3,f
  2871     042D                     i1l1146:
  2872     042D  3001               	movlw	1
  2873     042E                     u72_25:
  2874     042E  35F4               	lslf	___lmul@multiplicand,f
  2875     042F  0DF5               	rlf	___lmul@multiplicand+1,f
  2876     0430  0DF6               	rlf	___lmul@multiplicand+2,f
  2877     0431  0DF7               	rlf	___lmul@multiplicand+3,f
  2878     0432  0B89               	decfsz	9,f
  2879     0433  2C2E               	goto	u72_25
  2880     0434                     i1l1148:
  2881     0434  3001               	movlw	1
  2882     0435                     u73_25:
  2883     0435  36F3               	lsrf	___lmul@multiplier+3,f
  2884     0436  0CF2               	rrf	___lmul@multiplier+2,f
  2885     0437  0CF1               	rrf	___lmul@multiplier+1,f
  2886     0438  0CF0               	rrf	___lmul@multiplier,f
  2887     0439  0B89               	decfsz	9,f
  2888     043A  2C35               	goto	u73_25
  2889     043B  0873               	movf	___lmul@multiplier+3,w
  2890     043C  0472               	iorwf	___lmul@multiplier+2,w
  2891     043D  0471               	iorwf	___lmul@multiplier+1,w
  2892     043E  0470               	iorwf	___lmul@multiplier,w
  2893     043F  1D03               	skipz
  2894     0440  2C42               	goto	u74_21
  2895     0441  2C43               	goto	u74_20
  2896     0442                     u74_21:
  2897     0442  2C21               	goto	i1l1142
  2898     0443                     u74_20:
  2899     0443                     i1l1150:
  2900     0443  087B               	movf	___lmul@product+3,w
  2901     0444  00F3               	movwf	?___lmul+3
  2902     0445  087A               	movf	___lmul@product+2,w
  2903     0446  00F2               	movwf	?___lmul+2
  2904     0447  0879               	movf	___lmul@product+1,w
  2905     0448  00F1               	movwf	?___lmul+1
  2906     0449  0878               	movf	___lmul@product,w
  2907     044A  00F0               	movwf	?___lmul
  2908     044B                     i1l318:
  2909     044B  0008               	return
  2910     044C                     __end_of___lmul:
  2911                           
  2912                           	psect	text14
  2913     0237                     __ptext14:	
  2914 ;; *************** function ___almod *****************
  2915 ;; Defined at:
  2916 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\almod.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  divisor         4   14[BANK0 ] long 
  2919 ;;  dividend        4   18[BANK0 ] long 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  sign            1   23[BANK0 ] unsigned char 
  2922 ;;  counter         1   22[BANK0 ] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  4   14[BANK0 ] long 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2932 ;;      Params:         0       8       0       0       0       0
  2933 ;;      Locals:         0       2       0       0       0       0
  2934 ;;      Temps:          1       0       0       0       0       0
  2935 ;;      Totals:         1      10       0       0       0       0
  2936 ;;Total ram usage:       11 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_BinTOBcd
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945     0237                     ___almod:	
  2946                           ;psect for function ___almod
  2947                           
  2948     0237                     i1l1194:	
  2949                           ;incstack = 0
  2950                           ; Regs used in ___almod: [wreg+status,2+status,0]
  2951                           
  2952     0237  0020               	movlb	0	; select bank0
  2953     0238  01B7               	clrf	___almod@sign
  2954     0239                     i1l1196:
  2955     0239  1FB5               	btfss	___almod@dividend+3,7
  2956     023A  2A3C               	goto	u85_21
  2957     023B  2A3D               	goto	u85_20
  2958     023C                     u85_21:
  2959     023C  2A4A               	goto	i1l382
  2960     023D                     u85_20:
  2961     023D                     i1l1198:
  2962     023D  09B2               	comf	___almod@dividend,f
  2963     023E  09B3               	comf	___almod@dividend+1,f
  2964     023F  09B4               	comf	___almod@dividend+2,f
  2965     0240  09B5               	comf	___almod@dividend+3,f
  2966     0241  0AB2               	incf	___almod@dividend,f
  2967     0242  1903               	skipnz
  2968     0243  0AB3               	incf	___almod@dividend+1,f
  2969     0244  1903               	skipnz
  2970     0245  0AB4               	incf	___almod@dividend+2,f
  2971     0246  1903               	skipnz
  2972     0247  0AB5               	incf	___almod@dividend+3,f
  2973     0248  01B7               	clrf	___almod@sign
  2974     0249  0AB7               	incf	___almod@sign,f
  2975     024A                     i1l382:
  2976     024A  1FB1               	btfss	___almod@divisor+3,7
  2977     024B  2A4D               	goto	u86_21
  2978     024C  2A4E               	goto	u86_20
  2979     024D                     u86_21:
  2980     024D  2A59               	goto	i1l1202
  2981     024E                     u86_20:
  2982     024E                     i1l1200:
  2983     024E  09AE               	comf	___almod@divisor,f
  2984     024F  09AF               	comf	___almod@divisor+1,f
  2985     0250  09B0               	comf	___almod@divisor+2,f
  2986     0251  09B1               	comf	___almod@divisor+3,f
  2987     0252  0AAE               	incf	___almod@divisor,f
  2988     0253  1903               	skipnz
  2989     0254  0AAF               	incf	___almod@divisor+1,f
  2990     0255  1903               	skipnz
  2991     0256  0AB0               	incf	___almod@divisor+2,f
  2992     0257  1903               	skipnz
  2993     0258  0AB1               	incf	___almod@divisor+3,f
  2994     0259                     i1l1202:
  2995     0259  0831               	movf	___almod@divisor+3,w
  2996     025A  0430               	iorwf	___almod@divisor+2,w
  2997     025B  042F               	iorwf	___almod@divisor+1,w
  2998     025C  042E               	iorwf	___almod@divisor,w
  2999     025D  1903               	skipnz
  3000     025E  2A60               	goto	u87_21
  3001     025F  2A61               	goto	u87_20
  3002     0260                     u87_21:
  3003     0260  2A9A               	goto	i1l1218
  3004     0261                     u87_20:
  3005     0261                     i1l1204:
  3006     0261  01B6               	clrf	___almod@counter
  3007     0262  0AB6               	incf	___almod@counter,f
  3008     0263  2A6F               	goto	i1l1208
  3009     0264                     i1l1206:
  3010     0264  3001               	movlw	1
  3011     0265                     u88_25:
  3012     0265  35AE               	lslf	___almod@divisor,f
  3013     0266  0DAF               	rlf	___almod@divisor+1,f
  3014     0267  0DB0               	rlf	___almod@divisor+2,f
  3015     0268  0DB1               	rlf	___almod@divisor+3,f
  3016     0269  0B89               	decfsz	9,f
  3017     026A  2A65               	goto	u88_25
  3018     026B  3001               	movlw	1
  3019     026C  00FD               	movwf	??___almod
  3020     026D  087D               	movf	??___almod,w
  3021     026E  07B6               	addwf	___almod@counter,f
  3022     026F                     i1l1208:
  3023     026F  1FB1               	btfss	___almod@divisor+3,7
  3024     0270  2A72               	goto	u89_21
  3025     0271  2A73               	goto	u89_20
  3026     0272                     u89_21:
  3027     0272  2A64               	goto	i1l1206
  3028     0273                     u89_20:
  3029     0273                     i1l1210:
  3030     0273  0831               	movf	___almod@divisor+3,w
  3031     0274  0235               	subwf	___almod@dividend+3,w
  3032     0275  1D03               	skipz
  3033     0276  2A81               	goto	u90_25
  3034     0277  0830               	movf	___almod@divisor+2,w
  3035     0278  0234               	subwf	___almod@dividend+2,w
  3036     0279  1D03               	skipz
  3037     027A  2A81               	goto	u90_25
  3038     027B  082F               	movf	___almod@divisor+1,w
  3039     027C  0233               	subwf	___almod@dividend+1,w
  3040     027D  1D03               	skipz
  3041     027E  2A81               	goto	u90_25
  3042     027F  082E               	movf	___almod@divisor,w
  3043     0280  0232               	subwf	___almod@dividend,w
  3044     0281                     u90_25:
  3045     0281  1C03               	skipc
  3046     0282  2A84               	goto	u90_21
  3047     0283  2A85               	goto	u90_20
  3048     0284                     u90_21:
  3049     0284  2A8D               	goto	i1l1214
  3050     0285                     u90_20:
  3051     0285                     i1l1212:
  3052     0285  082E               	movf	___almod@divisor,w
  3053     0286  02B2               	subwf	___almod@dividend,f
  3054     0287  082F               	movf	___almod@divisor+1,w
  3055     0288  3BB3               	subwfb	___almod@dividend+1,f
  3056     0289  0830               	movf	___almod@divisor+2,w
  3057     028A  3BB4               	subwfb	___almod@dividend+2,f
  3058     028B  0831               	movf	___almod@divisor+3,w
  3059     028C  3BB5               	subwfb	___almod@dividend+3,f
  3060     028D                     i1l1214:
  3061     028D  3001               	movlw	1
  3062     028E                     u91_25:
  3063     028E  36B1               	lsrf	___almod@divisor+3,f
  3064     028F  0CB0               	rrf	___almod@divisor+2,f
  3065     0290  0CAF               	rrf	___almod@divisor+1,f
  3066     0291  0CAE               	rrf	___almod@divisor,f
  3067     0292  0B89               	decfsz	9,f
  3068     0293  2A8E               	goto	u91_25
  3069     0294                     i1l1216:
  3070     0294  3001               	movlw	1
  3071     0295  02B6               	subwf	___almod@counter,f
  3072     0296  1D03               	btfss	3,2
  3073     0297  2A99               	goto	u92_21
  3074     0298  2A9A               	goto	u92_20
  3075     0299                     u92_21:
  3076     0299  2A73               	goto	i1l1210
  3077     029A                     u92_20:
  3078     029A                     i1l1218:
  3079     029A  0837               	movf	___almod@sign,w
  3080     029B  1903               	btfsc	3,2
  3081     029C  2A9E               	goto	u93_21
  3082     029D  2A9F               	goto	u93_20
  3083     029E                     u93_21:
  3084     029E  2AAA               	goto	i1l1222
  3085     029F                     u93_20:
  3086     029F                     i1l1220:
  3087     029F  09B2               	comf	___almod@dividend,f
  3088     02A0  09B3               	comf	___almod@dividend+1,f
  3089     02A1  09B4               	comf	___almod@dividend+2,f
  3090     02A2  09B5               	comf	___almod@dividend+3,f
  3091     02A3  0AB2               	incf	___almod@dividend,f
  3092     02A4  1903               	skipnz
  3093     02A5  0AB3               	incf	___almod@dividend+1,f
  3094     02A6  1903               	skipnz
  3095     02A7  0AB4               	incf	___almod@dividend+2,f
  3096     02A8  1903               	skipnz
  3097     02A9  0AB5               	incf	___almod@dividend+3,f
  3098     02AA                     i1l1222:
  3099     02AA  0835               	movf	___almod@dividend+3,w
  3100     02AB  00B1               	movwf	?___almod+3
  3101     02AC  0834               	movf	___almod@dividend+2,w
  3102     02AD  00B0               	movwf	?___almod+2
  3103     02AE  0833               	movf	___almod@dividend+1,w
  3104     02AF  00AF               	movwf	?___almod+1
  3105     02B0  0832               	movf	___almod@dividend,w
  3106     02B1  00AE               	movwf	?___almod
  3107     02B2                     i1l392:
  3108     02B2  0008               	return
  3109     02B3                     __end_of___almod:
  3110                           
  3111                           	psect	text15
  3112     01A7                     __ptext15:	
  3113 ;; *************** function ___aldiv *****************
  3114 ;; Defined at:
  3115 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  divisor         4    0[BANK0 ] long 
  3118 ;;  dividend        4    4[BANK0 ] long 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  quotient        4   10[BANK0 ] long 
  3121 ;;  sign            1    9[BANK0 ] unsigned char 
  3122 ;;  counter         1    8[BANK0 ] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  4    0[BANK0 ] long 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3132 ;;      Params:         0       8       0       0       0       0
  3133 ;;      Locals:         0       6       0       0       0       0
  3134 ;;      Temps:          1       0       0       0       0       0
  3135 ;;      Totals:         1      14       0       0       0       0
  3136 ;;Total ram usage:       15 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_BinTOBcd
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145     01A7                     ___aldiv:	
  3146                           ;psect for function ___aldiv
  3147                           
  3148     01A7                     i1l1154:	
  3149                           ;incstack = 0
  3150                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3151                           
  3152     01A7  0020               	movlb	0	; select bank0
  3153     01A8  01A9               	clrf	___aldiv@sign
  3154     01A9                     i1l1156:
  3155     01A9  1FA3               	btfss	___aldiv@divisor+3,7
  3156     01AA  29AC               	goto	u75_21
  3157     01AB  29AD               	goto	u75_20
  3158     01AC                     u75_21:
  3159     01AC  29BA               	goto	i1l369
  3160     01AD                     u75_20:
  3161     01AD                     i1l1158:
  3162     01AD  09A0               	comf	___aldiv@divisor,f
  3163     01AE  09A1               	comf	___aldiv@divisor+1,f
  3164     01AF  09A2               	comf	___aldiv@divisor+2,f
  3165     01B0  09A3               	comf	___aldiv@divisor+3,f
  3166     01B1  0AA0               	incf	___aldiv@divisor,f
  3167     01B2  1903               	skipnz
  3168     01B3  0AA1               	incf	___aldiv@divisor+1,f
  3169     01B4  1903               	skipnz
  3170     01B5  0AA2               	incf	___aldiv@divisor+2,f
  3171     01B6  1903               	skipnz
  3172     01B7  0AA3               	incf	___aldiv@divisor+3,f
  3173     01B8  01A9               	clrf	___aldiv@sign
  3174     01B9  0AA9               	incf	___aldiv@sign,f
  3175     01BA                     i1l369:
  3176     01BA  1FA7               	btfss	___aldiv@dividend+3,7
  3177     01BB  29BD               	goto	u76_21
  3178     01BC  29BE               	goto	u76_20
  3179     01BD                     u76_21:
  3180     01BD  29CD               	goto	i1l1164
  3181     01BE                     u76_20:
  3182     01BE                     i1l1160:
  3183     01BE  09A4               	comf	___aldiv@dividend,f
  3184     01BF  09A5               	comf	___aldiv@dividend+1,f
  3185     01C0  09A6               	comf	___aldiv@dividend+2,f
  3186     01C1  09A7               	comf	___aldiv@dividend+3,f
  3187     01C2  0AA4               	incf	___aldiv@dividend,f
  3188     01C3  1903               	skipnz
  3189     01C4  0AA5               	incf	___aldiv@dividend+1,f
  3190     01C5  1903               	skipnz
  3191     01C6  0AA6               	incf	___aldiv@dividend+2,f
  3192     01C7  1903               	skipnz
  3193     01C8  0AA7               	incf	___aldiv@dividend+3,f
  3194     01C9                     i1l1162:
  3195     01C9  3001               	movlw	1
  3196     01CA  00FC               	movwf	??___aldiv
  3197     01CB  087C               	movf	??___aldiv,w
  3198     01CC  06A9               	xorwf	___aldiv@sign,f
  3199     01CD                     i1l1164:
  3200     01CD  3000               	movlw	0
  3201     01CE  00AD               	movwf	___aldiv@quotient+3
  3202     01CF  3000               	movlw	0
  3203     01D0  00AC               	movwf	___aldiv@quotient+2
  3204     01D1  3000               	movlw	0
  3205     01D2  00AB               	movwf	___aldiv@quotient+1
  3206     01D3  3000               	movlw	0
  3207     01D4  00AA               	movwf	___aldiv@quotient
  3208     01D5                     i1l1166:
  3209     01D5  0823               	movf	___aldiv@divisor+3,w
  3210     01D6  0422               	iorwf	___aldiv@divisor+2,w
  3211     01D7  0421               	iorwf	___aldiv@divisor+1,w
  3212     01D8  0420               	iorwf	___aldiv@divisor,w
  3213     01D9  1903               	skipnz
  3214     01DA  29DC               	goto	u77_21
  3215     01DB  29DD               	goto	u77_20
  3216     01DC                     u77_21:
  3217     01DC  2A1E               	goto	i1l1186
  3218     01DD                     u77_20:
  3219     01DD                     i1l1168:
  3220     01DD  01A8               	clrf	___aldiv@counter
  3221     01DE  0AA8               	incf	___aldiv@counter,f
  3222     01DF  29EB               	goto	i1l1172
  3223     01E0                     i1l1170:
  3224     01E0  3001               	movlw	1
  3225     01E1                     u78_25:
  3226     01E1  35A0               	lslf	___aldiv@divisor,f
  3227     01E2  0DA1               	rlf	___aldiv@divisor+1,f
  3228     01E3  0DA2               	rlf	___aldiv@divisor+2,f
  3229     01E4  0DA3               	rlf	___aldiv@divisor+3,f
  3230     01E5  0B89               	decfsz	9,f
  3231     01E6  29E1               	goto	u78_25
  3232     01E7  3001               	movlw	1
  3233     01E8  00FC               	movwf	??___aldiv
  3234     01E9  087C               	movf	??___aldiv,w
  3235     01EA  07A8               	addwf	___aldiv@counter,f
  3236     01EB                     i1l1172:
  3237     01EB  1FA3               	btfss	___aldiv@divisor+3,7
  3238     01EC  29EE               	goto	u79_21
  3239     01ED  29EF               	goto	u79_20
  3240     01EE                     u79_21:
  3241     01EE  29E0               	goto	i1l1170
  3242     01EF                     u79_20:
  3243     01EF                     i1l1174:
  3244     01EF  3001               	movlw	1
  3245     01F0                     u80_25:
  3246     01F0  35AA               	lslf	___aldiv@quotient,f
  3247     01F1  0DAB               	rlf	___aldiv@quotient+1,f
  3248     01F2  0DAC               	rlf	___aldiv@quotient+2,f
  3249     01F3  0DAD               	rlf	___aldiv@quotient+3,f
  3250     01F4  0B89               	decfsz	9,f
  3251     01F5  29F0               	goto	u80_25
  3252     01F6                     i1l1176:
  3253     01F6  0823               	movf	___aldiv@divisor+3,w
  3254     01F7  0227               	subwf	___aldiv@dividend+3,w
  3255     01F8  1D03               	skipz
  3256     01F9  2A04               	goto	u81_25
  3257     01FA  0822               	movf	___aldiv@divisor+2,w
  3258     01FB  0226               	subwf	___aldiv@dividend+2,w
  3259     01FC  1D03               	skipz
  3260     01FD  2A04               	goto	u81_25
  3261     01FE  0821               	movf	___aldiv@divisor+1,w
  3262     01FF  0225               	subwf	___aldiv@dividend+1,w
  3263     0200  1D03               	skipz
  3264     0201  2A04               	goto	u81_25
  3265     0202  0820               	movf	___aldiv@divisor,w
  3266     0203  0224               	subwf	___aldiv@dividend,w
  3267     0204                     u81_25:
  3268     0204  1C03               	skipc
  3269     0205  2A07               	goto	u81_21
  3270     0206  2A08               	goto	u81_20
  3271     0207                     u81_21:
  3272     0207  2A11               	goto	i1l1182
  3273     0208                     u81_20:
  3274     0208                     i1l1178:
  3275     0208  0820               	movf	___aldiv@divisor,w
  3276     0209  02A4               	subwf	___aldiv@dividend,f
  3277     020A  0821               	movf	___aldiv@divisor+1,w
  3278     020B  3BA5               	subwfb	___aldiv@dividend+1,f
  3279     020C  0822               	movf	___aldiv@divisor+2,w
  3280     020D  3BA6               	subwfb	___aldiv@dividend+2,f
  3281     020E  0823               	movf	___aldiv@divisor+3,w
  3282     020F  3BA7               	subwfb	___aldiv@dividend+3,f
  3283     0210                     i1l1180:
  3284     0210  142A               	bsf	___aldiv@quotient,0
  3285     0211                     i1l1182:
  3286     0211  3001               	movlw	1
  3287     0212                     u82_25:
  3288     0212  36A3               	lsrf	___aldiv@divisor+3,f
  3289     0213  0CA2               	rrf	___aldiv@divisor+2,f
  3290     0214  0CA1               	rrf	___aldiv@divisor+1,f
  3291     0215  0CA0               	rrf	___aldiv@divisor,f
  3292     0216  0B89               	decfsz	9,f
  3293     0217  2A12               	goto	u82_25
  3294     0218                     i1l1184:
  3295     0218  3001               	movlw	1
  3296     0219  02A8               	subwf	___aldiv@counter,f
  3297     021A  1D03               	btfss	3,2
  3298     021B  2A1D               	goto	u83_21
  3299     021C  2A1E               	goto	u83_20
  3300     021D                     u83_21:
  3301     021D  29EF               	goto	i1l1174
  3302     021E                     u83_20:
  3303     021E                     i1l1186:
  3304     021E  0829               	movf	___aldiv@sign,w
  3305     021F  1903               	btfsc	3,2
  3306     0220  2A22               	goto	u84_21
  3307     0221  2A23               	goto	u84_20
  3308     0222                     u84_21:
  3309     0222  2A2E               	goto	i1l1190
  3310     0223                     u84_20:
  3311     0223                     i1l1188:
  3312     0223  09AA               	comf	___aldiv@quotient,f
  3313     0224  09AB               	comf	___aldiv@quotient+1,f
  3314     0225  09AC               	comf	___aldiv@quotient+2,f
  3315     0226  09AD               	comf	___aldiv@quotient+3,f
  3316     0227  0AAA               	incf	___aldiv@quotient,f
  3317     0228  1903               	skipnz
  3318     0229  0AAB               	incf	___aldiv@quotient+1,f
  3319     022A  1903               	skipnz
  3320     022B  0AAC               	incf	___aldiv@quotient+2,f
  3321     022C  1903               	skipnz
  3322     022D  0AAD               	incf	___aldiv@quotient+3,f
  3323     022E                     i1l1190:
  3324     022E  082D               	movf	___aldiv@quotient+3,w
  3325     022F  00A3               	movwf	?___aldiv+3
  3326     0230  082C               	movf	___aldiv@quotient+2,w
  3327     0231  00A2               	movwf	?___aldiv+2
  3328     0232  082B               	movf	___aldiv@quotient+1,w
  3329     0233  00A1               	movwf	?___aldiv+1
  3330     0234  082A               	movf	___aldiv@quotient,w
  3331     0235  00A0               	movwf	?___aldiv
  3332     0236                     i1l379:
  3333     0236  0008               	return
  3334     0237                     __end_of___aldiv:
  3335                           
  3336                           	psect	text16
  3337     0476                     __ptext16:	
  3338 ;; *************** function _ASCII_Con *****************
  3339 ;; Defined at:
  3340 ;;		line 133 in file "funtions.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  a               2    0[COMMON] int 
  3343 ;;  b               2    2[COMMON] int 
  3344 ;;  c               2    4[COMMON] int 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      PTR unsigned char 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3356 ;;      Params:         6       0       0       0       0       0
  3357 ;;      Locals:         0       0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0
  3359 ;;      Totals:         6       0       0       0       0       0
  3360 ;;Total ram usage:        6 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_INT_TMR0
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369     0476                     _ASCII_Con:	
  3370                           ;psect for function _ASCII_Con
  3371                           
  3372     0476                     i1l1404:	
  3373                           ;incstack = 0
  3374                           ; Regs used in _ASCII_Con: [wreg+status,2+status,0]
  3375                           
  3376                           
  3377                           ;funtions.c: 133: unsigned char* ASCII_Con(int a, int b, int c);funtions.c: 134: {;funti
      +                          ons.c: 135:     static char r[7];;funtions.c: 136:     r[0] = a+48;
  3378     0476  0870               	movf	ASCII_Con@a,w
  3379     0477  3E30               	addlw	48
  3380     0478  0020               	movlb	0	; select bank0
  3381     0479  00CD               	movwf	ASCII_Con@r
  3382     047A                     i1l1406:
  3383                           
  3384                           ;funtions.c: 137:     r[1] = '.';
  3385     047A  302E               	movlw	46
  3386     047B  00CE               	movwf	ASCII_Con@r+1
  3387     047C                     i1l1408:
  3388                           
  3389                           ;funtions.c: 138:     r[2] = b+48;
  3390     047C  0872               	movf	ASCII_Con@b,w
  3391     047D  3E30               	addlw	48
  3392     047E  00CF               	movwf	ASCII_Con@r+2
  3393     047F                     i1l1410:
  3394                           
  3395                           ;funtions.c: 139:     r[3] = c+48;
  3396     047F  0874               	movf	ASCII_Con@c,w
  3397     0480  3E30               	addlw	48
  3398     0481  00D0               	movwf	ASCII_Con@r+3
  3399     0482                     i1l1412:
  3400                           
  3401                           ;funtions.c: 140:     r[4] = ' ';
  3402     0482  3020               	movlw	32
  3403     0483  00D1               	movwf	ASCII_Con@r+4
  3404     0484                     i1l1414:
  3405                           
  3406                           ;funtions.c: 141:     r[5] = 'V';
  3407     0484  3056               	movlw	86
  3408     0485  00D2               	movwf	ASCII_Con@r+5
  3409     0486                     i1l1416:
  3410                           
  3411                           ;funtions.c: 142:     r[6] = '\0';
  3412     0486  01D3               	clrf	ASCII_Con@r+6
  3413     0487                     i1l1418:
  3414                           
  3415                           ;funtions.c: 144:     return r;
  3416     0487  304D               	movlw	(low (ASCII_Con@r| 0))& (0+255)
  3417     0488                     i1l101:
  3418     0488  0008               	return
  3419     0489                     __end_of_ASCII_Con:
  3420     007E                     btemp	set	126	;btemp
  3421     007E                     int$flags	set	126
  3422     007E                     wtemp0	set	126
  3423                           
  3424                           	psect	idloc
  3425                           
  3426                           ;Config register IDLOC0 @ 0x8000
  3427                           ;	unspecified, using default values
  3428     8000                     	org	32768
  3429     8000  3FFF               	dw	16383
  3430                           
  3431                           ;Config register IDLOC1 @ 0x8001
  3432                           ;	unspecified, using default values
  3433     8001                     	org	32769
  3434     8001  3FFF               	dw	16383
  3435                           
  3436                           ;Config register IDLOC2 @ 0x8002
  3437                           ;	unspecified, using default values
  3438     8002                     	org	32770
  3439     8002  3FFF               	dw	16383
  3440                           
  3441                           ;Config register IDLOC3 @ 0x8003
  3442                           ;	unspecified, using default values
  3443     8003                     	org	32771
  3444     8003  3FFF               	dw	16383
  3445                           
  3446                           	psect	config
  3447                           
  3448                           ;Config register CONFIG1 @ 0x8007
  3449                           ;	Oscillator Selection
  3450                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3451                           ;	Watchdog Timer Enable
  3452                           ;	WDTE = OFF, WDT disabled
  3453                           ;	Power-up Timer Enable
  3454                           ;	PWRTE = OFF, PWRT disabled
  3455                           ;	MCLR Pin Function Select
  3456                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3457                           ;	Flash Program Memory Code Protection
  3458                           ;	CP = OFF, Program memory code protection is disabled
  3459                           ;	Data Memory Code Protection
  3460                           ;	CPD = OFF, Data memory code protection is disabled
  3461                           ;	Brown-out Reset Enable
  3462                           ;	BOREN = ON, Brown-out Reset enabled
  3463                           ;	Clock Out Enable
  3464                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3465                           ;	Internal/External Switchover
  3466                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3467                           ;	Fail-Safe Clock Monitor Enable
  3468                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3469     8007                     	org	32775
  3470     8007  3FE4               	dw	16356
  3471                           
  3472                           ;Config register CONFIG2 @ 0x8008
  3473                           ;	Flash Memory Self-Write Protection
  3474                           ;	WRT = OFF, Write protection off
  3475                           ;	PLL Enable
  3476                           ;	PLLEN = OFF, 4x PLL disabled
  3477                           ;	Stack Overflow/Underflow Reset Enable
  3478                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3479                           ;	Brown-out Reset Voltage Selection
  3480                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3481                           ;	Low-Voltage Programming Enable
  3482                           ;	LVP = ON, Low-voltage programming enabled
  3483     8008                     	org	32776
  3484     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         22
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      64
    BANK1            80      0      20
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    UART_print@cadena	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    showNumbers@digits	PTR int  size(1) Largest target is 6
		 -> NULL(NULL[0]), seg7@r(BANK0[6]), 

    seg7@iBCD	PTR const int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    sp__ASCII_Con	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    sp__seg7	PTR int  size(1) Largest target is 6
		 -> seg7@r(BANK0[6]), 

    sp__BinTOBcd	PTR int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    INT_TMR0@B	PTR int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    INT_TMR0@A	PTR int  size(1) Largest target is 6
		 -> NULL(NULL[0]), seg7@r(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INT_TMR0 in COMMON

    _showNumbers->___awmod
    _UART_print->_UART_write
    _BinTOBcd->___almod
    ___almod->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_TMR0 in BANK0

    _INT_TMR0->_BinTOBcd
    _BinTOBcd->___almod
    ___almod->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_TMR0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_TMR0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_TMR0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_TMR0 in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _init_IO
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
                          _TMR0_INIT
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT_TMR0                                             6     6      0    4598
                                             36 BANK0      6     6      0
                          _ASCII_Con
                           _BinTOBcd
                         _UART_print
                            _readADC
                               _seg7
                        _showNumbers
 ---------------------------------------------------------------------------------
 (4) _showNumbers                                          3     1      2    1375
                                              7 COMMON     3     1      2
                            ___awmod
                         _showNumber
 ---------------------------------------------------------------------------------
 (5) _showNumber                                           3     1      2     382
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _seg7                                                22    22      0     169
                                              0 COMMON     1     1      0
                                              0 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _UART_print                                           2     2      0     100
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (5) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _BinTOBcd                                            12     8      4    2571
                                             24 BANK0     12     8      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     548
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___almod                                             11     3      8     600
                                             13 COMMON     1     1      0
                                             14 BANK0     10     2      8
                            ___aldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             15     7      8    1212
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _ASCII_Con                                            6     0      6     294
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_IO
     _TMR0_INIT
     _init_UART

 _INT_TMR0 (ROOT)
   _ASCII_Con
   _BinTOBcd
     ___aldiv
       ___lmul (ARG)
     ___almod
       ___aldiv (ARG)
       ___lmul (ARG)
     ___lmul
   _UART_print
     _UART_write
   _readADC
   _seg7
   _showNumbers
     ___awmod
     _showNumber

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      62       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      14       8       25.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      62      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 18 11:40:36 2023

                     l33 04C6                       l34 04C6                      l151 0495  
                    l154 04A2                      l148 03A8             ___awmod@sign 0076  
                    wreg 0009                     l1120 0489                     l1130 049B  
                   l1122 0492                     l1132 049C                     l1124 0494  
                   l1300 0380                     l1134 049D                     l1126 0496  
                   l1310 0386                     l1302 0381                     l1136 049E  
                   l1128 0499                     l1320 038B                     l1312 0387  
                   l1304 0382                     l1138 049F                     l1330 0397  
                   l1322 038C                     l1314 0388                     l1306 0384  
                   l1340 039D                     l1332 0399                     l1324 0390  
                   l1316 0389                     l1308 0385                     l1350 03A2  
                   l1342 039E                     l1334 039A                     l1326 0394  
                   l1318 038A                     l1270 036F                     l1430 04C3  
                   l1352 03A5                     l1344 039F                     l1336 039B  
                   l1328 0395                     l1280 0375                     l1272 0370  
                   l1264 0365                     l1346 03A0                     l1338 039C  
                   l1290 037A                     l1282 0376                     l1274 0371  
                   l1266 036C                     l1348 03A1                     l1292 037C  
                   l1284 0377                     l1276 0372                     l1268 036E  
                   l1294 037D                     l1286 0378                     l1278 0374  
                   l1296 037E                     l1288 0379                     l1298 037F  
                   i1l45 0034                     i1l47 0088                     i1l72 0418  
                   i1l65 01A6                     i1l81 0311                     i1l90 04B6  
                   i1l75 03E3                     i1l84 04AD                     i1l87 04B2  
                   i1l96 0461                     _TMR0 0015                     _main 04C3  
                   _seg7 03E4                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 008A  
            seg7@numbers 0020          __end_of___aldiv 0237          __end_of___almod 02B3  
                  ?_main 0070                    ?_seg7 0070          __end_of___awmod 0365  
                  i1l101 0488         __end_of_INT_TMR0 008A                    i1l318 044B  
                  i1l382 024A                    i1l470 0364                    i1l392 02B2  
                  i1l369 01BA                    i1l379 0236                    _SPBRG 019B  
                  u60_20 03B7                    u60_21 03B4                    u61_24 03B9  
                  u70_20 04B6                    u62_20 03BF                    u70_21 04B5  
                  u62_21 03BC                    u71_20 0425                    u71_21 0424  
                  u63_24 03C1                    u64_20 03C7                    u64_21 03C4  
                  u80_25 01F0                    u72_25 042E                    u81_20 0208  
                  u81_21 0207                    u65_24 03C9                    u81_25 0204  
                  u73_25 0435                    u90_20 0285                    u74_20 0443  
                  u66_20 03CF                    u58_20 03AF                    u90_21 0284  
                  u74_21 0442                    u66_21 03CC                    u58_21 03AC  
                  u82_25 0212                    u90_25 0281                    u83_20 021E  
                  u75_20 01AD                    u83_21 021D                    u75_21 01AC  
                  u67_24 03D1                    u59_24 03B1                    u91_25 028E  
                  u84_20 0223                    u76_20 01BE                    u92_20 029A  
                  u68_20 03D7                    u84_21 0222                    u76_21 01BD  
                  u92_21 0299                    u68_21 03D4                    u77_20 01DD  
                  u93_20 029F                    u85_20 023D                    u77_21 01DC  
                  u93_21 029E                    u85_21 023C                    u69_24 03D9  
                  u86_20 024E                    u94_20 0317                    u86_21 024D  
                  u94_21 0316                    u78_25 01E1                    u79_20 01EF  
                  u87_20 0261                    u95_20 0322                    u79_21 01EE  
                  u87_21 0260                    u95_21 0321                    u96_20 032D  
                  u96_21 032C                    u88_25 0265                    u89_20 0273  
                  u89_21 0272                    _TXREG 019A                    u97_25 0331  
                  u98_20 033D                    u98_21 033C                    u99_20 0347  
                  u99_21 0346                    u99_25 0343      ___lmul@multiplicand 0074  
        __end_of_readADC 04AE          __end_of_init_IO 03A9              ?_UART_print 0070  
            ?_UART_write 0070                    seg7@r 0054         __end_of_BinTOBcd 01A7  
          _BinTOBcd$1428 0040            _BinTOBcd$1429 003C                    status 0003  
                  wtemp0 007E        __end_of_ASCII_Con 0489          __initialization 008C  
           __end_of_main 04C9             __end_of_seg7 0419                   ??_main 0000  
                 ??_seg7 0070                   _ADRESH 009C                   _ADRESL 009B  
                 u100_25 034C                   u101_20 0356                   u101_21 0355  
                 i1l1200 024E                   u102_20 035B                   u110_20 001C  
                 u102_21 035A                   u110_21 0019                   i1l1210 0273  
                 i1l1202 0259                   i1l1114 03A9                   i1l1220 029F  
                 i1l1212 0285                   i1l1204 0261                   i1l1140 0419  
                 i1l1116 03D9                   i1l1222 02AA                   i1l1214 028D  
                 i1l1206 0264                   i1l1150 0443                   i1l1142 0421  
                 i1l1118 04AF                   i1l1230 0317                   i1l1160 01BE  
                 i1l1216 0294                   i1l1208 026F                   i1l1144 0425  
                 i1l1400 0417                   i1l1240 032D                   i1l1232 031C  
                 u103_20 02C5                   u103_21 02C4                   i1l1410 047F  
                 i1l1170 01E0                   i1l1162 01C9                   i1l1154 01A7  
                 i1l1218 029A                   i1l1146 042D                   i1l1250 0347  
                 i1l1242 0330                   i1l1234 031E                   i1l1226 0312  
                 i1l1412 0482                   i1l1404 0476                   i1l1180 0210  
                 i1l1172 01EB                   i1l1164 01CD                   i1l1156 01A9  
                 i1l1148 0434                   i1l1260 0360                   i1l1252 034B  
                 i1l1244 0335                   i1l1236 0322                   i1l1228 0313  
                 u111_24 001E                   i1l1414 0484                   i1l1406 047A  
                 i1l1190 022E                   i1l1182 0211                   i1l1174 01EF  
                 i1l1166 01D5                   i1l1158 01AD                   i1l1422 044D  
                 i1l1254 0350                   i1l1246 0339                   i1l1238 0327  
                 i1l1416 0486                   i1l1408 047C                   i1l1184 0218  
                 i1l1176 01F6                   i1l1168 01DD                   i1l1424 044E  
                 i1l1360 04AC                   i1l1248 033D                   i1l1256 0356  
                 u104_20 02E3                   u112_20 0039                   i1l1440 0021  
                 i1l1432 0006                   u104_21 02E2                   u112_21 0038  
                 i1l1418 0487                   i1l1178 0208                   i1l1186 021E  
                 i1l1194 0237                   i1l1426 0455                   i1l1354 04A3  
                 i1l1258 035B                   i1l1370 02D2                   i1l1362 02B4  
                 i1l1442 0024                   i1l1434 000A                   i1l1188 0223  
                 i1l1196 0239                   i1l1428 0459                   i1l1356 04A5  
                 i1l1380 0303                   i1l1372 02E3                   i1l1364 02C5  
                 i1l1460 0065                   i1l1452 0039                   i1l1444 0028  
                 i1l1436 0012                   i1l1198 023D                   i1l1358 04AB  
                 i1l1382 030E                   i1l1374 02EE                   i1l1366 02CF  
                 i1l1462 006B                   i1l1454 0045                   i1l1446 002A  
                 i1l1438 001E                   i1l1392 03E6                   i1l1384 0310  
                 u105_20 0303                   i1l1376 02F0                   i1l1368 02D1  
                 i1l1456 0047                   u113_20 0043                   i1l1448 002B  
                 u105_21 0302                   u113_21 0040                   i1l1386 00A4  
                 i1l1394 03F4                   i1l1378 02F1                   i1l1458 0049  
                 i1l1388 01A5                   i1l1396 03FF                   i1l1398 040B  
                 u106_20 03F0                   u114_24 0045                   u107_20 0461  
                 u107_21 0460                   u108_20 000A                   u108_21 0009  
                 u109_20 0012                   u109_21 0011        __end_of_TMR0_INIT 04A3  
                 ___lmul 0419                ??___aldiv 007C                ??___almod 007D  
              ??___awmod 0074          ___awmod@divisor 0070          ___awmod@counter 0075  
              ??_readADC 0070                ??_init_IO 0000             ?_showNumbers 0077  
__end_of__initialization 00A0                ?_INT_TMR0 0070             BinTOBcd@iADC 0038  
         __pcstackCOMMON 0070             __pidataBANK1 0462                ?_BinTOBcd 0038  
         _OPTION_REGbits 0095                INT_TMR0@A 004C                INT_TMR0@B 0049  
             __pbssBANK0 004A               ??_INT_TMR0 0044               __pmaintext 04C3  
                ?___lmul 0070               __pintentry 0004           ___lmul@product 0078  
             ??_BinTOBcd 007E             ??_UART_print 0071             ??_UART_write 0070  
                ___aldiv 01A7                  ___almod 0237                  ___awmod 0312  
              _ASCII_Con 0476                BinTOBcd@r 005A               ASCII_Con@a 0070  
             ASCII_Con@b 0072               ASCII_Con@c 0074               ASCII_Con@r 004D  
     __end_of_UART_print 0462       __end_of_UART_write 04B7                  __ptext1 0365  
                __ptext2 0489                  __ptext3 0496                  __ptext5 02B3  
                __ptext6 03A9                  __ptext7 0312                  __ptext8 03E4  
                __ptext9 04A3        __end_of_init_UART 0496                  _readADC 04A3  
                _init_IO 0365         ___awmod@dividend 0072         ___aldiv@dividend 0024  
                clrloop0 04BE     end_of_initialization 00A0                  init_ram 04B7  
                initloop 04B8                _RCSTAbits 019D              UART_write@c 0070  
       ___aldiv@quotient 002A               ?_ASCII_Con 0070                _TMR0_INIT 0496  
             _showNumber 03A9                _TRISAbits 008C                _TRISBbits 008D  
              _TXSTAbits 019E           __end_of___lmul 044C               ?_TMR0_INIT 0070  
            _BAUDCONbits 019F      start_initialization 008C              _APFCON1bits 011E  
               ??___lmul 0078              ??_ASCII_Con 0076              __pdataBANK1 00A0  
            ?_showNumber 0070                ___latbits 0001            __pcstackBANK0 0020  
          __pcstackBANK1 0000                 ?___aldiv 0020                 ?___almod 002E  
               ?___awmod 0070              ??_TMR0_INIT 0000         ___almod@dividend 0032  
               ?_readADC 0070                 ?_init_IO 0070                _init_UART 0489  
        ___aldiv@divisor 0020          ___aldiv@counter 0028                 _LATAbits 010C  
               _LATBbits 010D                clear_ram0 04BD                 _PIE1bits 0091  
               _INT_TMR0 0004                 _PIR1bits 0011                seg7@F2503 00A0  
             _ADCON0bits 009D               _ADCON1bits 009E                 _BinTOBcd 00A4  
          ??_showNumbers 0079               ?_init_UART 0070        ___lmul@multiplier 0070  
      showNumbers@digits 0079         UART_print@cadena 0072               _ANSELAbits 018C  
             _ANSELBbits 018D                 __ptext10 044C                 __ptext11 04AE  
               __ptext12 00A4                 __ptext13 0419                 __ptext14 0237  
               __ptext15 01A7                 __ptext16 0476          ___almod@divisor 002E  
        ___almod@counter 0036      __end_of_showNumbers 0312                 int$flags 007E  
               seg7@iBCD 0034             ??_showNumber 0072               _INTCONbits 000B  
             _FVRCONbits 0117              ??_init_UART 0000                 intlevel1 0000  
     __end_of_showNumber 03E4               _OSCCONbits 0099          showNumber@digit 0070  
            _showNumbers 02B3             ___aldiv@sign 0029            INT_TMR0@count 004A  
             _UART_print 044C               _UART_write 04AE             ___almod@sign 0037  
           showNumbers@n 0077  
