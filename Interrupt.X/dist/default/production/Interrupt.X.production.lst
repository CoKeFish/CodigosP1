

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 01 16:41:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1827 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     0111                     	;# 
   118     0112                     	;# 
   119     0113                     	;# 
   120     0114                     	;# 
   121     0115                     	;# 
   122     0116                     	;# 
   123     0117                     	;# 
   124     0118                     	;# 
   125     0119                     	;# 
   126     011A                     	;# 
   127     011B                     	;# 
   128     011D                     	;# 
   129     011E                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0191                     	;# 
   133     0191                     	;# 
   134     0192                     	;# 
   135     0193                     	;# 
   136     0193                     	;# 
   137     0193                     	;# 
   138     0194                     	;# 
   139     0195                     	;# 
   140     0196                     	;# 
   141     0199                     	;# 
   142     019A                     	;# 
   143     019B                     	;# 
   144     019B                     	;# 
   145     019B                     	;# 
   146     019B                     	;# 
   147     019C                     	;# 
   148     019C                     	;# 
   149     019D                     	;# 
   150     019E                     	;# 
   151     019F                     	;# 
   152     020C                     	;# 
   153     020D                     	;# 
   154     0211                     	;# 
   155     0211                     	;# 
   156     0212                     	;# 
   157     0212                     	;# 
   158     0213                     	;# 
   159     0213                     	;# 
   160     0214                     	;# 
   161     0214                     	;# 
   162     0215                     	;# 
   163     0215                     	;# 
   164     0215                     	;# 
   165     0216                     	;# 
   166     0216                     	;# 
   167     0217                     	;# 
   168     0217                     	;# 
   169     0219                     	;# 
   170     021A                     	;# 
   171     021B                     	;# 
   172     021C                     	;# 
   173     021D                     	;# 
   174     021E                     	;# 
   175     021F                     	;# 
   176     0291                     	;# 
   177     0291                     	;# 
   178     0292                     	;# 
   179     0293                     	;# 
   180     0294                     	;# 
   181     0295                     	;# 
   182     0295                     	;# 
   183     0296                     	;# 
   184     0298                     	;# 
   185     0298                     	;# 
   186     0299                     	;# 
   187     029A                     	;# 
   188     029B                     	;# 
   189     029C                     	;# 
   190     029C                     	;# 
   191     029D                     	;# 
   192     029E                     	;# 
   193     029E                     	;# 
   194     0311                     	;# 
   195     0311                     	;# 
   196     0312                     	;# 
   197     0313                     	;# 
   198     0318                     	;# 
   199     0318                     	;# 
   200     0319                     	;# 
   201     031A                     	;# 
   202     0394                     	;# 
   203     0395                     	;# 
   204     0396                     	;# 
   205     039A                     	;# 
   206     039C                     	;# 
   207     039D                     	;# 
   208     039E                     	;# 
   209     039F                     	;# 
   210     0415                     	;# 
   211     0416                     	;# 
   212     0417                     	;# 
   213     041C                     	;# 
   214     041D                     	;# 
   215     041E                     	;# 
   216     0FE4                     	;# 
   217     0FE5                     	;# 
   218     0FE6                     	;# 
   219     0FE7                     	;# 
   220     0FE8                     	;# 
   221     0FE9                     	;# 
   222     0FEA                     	;# 
   223     0FEB                     	;# 
   224     0FED                     	;# 
   225     0FEE                     	;# 
   226     0FEF                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     0011                     	;# 
   242     0012                     	;# 
   243     0013                     	;# 
   244     0014                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0016                     	;# 
   248     0017                     	;# 
   249     0018                     	;# 
   250     0019                     	;# 
   251     001A                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001E                     	;# 
   255     001F                     	;# 
   256     008C                     	;# 
   257     008D                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0094                     	;# 
   262     0095                     	;# 
   263     0096                     	;# 
   264     0097                     	;# 
   265     0098                     	;# 
   266     0099                     	;# 
   267     009A                     	;# 
   268     009B                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     010C                     	;# 
   274     010D                     	;# 
   275     0111                     	;# 
   276     0112                     	;# 
   277     0113                     	;# 
   278     0114                     	;# 
   279     0115                     	;# 
   280     0116                     	;# 
   281     0117                     	;# 
   282     0118                     	;# 
   283     0119                     	;# 
   284     011A                     	;# 
   285     011B                     	;# 
   286     011D                     	;# 
   287     011E                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0191                     	;# 
   291     0191                     	;# 
   292     0192                     	;# 
   293     0193                     	;# 
   294     0193                     	;# 
   295     0193                     	;# 
   296     0194                     	;# 
   297     0195                     	;# 
   298     0196                     	;# 
   299     0199                     	;# 
   300     019A                     	;# 
   301     019B                     	;# 
   302     019B                     	;# 
   303     019B                     	;# 
   304     019B                     	;# 
   305     019C                     	;# 
   306     019C                     	;# 
   307     019D                     	;# 
   308     019E                     	;# 
   309     019F                     	;# 
   310     020C                     	;# 
   311     020D                     	;# 
   312     0211                     	;# 
   313     0211                     	;# 
   314     0212                     	;# 
   315     0212                     	;# 
   316     0213                     	;# 
   317     0213                     	;# 
   318     0214                     	;# 
   319     0214                     	;# 
   320     0215                     	;# 
   321     0215                     	;# 
   322     0215                     	;# 
   323     0216                     	;# 
   324     0216                     	;# 
   325     0217                     	;# 
   326     0217                     	;# 
   327     0219                     	;# 
   328     021A                     	;# 
   329     021B                     	;# 
   330     021C                     	;# 
   331     021D                     	;# 
   332     021E                     	;# 
   333     021F                     	;# 
   334     0291                     	;# 
   335     0291                     	;# 
   336     0292                     	;# 
   337     0293                     	;# 
   338     0294                     	;# 
   339     0295                     	;# 
   340     0295                     	;# 
   341     0296                     	;# 
   342     0298                     	;# 
   343     0298                     	;# 
   344     0299                     	;# 
   345     029A                     	;# 
   346     029B                     	;# 
   347     029C                     	;# 
   348     029C                     	;# 
   349     029D                     	;# 
   350     029E                     	;# 
   351     029E                     	;# 
   352     0311                     	;# 
   353     0311                     	;# 
   354     0312                     	;# 
   355     0313                     	;# 
   356     0318                     	;# 
   357     0318                     	;# 
   358     0319                     	;# 
   359     031A                     	;# 
   360     0394                     	;# 
   361     0395                     	;# 
   362     0396                     	;# 
   363     039A                     	;# 
   364     039C                     	;# 
   365     039D                     	;# 
   366     039E                     	;# 
   367     039F                     	;# 
   368     0415                     	;# 
   369     0416                     	;# 
   370     0417                     	;# 
   371     041C                     	;# 
   372     041D                     	;# 
   373     041E                     	;# 
   374     0FE4                     	;# 
   375     0FE5                     	;# 
   376     0FE6                     	;# 
   377     0FE7                     	;# 
   378     0FE8                     	;# 
   379     0FE9                     	;# 
   380     0FEA                     	;# 
   381     0FEB                     	;# 
   382     0FED                     	;# 
   383     0FEE                     	;# 
   384     0FEF                     	;# 
   385     0000                     	;# 
   386     0001                     	;# 
   387     0002                     	;# 
   388     0003                     	;# 
   389     0004                     	;# 
   390     0005                     	;# 
   391     0006                     	;# 
   392     0007                     	;# 
   393     0008                     	;# 
   394     0009                     	;# 
   395     000A                     	;# 
   396     000B                     	;# 
   397     000C                     	;# 
   398     000D                     	;# 
   399     0011                     	;# 
   400     0012                     	;# 
   401     0013                     	;# 
   402     0014                     	;# 
   403     0015                     	;# 
   404     0016                     	;# 
   405     0016                     	;# 
   406     0017                     	;# 
   407     0018                     	;# 
   408     0019                     	;# 
   409     001A                     	;# 
   410     001B                     	;# 
   411     001C                     	;# 
   412     001E                     	;# 
   413     001F                     	;# 
   414     008C                     	;# 
   415     008D                     	;# 
   416     0091                     	;# 
   417     0092                     	;# 
   418     0093                     	;# 
   419     0094                     	;# 
   420     0095                     	;# 
   421     0096                     	;# 
   422     0097                     	;# 
   423     0098                     	;# 
   424     0099                     	;# 
   425     009A                     	;# 
   426     009B                     	;# 
   427     009B                     	;# 
   428     009C                     	;# 
   429     009D                     	;# 
   430     009E                     	;# 
   431     010C                     	;# 
   432     010D                     	;# 
   433     0111                     	;# 
   434     0112                     	;# 
   435     0113                     	;# 
   436     0114                     	;# 
   437     0115                     	;# 
   438     0116                     	;# 
   439     0117                     	;# 
   440     0118                     	;# 
   441     0119                     	;# 
   442     011A                     	;# 
   443     011B                     	;# 
   444     011D                     	;# 
   445     011E                     	;# 
   446     018C                     	;# 
   447     018D                     	;# 
   448     0191                     	;# 
   449     0191                     	;# 
   450     0192                     	;# 
   451     0193                     	;# 
   452     0193                     	;# 
   453     0193                     	;# 
   454     0194                     	;# 
   455     0195                     	;# 
   456     0196                     	;# 
   457     0199                     	;# 
   458     019A                     	;# 
   459     019B                     	;# 
   460     019B                     	;# 
   461     019B                     	;# 
   462     019B                     	;# 
   463     019C                     	;# 
   464     019C                     	;# 
   465     019D                     	;# 
   466     019E                     	;# 
   467     019F                     	;# 
   468     020C                     	;# 
   469     020D                     	;# 
   470     0211                     	;# 
   471     0211                     	;# 
   472     0212                     	;# 
   473     0212                     	;# 
   474     0213                     	;# 
   475     0213                     	;# 
   476     0214                     	;# 
   477     0214                     	;# 
   478     0215                     	;# 
   479     0215                     	;# 
   480     0215                     	;# 
   481     0216                     	;# 
   482     0216                     	;# 
   483     0217                     	;# 
   484     0217                     	;# 
   485     0219                     	;# 
   486     021A                     	;# 
   487     021B                     	;# 
   488     021C                     	;# 
   489     021D                     	;# 
   490     021E                     	;# 
   491     021F                     	;# 
   492     0291                     	;# 
   493     0291                     	;# 
   494     0292                     	;# 
   495     0293                     	;# 
   496     0294                     	;# 
   497     0295                     	;# 
   498     0295                     	;# 
   499     0296                     	;# 
   500     0298                     	;# 
   501     0298                     	;# 
   502     0299                     	;# 
   503     029A                     	;# 
   504     029B                     	;# 
   505     029C                     	;# 
   506     029C                     	;# 
   507     029D                     	;# 
   508     029E                     	;# 
   509     029E                     	;# 
   510     0311                     	;# 
   511     0311                     	;# 
   512     0312                     	;# 
   513     0313                     	;# 
   514     0318                     	;# 
   515     0318                     	;# 
   516     0319                     	;# 
   517     031A                     	;# 
   518     0394                     	;# 
   519     0395                     	;# 
   520     0396                     	;# 
   521     039A                     	;# 
   522     039C                     	;# 
   523     039D                     	;# 
   524     039E                     	;# 
   525     039F                     	;# 
   526     0415                     	;# 
   527     0416                     	;# 
   528     0417                     	;# 
   529     041C                     	;# 
   530     041D                     	;# 
   531     041E                     	;# 
   532     0FE4                     	;# 
   533     0FE5                     	;# 
   534     0FE6                     	;# 
   535     0FE7                     	;# 
   536     0FE8                     	;# 
   537     0FE9                     	;# 
   538     0FEA                     	;# 
   539     0FEB                     	;# 
   540     0FED                     	;# 
   541     0FEE                     	;# 
   542     0FEF                     	;# 
   543     0000                     	;# 
   544     0001                     	;# 
   545     0002                     	;# 
   546     0003                     	;# 
   547     0004                     	;# 
   548     0005                     	;# 
   549     0006                     	;# 
   550     0007                     	;# 
   551     0008                     	;# 
   552     0009                     	;# 
   553     000A                     	;# 
   554     000B                     	;# 
   555     000C                     	;# 
   556     000D                     	;# 
   557     0011                     	;# 
   558     0012                     	;# 
   559     0013                     	;# 
   560     0014                     	;# 
   561     0015                     	;# 
   562     0016                     	;# 
   563     0016                     	;# 
   564     0017                     	;# 
   565     0018                     	;# 
   566     0019                     	;# 
   567     001A                     	;# 
   568     001B                     	;# 
   569     001C                     	;# 
   570     001E                     	;# 
   571     001F                     	;# 
   572     008C                     	;# 
   573     008D                     	;# 
   574     0091                     	;# 
   575     0092                     	;# 
   576     0093                     	;# 
   577     0094                     	;# 
   578     0095                     	;# 
   579     0096                     	;# 
   580     0097                     	;# 
   581     0098                     	;# 
   582     0099                     	;# 
   583     009A                     	;# 
   584     009B                     	;# 
   585     009B                     	;# 
   586     009C                     	;# 
   587     009D                     	;# 
   588     009E                     	;# 
   589     010C                     	;# 
   590     010D                     	;# 
   591     0111                     	;# 
   592     0112                     	;# 
   593     0113                     	;# 
   594     0114                     	;# 
   595     0115                     	;# 
   596     0116                     	;# 
   597     0117                     	;# 
   598     0118                     	;# 
   599     0119                     	;# 
   600     011A                     	;# 
   601     011B                     	;# 
   602     011D                     	;# 
   603     011E                     	;# 
   604     018C                     	;# 
   605     018D                     	;# 
   606     0191                     	;# 
   607     0191                     	;# 
   608     0192                     	;# 
   609     0193                     	;# 
   610     0193                     	;# 
   611     0193                     	;# 
   612     0194                     	;# 
   613     0195                     	;# 
   614     0196                     	;# 
   615     0199                     	;# 
   616     019A                     	;# 
   617     019B                     	;# 
   618     019B                     	;# 
   619     019B                     	;# 
   620     019B                     	;# 
   621     019C                     	;# 
   622     019C                     	;# 
   623     019D                     	;# 
   624     019E                     	;# 
   625     019F                     	;# 
   626     020C                     	;# 
   627     020D                     	;# 
   628     0211                     	;# 
   629     0211                     	;# 
   630     0212                     	;# 
   631     0212                     	;# 
   632     0213                     	;# 
   633     0213                     	;# 
   634     0214                     	;# 
   635     0214                     	;# 
   636     0215                     	;# 
   637     0215                     	;# 
   638     0215                     	;# 
   639     0216                     	;# 
   640     0216                     	;# 
   641     0217                     	;# 
   642     0217                     	;# 
   643     0219                     	;# 
   644     021A                     	;# 
   645     021B                     	;# 
   646     021C                     	;# 
   647     021D                     	;# 
   648     021E                     	;# 
   649     021F                     	;# 
   650     0291                     	;# 
   651     0291                     	;# 
   652     0292                     	;# 
   653     0293                     	;# 
   654     0294                     	;# 
   655     0295                     	;# 
   656     0295                     	;# 
   657     0296                     	;# 
   658     0298                     	;# 
   659     0298                     	;# 
   660     0299                     	;# 
   661     029A                     	;# 
   662     029B                     	;# 
   663     029C                     	;# 
   664     029C                     	;# 
   665     029D                     	;# 
   666     029E                     	;# 
   667     029E                     	;# 
   668     0311                     	;# 
   669     0311                     	;# 
   670     0312                     	;# 
   671     0313                     	;# 
   672     0318                     	;# 
   673     0318                     	;# 
   674     0319                     	;# 
   675     031A                     	;# 
   676     0394                     	;# 
   677     0395                     	;# 
   678     0396                     	;# 
   679     039A                     	;# 
   680     039C                     	;# 
   681     039D                     	;# 
   682     039E                     	;# 
   683     039F                     	;# 
   684     0415                     	;# 
   685     0416                     	;# 
   686     0417                     	;# 
   687     041C                     	;# 
   688     041D                     	;# 
   689     041E                     	;# 
   690     0FE4                     	;# 
   691     0FE5                     	;# 
   692     0FE6                     	;# 
   693     0FE7                     	;# 
   694     0FE8                     	;# 
   695     0FE9                     	;# 
   696     0FEA                     	;# 
   697     0FEB                     	;# 
   698     0FED                     	;# 
   699     0FEE                     	;# 
   700     0FEF                     	;# 
   701                           
   702                           	psect	idataBANK1
   703     03E4                     __pidataBANK1:
   704                           
   705                           ;initializer for math7Seg@F2504
   706     03E4  347E               	retlw	126
   707     03E5  3400               	retlw	0
   708     03E6  3430               	retlw	48
   709     03E7  3400               	retlw	0
   710     03E8  346D               	retlw	109
   711     03E9  3400               	retlw	0
   712     03EA  3479               	retlw	121
   713     03EB  3400               	retlw	0
   714     03EC  3433               	retlw	51
   715     03ED  3400               	retlw	0
   716     03EE  345B               	retlw	91
   717     03EF  3400               	retlw	0
   718     03F0  345F               	retlw	95
   719     03F1  3400               	retlw	0
   720     03F2  3470               	retlw	112
   721     03F3  3400               	retlw	0
   722     03F4  347F               	retlw	127
   723     03F5  3400               	retlw	0
   724     03F6  347B               	retlw	123
   725     03F7  3400               	retlw	0
   726     0011                     _PIR1bits	set	17
   727     0015                     _TMR0	set	21
   728     000B                     _INTCONbits	set	11
   729     0095                     _OPTION_REGbits	set	149
   730     0091                     _PIE1bits	set	145
   731     009E                     _ADCON1bits	set	158
   732     008D                     _TRISBbits	set	141
   733     008C                     _TRISAbits	set	140
   734     0099                     _OSCCONbits	set	153
   735     009B                     _ADRESL	set	155
   736     009C                     _ADRESH	set	156
   737     009D                     _ADCON0bits	set	157
   738     011E                     _APFCON1bits	set	286
   739     0117                     _FVRCONbits	set	279
   740     010D                     _LATBbits	set	269
   741     010C                     _LATAbits	set	268
   742     019D                     _RCSTAbits	set	413
   743     019B                     _SPBRG	set	411
   744     019F                     _BAUDCONbits	set	415
   745     018D                     _ANSELBbits	set	397
   746     018C                     _ANSELAbits	set	396
   747     019E                     _TXSTAbits	set	414
   748     019A                     _TXREG	set	410
   749                           
   750                           	psect	cinit
   751     0082                     start_initialization:	
   752                           ; #config settings
   753                           
   754     0082                     __initialization:
   755                           
   756                           ; Initialize objects allocated to BANK1
   757     0082  30E4               	movlw	low __pidataBANK1
   758     0083  0084               	movwf	4
   759     0084  3083               	movlw	(high __pidataBANK1)| (0+128)
   760     0085  0085               	movwf	5
   761     0086  30A0               	movlw	low __pdataBANK1
   762     0087  0086               	movwf	6
   763     0088  3000               	movlw	high __pdataBANK1
   764     0089  0087               	movwf	7
   765     008A  3014               	movlw	20
   766     008B  3184  2430  3180   	fcall	init_ram
   767                           
   768                           ; Clear objects allocated to BANK0
   769     008E  3048               	movlw	low __pbssBANK0
   770     008F  0084               	movwf	4
   771     0090  3000               	movlw	high __pbssBANK0
   772     0091  0085               	movwf	5
   773     0092  3019               	movlw	25
   774     0093  3184  2436  3180   	fcall	clear_ram0
   775     0096                     end_of_initialization:	
   776                           ;End of C runtime variable initialization code
   777                           
   778     0096                     __end_of__initialization:
   779     0096  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   780     0097  0020               	movlb	0
   781     0098  3184  2C3C         	ljmp	_main	;jump to C main() function
   782                           
   783                           	psect	bssBANK0
   784     0048                     __pbssBANK0:
   785     0048                     printUART@i:
   786     0048                     	ds	2
   787     004A                     interrupciones@count:
   788     004A                     	ds	2
   789     004C                     interrupciones@Cadena:
   790     004C                     	ds	1
   791     004D                     interrupciones@displayData:
   792     004D                     	ds	1
   793     004E                     ASCII_Con@r:
   794     004E                     	ds	7
   795     0055                     math7Seg@r:
   796     0055                     	ds	6
   797     005B                     mathBCD@r:
   798     005B                     	ds	6
   799                           
   800                           	psect	dataBANK1
   801     00A0                     __pdataBANK1:
   802     00A0                     math7Seg@F2504:
   803     00A0                     	ds	20
   804                           
   805                           	psect	inittext
   806     0430                     init_ram:
   807     0430  00FE               	movwf	btemp
   808     0431                     initloop:
   809     0431  0012               	moviw fsr0++
   810     0432  001E               	movwi fsr1++
   811     0433  0BFE               	decfsz	btemp,f
   812     0434  2C31               	goto	initloop
   813     0435  3400               	retlw	0
   814                           
   815                           	psect	clrtext
   816     0436                     clear_ram0:	
   817                           ;	Called with FSR0 containing the base address, and
   818                           ;	WREG with the size to clear
   819                           
   820     0436  0064               	clrwdt	;clear the watchdog before getting into this loop
   821     0437                     clrloop0:
   822     0437  0180               	clrf	0	;clear RAM location pointed to by FSR
   823     0438  3101               	addfsr 0,1
   824     0439  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   825     043A  2C37               	goto	clrloop0	;have we reached the end yet?
   826     043B  3400               	retlw	0	;all done for this memory range, return
   827                           
   828                           	psect	cstackBANK1
   829     0000                     __pcstackBANK1:
   830     0000                     ??_init_IO:
   831     0000                     ??_init_UART:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0000                     ??_TMR0_INIT:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0000                     ??_main:	
   838                           ; 1 bytes @ 0x0
   839                           
   840                           
   841                           	psect	cstackCOMMON
   842     0070                     __pcstackCOMMON:	
   843                           ; 1 bytes @ 0x0
   844                           
   845     0070                     ?_init_IO:
   846     0070                     ?_readADC:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ??_readADC:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?_math7Seg:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     ??_math7Seg:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     ?_ASCII_Con:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_init_UART:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?_TMR0_INIT:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ?_main:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ?_interrupciones:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0070                     ?_showNumber:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0070                     ?_UART_write:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0070                     ??_UART_write:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     ?___awmod:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0070                     ?___lmul:	
   886                           ; 2 bytes @ 0x0
   887                           
   888     0070                     UART_write@c:	
   889                           ; 4 bytes @ 0x0
   890                           
   891     0070                     showNumber@digit:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0070                     ASCII_Con@a:	
   895                           ; 2 bytes @ 0x0
   896                           
   897     0070                     ___awmod@divisor:	
   898                           ; 2 bytes @ 0x0
   899                           
   900     0070                     ___lmul@multiplier:	
   901                           ; 2 bytes @ 0x0
   902                           
   903                           
   904                           ; 4 bytes @ 0x0
   905     0070                     	ds	1
   906     0071                     ?_printUART:
   907     0071                     printUART@n:	
   908                           ; 1 bytes @ 0x1
   909                           
   910                           
   911                           ; 2 bytes @ 0x1
   912     0071                     	ds	1
   913     0072                     ??_showNumber:
   914     0072                     ASCII_Con@b:	
   915                           ; 1 bytes @ 0x2
   916                           
   917     0072                     ___awmod@dividend:	
   918                           ; 2 bytes @ 0x2
   919                           
   920                           
   921                           ; 2 bytes @ 0x2
   922     0072                     	ds	1
   923     0073                     printUART@cadena:
   924                           
   925                           ; 1 bytes @ 0x3
   926     0073                     	ds	1
   927     0074                     ??_printUART:
   928     0074                     ??___awmod:	
   929                           ; 1 bytes @ 0x4
   930                           
   931     0074                     ASCII_Con@c:	
   932                           ; 1 bytes @ 0x4
   933                           
   934     0074                     ___lmul@multiplicand:	
   935                           ; 2 bytes @ 0x4
   936                           
   937                           
   938                           ; 4 bytes @ 0x4
   939     0074                     	ds	1
   940     0075                     ___awmod@counter:
   941                           
   942                           ; 1 bytes @ 0x5
   943     0075                     	ds	1
   944     0076                     ??_ASCII_Con:
   945     0076                     ___awmod@sign:	
   946                           ; 1 bytes @ 0x6
   947                           
   948                           
   949                           ; 1 bytes @ 0x6
   950     0076                     	ds	1
   951     0077                     ?_showNumbers:
   952     0077                     showNumbers@n:	
   953                           ; 1 bytes @ 0x7
   954                           
   955                           
   956                           ; 2 bytes @ 0x7
   957     0077                     	ds	1
   958     0078                     ??___lmul:
   959     0078                     ___lmul@product:	
   960                           ; 1 bytes @ 0x8
   961                           
   962                           
   963                           ; 4 bytes @ 0x8
   964     0078                     	ds	1
   965     0079                     ??_showNumbers:
   966     0079                     showNumbers@digits:	
   967                           ; 1 bytes @ 0x9
   968                           
   969                           
   970                           ; 1 bytes @ 0x9
   971     0079                     	ds	3
   972     007C                     ??___lldiv:
   973                           
   974                           ; 1 bytes @ 0xC
   975     007C                     	ds	1
   976     007D                     ??___llmod:
   977                           
   978                           ; 1 bytes @ 0xD
   979     007D                     	ds	1
   980                           
   981                           	psect	cstackBANK0
   982     0020                     __pcstackBANK0:
   983     0020                     ?___lldiv:
   984     0020                     ___lldiv@divisor:	
   985                           ; 4 bytes @ 0x0
   986                           
   987     0020                     math7Seg@numbers:	
   988                           ; 4 bytes @ 0x0
   989                           
   990                           
   991                           ; 20 bytes @ 0x0
   992     0020                     	ds	4
   993     0024                     ___lldiv@dividend:
   994                           
   995                           ; 4 bytes @ 0x4
   996     0024                     	ds	4
   997     0028                     ___lldiv@quotient:
   998                           
   999                           ; 4 bytes @ 0x8
  1000     0028                     	ds	4
  1001     002C                     ___lldiv@counter:
  1002                           
  1003                           ; 1 bytes @ 0xC
  1004     002C                     	ds	1
  1005     002D                     ?___llmod:
  1006     002D                     ___llmod@divisor:	
  1007                           ; 4 bytes @ 0xD
  1008                           
  1009                           
  1010                           ; 4 bytes @ 0xD
  1011     002D                     	ds	4
  1012     0031                     ___llmod@dividend:
  1013                           
  1014                           ; 4 bytes @ 0x11
  1015     0031                     	ds	3
  1016     0034                     math7Seg@iBCD:
  1017                           
  1018                           ; 1 bytes @ 0x14
  1019     0034                     	ds	1
  1020     0035                     ___llmod@counter:
  1021                           
  1022                           ; 1 bytes @ 0x15
  1023     0035                     	ds	1
  1024     0036                     ?_mathBCD:
  1025     0036                     mathBCD@iADC:	
  1026                           ; 1 bytes @ 0x16
  1027                           
  1028                           
  1029                           ; 4 bytes @ 0x16
  1030     0036                     	ds	4
  1031     003A                     ??_mathBCD:
  1032                           
  1033                           ; 1 bytes @ 0x1A
  1034     003A                     	ds	4
  1035     003E                     _mathBCD$1403:
  1036                           
  1037                           ; 4 bytes @ 0x1E
  1038     003E                     	ds	4
  1039     0042                     ??_interrupciones:
  1040                           
  1041                           ; 1 bytes @ 0x22
  1042     0042                     	ds	5
  1043     0047                     interrupciones@numberBCD:
  1044                           
  1045                           ; 1 bytes @ 0x27
  1046     0047                     	ds	1
  1047                           
  1048                           	psect	maintext
  1049     043C                     __pmaintext:	
  1050 ;;
  1051 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1052 ;;
  1053 ;; *************** function _main *****************
  1054 ;; Defined at:
  1055 ;;		line 16 in file "main.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : B1F/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1069 ;;      Params:         0       0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels required when called: 5
  1075 ;; This function calls:
  1076 ;;		_init_IO
  1077 ;; This function is called by:
  1078 ;;		Startup code after reset
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082     043C                     _main:	
  1083                           ;psect for function _main
  1084                           
  1085     043C                     l1523:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1088                           
  1089                           
  1090                           ;main.c: 17:     init_IO();
  1091     043C  3182  228B  3184   	fcall	_init_IO
  1092     043F                     l31:	
  1093                           ;main.c: 19:     while(1)
  1094                           
  1095     043F                     l32:	
  1096                           ;main.c: 20:     {;main.c: 21:     }
  1097                           
  1098     043F  2C3F               	goto	l31
  1099     0440  3180  2880         	ljmp	start
  1100     0442                     __end_of_main:
  1101                           
  1102                           	psect	text1
  1103     028B                     __ptext1:	
  1104 ;; *************** function _init_IO *****************
  1105 ;; Defined at:
  1106 ;;		line 4 in file "init.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, pclath, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1120 ;;      Params:         0       0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0
  1123 ;;      Totals:         0       0       0       0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; Hardware stack levels required when called: 4
  1127 ;; This function calls:
  1128 ;;		_TMR0_INIT
  1129 ;;		_init_UART
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135     028B                     _init_IO:	
  1136                           ;psect for function _init_IO
  1137                           
  1138     028B                     l1431:	
  1139                           ;incstack = 0
  1140                           ; Regs used in _init_IO: [wreg+status,2+status,0+pclath+cstack]
  1141                           
  1142                           
  1143                           ;init.c: 7:     OSCCONbits.SCS = 0;
  1144     028B  30FC               	movlw	-4
  1145     028C  0021               	movlb	1	; select bank1
  1146     028D  0599               	andwf	25,f	;volatile
  1147                           
  1148                           ;init.c: 8:     OSCCONbits.IRCF = 0b1101;
  1149     028E  0819               	movf	25,w	;volatile
  1150     028F  3987               	andlw	-121
  1151     0290  3868               	iorlw	104
  1152     0291  0099               	movwf	25	;volatile
  1153     0292                     l1433:
  1154                           
  1155                           ;init.c: 14:     ANSELAbits.ANSA0 = 1;
  1156     0292  0023               	movlb	3	; select bank3
  1157     0293  140C               	bsf	12,0	;volatile
  1158     0294                     l1435:
  1159                           
  1160                           ;init.c: 15:     ANSELAbits.ANSA1 = 0;
  1161     0294  108C               	bcf	12,1	;volatile
  1162     0295                     l1437:
  1163                           
  1164                           ;init.c: 16:     ANSELAbits.ANSA2 = 0;
  1165     0295  110C               	bcf	12,2	;volatile
  1166     0296                     l1439:
  1167                           
  1168                           ;init.c: 17:     ANSELAbits.ANSA3 = 0;
  1169     0296  118C               	bcf	12,3	;volatile
  1170     0297                     l1441:
  1171                           
  1172                           ;init.c: 18:     ANSELAbits.ANSA4 = 0;
  1173     0297  120C               	bcf	12,4	;volatile
  1174     0298                     l1443:
  1175                           
  1176                           ;init.c: 21:     TRISAbits.TRISA0 = 1;
  1177     0298  0021               	movlb	1	; select bank1
  1178     0299  140C               	bsf	12,0	;volatile
  1179     029A                     l1445:
  1180                           
  1181                           ;init.c: 22:     TRISAbits.TRISA1 = 0;
  1182     029A  108C               	bcf	12,1	;volatile
  1183     029B                     l1447:
  1184                           
  1185                           ;init.c: 23:     TRISAbits.TRISA2 = 0;
  1186     029B  110C               	bcf	12,2	;volatile
  1187     029C                     l1449:
  1188                           
  1189                           ;init.c: 24:     TRISAbits.TRISA3 = 0;
  1190     029C  118C               	bcf	12,3	;volatile
  1191     029D                     l1451:
  1192                           
  1193                           ;init.c: 25:     TRISAbits.TRISA4 = 0;
  1194     029D  120C               	bcf	12,4	;volatile
  1195     029E                     l1453:
  1196                           
  1197                           ;init.c: 26:     TRISAbits.TRISA6 = 0;
  1198     029E  130C               	bcf	12,6	;volatile
  1199     029F                     l1455:
  1200                           
  1201                           ;init.c: 27:     TRISAbits.TRISA7 = 0;
  1202     029F  138C               	bcf	12,7	;volatile
  1203     02A0                     l1457:
  1204                           
  1205                           ;init.c: 31:     ANSELBbits.ANSB1 = 0;
  1206     02A0  0023               	movlb	3	; select bank3
  1207     02A1  108D               	bcf	13,1	;volatile
  1208     02A2                     l1459:
  1209                           
  1210                           ;init.c: 32:     ANSELBbits.ANSB2 = 0;
  1211     02A2  110D               	bcf	13,2	;volatile
  1212     02A3                     l1461:
  1213                           
  1214                           ;init.c: 33:     ANSELBbits.ANSB3 = 0;
  1215     02A3  118D               	bcf	13,3	;volatile
  1216     02A4                     l1463:
  1217                           
  1218                           ;init.c: 34:     ANSELBbits.ANSB4 = 0;
  1219     02A4  120D               	bcf	13,4	;volatile
  1220     02A5                     l1465:
  1221                           
  1222                           ;init.c: 35:     ANSELBbits.ANSB5 = 0;
  1223     02A5  128D               	bcf	13,5	;volatile
  1224     02A6                     l1467:
  1225                           
  1226                           ;init.c: 36:     ANSELBbits.ANSB6 = 0;
  1227     02A6  130D               	bcf	13,6	;volatile
  1228     02A7                     l1469:
  1229                           
  1230                           ;init.c: 37:     ANSELBbits.ANSB7 = 0;
  1231     02A7  138D               	bcf	13,7	;volatile
  1232     02A8                     l1471:
  1233                           
  1234                           ;init.c: 40:     TRISBbits.TRISB0 = 0;
  1235     02A8  0021               	movlb	1	; select bank1
  1236     02A9  100D               	bcf	13,0	;volatile
  1237     02AA                     l1473:
  1238                           
  1239                           ;init.c: 41:     TRISBbits.TRISB1 = 1;
  1240     02AA  148D               	bsf	13,1	;volatile
  1241     02AB                     l1475:
  1242                           
  1243                           ;init.c: 42:     TRISBbits.TRISB2 = 0;
  1244     02AB  110D               	bcf	13,2	;volatile
  1245     02AC                     l1477:
  1246                           
  1247                           ;init.c: 43:     TRISBbits.TRISB3 = 0;
  1248     02AC  118D               	bcf	13,3	;volatile
  1249     02AD                     l1479:
  1250                           
  1251                           ;init.c: 44:     TRISBbits.TRISB4 = 0;
  1252     02AD  120D               	bcf	13,4	;volatile
  1253     02AE                     l1481:
  1254                           
  1255                           ;init.c: 45:     TRISBbits.TRISB5 = 0;
  1256     02AE  128D               	bcf	13,5	;volatile
  1257     02AF                     l1483:
  1258                           
  1259                           ;init.c: 46:     TRISBbits.TRISB6 = 0;
  1260     02AF  130D               	bcf	13,6	;volatile
  1261     02B0                     l1485:
  1262                           
  1263                           ;init.c: 47:     TRISBbits.TRISB7 = 0;
  1264     02B0  138D               	bcf	13,7	;volatile
  1265     02B1                     l1487:
  1266                           
  1267                           ;init.c: 50:     ADCON0bits.ADON = 0;
  1268     02B1  101D               	bcf	29,0	;volatile
  1269     02B2                     l1489:
  1270                           
  1271                           ;init.c: 51:     FVRCONbits.FVREN = 1;
  1272     02B2  0022               	movlb	2	; select bank2
  1273     02B3  1797               	bsf	23,7	;volatile
  1274                           
  1275                           ;init.c: 52:     FVRCONbits.ADFVR = 0b11;
  1276     02B4  3003               	movlw	3
  1277     02B5  0497               	iorwf	23,f	;volatile
  1278                           
  1279                           ;init.c: 54:     ADCON1bits.ADCS = 0b001;
  1280     02B6  0021               	movlb	1	; select bank1
  1281     02B7  081E               	movf	30,w	;volatile
  1282     02B8  398F               	andlw	-113
  1283     02B9  3810               	iorlw	16
  1284     02BA  009E               	movwf	30	;volatile
  1285                           
  1286                           ;init.c: 55:     ADCON0bits.CHS = 0b00000;
  1287     02BB  3083               	movlw	-125
  1288     02BC  059D               	andwf	29,f	;volatile
  1289     02BD                     l1491:
  1290                           
  1291                           ;init.c: 56:     ADCON1bits.ADFM = 1;
  1292     02BD  179E               	bsf	30,7	;volatile
  1293     02BE                     l1493:
  1294                           
  1295                           ;init.c: 57:     ADCON1bits.ADNREF = 0;
  1296     02BE  111E               	bcf	30,2	;volatile
  1297                           
  1298                           ;init.c: 58:     ADCON1bits.ADPREF = 0b11;
  1299     02BF  3003               	movlw	3
  1300     02C0  049E               	iorwf	30,f	;volatile
  1301     02C1                     l1495:
  1302                           
  1303                           ;init.c: 60:     PIE1bits.ADIE = 1;
  1304     02C1  1711               	bsf	17,6	;volatile
  1305     02C2                     l1497:
  1306                           
  1307                           ;init.c: 61:     PIR1bits.ADIF = 0;
  1308     02C2  0020               	movlb	0	; select bank0
  1309     02C3  1311               	bcf	17,6	;volatile
  1310     02C4                     l1499:
  1311                           
  1312                           ;init.c: 65:     LATAbits.LATA1 = 1;
  1313     02C4  0022               	movlb	2	; select bank2
  1314     02C5  148C               	bsf	12,1	;volatile
  1315     02C6                     l1501:
  1316                           
  1317                           ;init.c: 66:     LATAbits.LATA2 = 1;
  1318     02C6  150C               	bsf	12,2	;volatile
  1319     02C7                     l1503:
  1320                           
  1321                           ;init.c: 67:     LATAbits.LATA3 = 1;
  1322     02C7  158C               	bsf	12,3	;volatile
  1323     02C8                     l1505:
  1324                           
  1325                           ;init.c: 68:     LATAbits.LATA4 = 0;
  1326     02C8  120C               	bcf	12,4	;volatile
  1327     02C9                     l1507:
  1328                           
  1329                           ;init.c: 69:     LATAbits.LATA6 = 0;
  1330     02C9  130C               	bcf	12,6	;volatile
  1331     02CA                     l1509:
  1332                           
  1333                           ;init.c: 70:     LATAbits.LATA7 = 0;
  1334     02CA  138C               	bcf	12,7	;volatile
  1335     02CB                     l1511:
  1336                           
  1337                           ;init.c: 71:     LATBbits.LATB0 = 0;
  1338     02CB  100D               	bcf	13,0	;volatile
  1339     02CC                     l1513:
  1340                           
  1341                           ;init.c: 72:     LATBbits.LATB3 = 0;
  1342     02CC  118D               	bcf	13,3	;volatile
  1343     02CD                     l1515:
  1344                           
  1345                           ;init.c: 73:     LATBbits.LATB4 = 0;
  1346     02CD  120D               	bcf	13,4	;volatile
  1347     02CE                     l1517:
  1348                           
  1349                           ;init.c: 74:     LATBbits.LATB5 = 0;
  1350     02CE  128D               	bcf	13,5	;volatile
  1351     02CF                     l1519:
  1352                           
  1353                           ;init.c: 76:     init_UART();
  1354     02CF  3184  240B  3182   	fcall	_init_UART
  1355     02D2                     l1521:
  1356                           
  1357                           ;init.c: 77:     TMR0_INIT();
  1358     02D2  3184  241A  3182   	fcall	_TMR0_INIT
  1359     02D5                     l147:
  1360     02D5  0008               	return
  1361     02D6                     __end_of_init_IO:
  1362                           
  1363                           	psect	text2
  1364     040B                     __ptext2:	
  1365 ;; *************** function _init_UART *****************
  1366 ;; Defined at:
  1367 ;;		line 81 in file "init.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1381 ;;      Params:         0       0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0
  1384 ;;      Totals:         0       0       0       0       0       0
  1385 ;;Total ram usage:        0 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 3
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_init_IO
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395     040B                     _init_UART:	
  1396                           ;psect for function _init_UART
  1397                           
  1398     040B                     l1409:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _init_UART: [wreg]
  1401                           
  1402                           
  1403                           ;init.c: 83:     APFCON1bits.TXCKSEL = 0;
  1404     040B  0022               	movlb	2	; select bank2
  1405     040C  101E               	bcf	30,0	;volatile
  1406                           
  1407                           ;init.c: 84:     TXSTAbits.TRMT = 1;
  1408     040D  0023               	movlb	3	; select bank3
  1409     040E  149E               	bsf	30,1	;volatile
  1410                           
  1411                           ;init.c: 85:     TXSTAbits.TXEN = 1;
  1412     040F  169E               	bsf	30,5	;volatile
  1413                           
  1414                           ;init.c: 86:     BAUDCONbits.RCIDL = 1;
  1415     0410  171F               	bsf	31,6	;volatile
  1416                           
  1417                           ;init.c: 89:     TXSTAbits.SYNC = 0;
  1418     0411  121E               	bcf	30,4	;volatile
  1419                           
  1420                           ;init.c: 90:     TXSTAbits.TX9 = 0;
  1421     0412  131E               	bcf	30,6	;volatile
  1422                           
  1423                           ;init.c: 91:     TXSTAbits.BRGH = 1;
  1424     0413  151E               	bsf	30,2	;volatile
  1425     0414                     l1411:
  1426                           
  1427                           ;init.c: 92:     SPBRG = 25;
  1428     0414  3019               	movlw	25
  1429     0415  009B               	movwf	27	;volatile
  1430     0416                     l1413:
  1431                           
  1432                           ;init.c: 93:     RCSTAbits.SPEN = 1;
  1433     0416  179D               	bsf	29,7	;volatile
  1434     0417                     l1415:
  1435                           
  1436                           ;init.c: 94:     PIE1bits.TXIE = 1;
  1437     0417  0021               	movlb	1	; select bank1
  1438     0418  1611               	bsf	17,4	;volatile
  1439     0419                     l150:
  1440     0419  0008               	return
  1441     041A                     __end_of_init_UART:
  1442                           
  1443                           	psect	text3
  1444     041A                     __ptext3:	
  1445 ;; *************** function _TMR0_INIT *****************
  1446 ;; Defined at:
  1447 ;;		line 98 in file "init.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1461 ;;      Params:         0       0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0
  1464 ;;      Totals:         0       0       0       0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 3
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_init_IO
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475     041A                     _TMR0_INIT:	
  1476                           ;psect for function _TMR0_INIT
  1477                           
  1478     041A                     l1417:	
  1479                           ;incstack = 0
  1480                           ; Regs used in _TMR0_INIT: [wreg+status,2+status,0]
  1481                           
  1482                           
  1483                           ;init.c: 100:      OPTION_REGbits.TMR0CS = 0;
  1484     041A  0021               	movlb	1	; select bank1
  1485     041B  1295               	bcf	21,5	;volatile
  1486                           
  1487                           ;init.c: 101:      OPTION_REGbits.PSA = 0;
  1488     041C  1195               	bcf	21,3	;volatile
  1489     041D                     l1419:
  1490                           
  1491                           ;init.c: 102:      OPTION_REGbits.PS = 0b111;
  1492     041D  3007               	movlw	7
  1493     041E  0495               	iorwf	21,f	;volatile
  1494     041F                     l1421:
  1495                           
  1496                           ;init.c: 104:      INTCONbits.GIE = 1;
  1497     041F  178B               	bsf	11,7	;volatile
  1498     0420                     l1423:
  1499                           
  1500                           ;init.c: 105:      INTCONbits.PEIE = 1;
  1501     0420  170B               	bsf	11,6	;volatile
  1502     0421                     l1425:
  1503                           
  1504                           ;init.c: 106:      INTCONbits.TMR0IE = 1;
  1505     0421  168B               	bsf	11,5	;volatile
  1506     0422                     l1427:
  1507                           
  1508                           ;init.c: 107:      INTCONbits.TMR0IF = 0;
  1509     0422  110B               	bcf	11,2	;volatile
  1510     0423                     l1429:
  1511                           
  1512                           ;init.c: 109:      TMR0 = 158;
  1513     0423  309E               	movlw	158
  1514     0424  0020               	movlb	0	; select bank0
  1515     0425  0095               	movwf	21	;volatile
  1516     0426                     l153:
  1517     0426  0008               	return
  1518     0427                     __end_of_TMR0_INIT:
  1519                           
  1520                           	psect	intentry
  1521     0004                     __pintentry:	
  1522 ;; *************** function _interrupciones *****************
  1523 ;; Defined at:
  1524 ;;		line 26 in file "main.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  numberBCD       1   39[BANK0 ] PTR unsigned short 
  1529 ;;		 -> mathBCD@r(6), 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1539 ;;      Params:         0       0       0       0       0       0
  1540 ;;      Locals:         0       1       0       0       0       0
  1541 ;;      Temps:          0       5       0       0       0       0
  1542 ;;      Totals:         0       6       0       0       0       0
  1543 ;;Total ram usage:        6 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 2
  1546 ;; This function calls:
  1547 ;;		_ASCII_Con
  1548 ;;		_math7Seg
  1549 ;;		_mathBCD
  1550 ;;		_printUART
  1551 ;;		_readADC
  1552 ;;		_showNumbers
  1553 ;; This function is called by:
  1554 ;;		Interrupt level 1
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558     0004                     _interrupciones:
  1559                           
  1560                           ;incstack = 0
  1561     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1562                           
  1563                           ; Regs used in _interrupciones: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1564     0005  3180               	pagesel	$
  1565     0006                     i1l1375:
  1566                           
  1567                           ;main.c: 29:     static int count = 0;;main.c: 30:     static unsigned short* displayDat
      +                          a;;main.c: 31:     static unsigned char* Cadena;;main.c: 33:     if(INTCONbits.TMR0IF ==
      +                           1){
  1568     0006  1D0B               	btfss	11,2	;volatile
  1569     0007  2809               	goto	u99_21
  1570     0008  280A               	goto	u99_20
  1571     0009                     u99_21:
  1572     0009  2828               	goto	i1l45
  1573     000A                     u99_20:
  1574     000A                     i1l1377:
  1575                           
  1576                           ;main.c: 34:         if(count == 100)
  1577     000A  3064               	movlw	100
  1578     000B  0020               	movlb	0	; select bank0
  1579     000C  064A               	xorwf	interrupciones@count,w
  1580     000D  044B               	iorwf	interrupciones@count+1,w
  1581     000E  1D03               	btfss	3,2
  1582     000F  2811               	goto	u100_21
  1583     0010  2812               	goto	u100_20
  1584     0011                     u100_21:
  1585     0011  2818               	goto	i1l1383
  1586     0012                     u100_20:
  1587     0012                     i1l1379:
  1588                           
  1589                           ;main.c: 35:         {;main.c: 36:             readADC();
  1590     0012  3184  2442  3180   	fcall	_readADC
  1591     0015                     i1l1381:
  1592                           
  1593                           ;main.c: 37:             count = 0;
  1594     0015  0020               	movlb	0	; select bank0
  1595     0016  01CA               	clrf	interrupciones@count
  1596     0017  01CB               	clrf	interrupciones@count+1
  1597     0018                     i1l1383:
  1598                           
  1599                           ;main.c: 39:         count++;
  1600     0018  3001               	movlw	1
  1601     0019  07CA               	addwf	interrupciones@count,f
  1602     001A  3000               	movlw	0
  1603     001B  3DCB               	addwfc	interrupciones@count+1,f
  1604     001C                     i1l1385:
  1605                           
  1606                           ;main.c: 40:         TMR0 = 217;
  1607     001C  30D9               	movlw	217
  1608     001D  0095               	movwf	21	;volatile
  1609     001E                     i1l1387:
  1610                           
  1611                           ;main.c: 41:         INTCONbits.TMR0IF = 0;
  1612     001E  110B               	bcf	11,2	;volatile
  1613     001F                     i1l1389:
  1614                           
  1615                           ;main.c: 42:         showNumbers(displayData, count);
  1616     001F  084B               	movf	interrupciones@count+1,w
  1617     0020  00F8               	movwf	showNumbers@n+1
  1618     0021  084A               	movf	interrupciones@count,w
  1619     0022  00F7               	movwf	showNumbers@n
  1620     0023  084D               	movf	interrupciones@displayData,w
  1621     0024  3181  217E  3180   	fcall	_showNumbers
  1622     0027  287E               	goto	i1l47
  1623     0028                     i1l45:	
  1624                           ;main.c: 44:     }
  1625                           
  1626                           
  1627                           ;main.c: 45:     if(PIR1bits.ADIF == 1){
  1628     0028  0020               	movlb	0	; select bank0
  1629     0029  1F11               	btfss	17,6	;volatile
  1630     002A  282C               	goto	u101_21
  1631     002B  282D               	goto	u101_20
  1632     002C                     u101_21:
  1633     002C  2878               	goto	i1l48
  1634     002D                     u101_20:
  1635     002D                     i1l1393:
  1636                           
  1637                           ;main.c: 47:         PIR1bits.ADIF = 0;
  1638     002D  1311               	bcf	17,6	;volatile
  1639                           
  1640                           ;main.c: 48:         ADCON0bits.ADON = 0;
  1641     002E  0021               	movlb	1	; select bank1
  1642     002F  101D               	bcf	29,0	;volatile
  1643     0030                     i1l1395:
  1644                           
  1645                           ;main.c: 50:         unsigned short *numberBCD =
  1646     0030  081B               	movf	27,w	;volatile
  1647     0031  0020               	movlb	0	; select bank0
  1648     0032  00C2               	movwf	??_interrupciones
  1649     0033  01C3               	clrf	??_interrupciones+1
  1650     0034  0021               	movlb	1	; select bank1
  1651     0035  081C               	movf	28,w	;volatile
  1652     0036  0020               	movlb	0	; select bank0
  1653     0037  00C4               	movwf	??_interrupciones+2
  1654     0038  01C5               	clrf	??_interrupciones+3
  1655     0039  0844               	movf	??_interrupciones+2,w
  1656     003A  00C5               	movwf	??_interrupciones+3
  1657     003B  01C4               	clrf	??_interrupciones+2
  1658     003C  0842               	movf	??_interrupciones,w
  1659     003D  0744               	addwf	??_interrupciones+2,w
  1660     003E  00B6               	movwf	mathBCD@iADC
  1661     003F  0843               	movf	??_interrupciones+1,w
  1662     0040  3D45               	addwfc	??_interrupciones+3,w
  1663     0041  00B7               	movwf	mathBCD@iADC+1
  1664     0042  01B8               	clrf	mathBCD@iADC+2
  1665     0043  1BB7               	btfsc	mathBCD@iADC+1,7
  1666     0044  03B8               	decf	mathBCD@iADC+2,f
  1667     0045  0838               	movf	mathBCD@iADC+2,w
  1668     0046  00B9               	movwf	mathBCD@iADC+3
  1669     0047  3180  209A  3180   	fcall	_mathBCD
  1670     004A  0020               	movlb	0	; select bank0
  1671     004B  00C7               	movwf	interrupciones@numberBCD
  1672     004C                     i1l1397:
  1673                           
  1674                           ;main.c: 52:         displayData = math7Seg(numberBCD);
  1675     004C  0847               	movf	interrupciones@numberBCD,w
  1676     004D  3183  235C  3180   	fcall	_math7Seg
  1677     0050  0020               	movlb	0	; select bank0
  1678     0051  00CD               	movwf	interrupciones@displayData
  1679     0052                     i1l1399:
  1680                           
  1681                           ;main.c: 54:         Cadena = ASCII_Con(numberBCD[2], numberBCD[1], numberBCD[0]);
  1682     0052  0847               	movf	interrupciones@numberBCD,w
  1683     0053  3E04               	addlw	4
  1684     0054  0086               	movwf	6
  1685     0055  0187               	clrf	7
  1686     0056  3F40               	moviw [0]fsr1
  1687     0057  00F0               	movwf	ASCII_Con@a
  1688     0058  3F41               	moviw [1]fsr1
  1689     0059  00F1               	movwf	ASCII_Con@a+1
  1690     005A  0847               	movf	interrupciones@numberBCD,w
  1691     005B  3E02               	addlw	2
  1692     005C  0086               	movwf	6
  1693     005D  0187               	clrf	7
  1694     005E  3F40               	moviw [0]fsr1
  1695     005F  00F2               	movwf	ASCII_Con@b
  1696     0060  3F41               	moviw [1]fsr1
  1697     0061  00F3               	movwf	ASCII_Con@b+1
  1698     0062  0847               	movf	interrupciones@numberBCD,w
  1699     0063  0086               	movwf	6
  1700     0064  0187               	clrf	7
  1701     0065  3F40               	moviw [0]fsr1
  1702     0066  00F4               	movwf	ASCII_Con@c
  1703     0067  3F41               	moviw [1]fsr1
  1704     0068  00F5               	movwf	ASCII_Con@c+1
  1705     0069  3183  23F8  3180   	fcall	_ASCII_Con
  1706     006C  0020               	movlb	0	; select bank0
  1707     006D  00CC               	movwf	interrupciones@Cadena
  1708     006E                     i1l1401:
  1709                           
  1710                           ;main.c: 55:         printUART(4, Cadena);
  1711     006E  3004               	movlw	4
  1712     006F  00F1               	movwf	printUART@n
  1713     0070  3000               	movlw	0
  1714     0071  00F2               	movwf	printUART@n+1
  1715     0072  084C               	movf	interrupciones@Cadena,w
  1716     0073  00F3               	movwf	printUART@cadena
  1717     0074  3183  23C4  3180   	fcall	_printUART
  1718     0077  287E               	goto	i1l47
  1719     0078                     i1l48:	
  1720                           ;main.c: 57:     }
  1721                           
  1722                           
  1723                           ;main.c: 58:     if(PIR1bits.TXIF == 1)
  1724     0078  1E11               	btfss	17,4	;volatile
  1725     0079  287B               	goto	u102_21
  1726     007A  287C               	goto	u102_20
  1727     007B                     u102_21:
  1728     007B  287E               	goto	i1l47
  1729     007C                     u102_20:
  1730     007C                     i1l1405:
  1731                           
  1732                           ;main.c: 59:     {;main.c: 60:         PIR1bits.TXIF = 0;
  1733     007C  1211               	bcf	17,4	;volatile
  1734     007D  286E               	goto	i1l1401
  1735     007E                     i1l47:
  1736     007E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1737     007F  0009               	retfie
  1738     0080                     __end_of_interrupciones:
  1739                           
  1740                           	psect	text5
  1741     017E                     __ptext5:	
  1742 ;; *************** function _showNumbers *****************
  1743 ;; Defined at:
  1744 ;;		line 79 in file "funtions.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  digits          1    wreg     PTR unsigned short 
  1747 ;;		 -> NULL(0), math7Seg@r(6), 
  1748 ;;  n               2    7[COMMON] int 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  digits          1    9[COMMON] PTR unsigned short 
  1751 ;;		 -> NULL(0), math7Seg@r(6), 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1761 ;;      Params:         2       0       0       0       0       0
  1762 ;;      Locals:         1       0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0
  1764 ;;      Totals:         3       0       0       0       0       0
  1765 ;;Total ram usage:        3 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 1
  1768 ;; This function calls:
  1769 ;;		___awmod
  1770 ;;		_showNumber
  1771 ;; This function is called by:
  1772 ;;		_interrupciones
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776     017E                     _showNumbers:	
  1777                           ;psect for function _showNumbers
  1778                           
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _showNumbers: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1782                           ;showNumbers@digits stored from wreg
  1783     017E  00F9               	movwf	showNumbers@digits
  1784     017F                     i1l1303:
  1785                           
  1786                           ;funtions.c: 83:     if(n%3 == 0)
  1787     017F  3003               	movlw	3
  1788     0180  00F0               	movwf	___awmod@divisor
  1789     0181  3000               	movlw	0
  1790     0182  00F1               	movwf	___awmod@divisor+1
  1791     0183  0878               	movf	showNumbers@n+1,w
  1792     0184  00F3               	movwf	___awmod@dividend+1
  1793     0185  0877               	movf	showNumbers@n,w
  1794     0186  00F2               	movwf	___awmod@dividend
  1795     0187  3182  2238  3181   	fcall	___awmod
  1796     018A  0870               	movf	?___awmod,w
  1797     018B  0471               	iorwf	?___awmod+1,w
  1798     018C  1D03               	btfss	3,2
  1799     018D  298F               	goto	u91_21
  1800     018E  2990               	goto	u91_20
  1801     018F                     u91_21:
  1802     018F  299D               	goto	i1l1311
  1803     0190                     u91_20:
  1804     0190                     i1l1305:
  1805                           
  1806                           ;funtions.c: 84:     {;funtions.c: 85:         showNumber(digits[0]);
  1807     0190  0879               	movf	showNumbers@digits,w
  1808     0191  0086               	movwf	6
  1809     0192  0187               	clrf	7
  1810     0193  3F40               	moviw [0]fsr1
  1811     0194  00F0               	movwf	showNumber@digit
  1812     0195  3F41               	moviw [1]fsr1
  1813     0196  00F1               	movwf	showNumber@digit+1
  1814     0197  3183  2321  3181   	fcall	_showNumber
  1815     019A                     i1l1307:
  1816                           
  1817                           ;funtions.c: 86:         LATAbits.LATA3 = 0;
  1818     019A  0022               	movlb	2	; select bank2
  1819     019B  118C               	bcf	12,3	;volatile
  1820     019C                     i1l1309:
  1821                           
  1822                           ;funtions.c: 87:         LATAbits.LATA1 = 1;
  1823     019C  148C               	bsf	12,1	;volatile
  1824     019D                     i1l1311:
  1825                           
  1826                           ;funtions.c: 89:     if(n%3 == 1)
  1827     019D  3003               	movlw	3
  1828     019E  00F0               	movwf	___awmod@divisor
  1829     019F  3000               	movlw	0
  1830     01A0  00F1               	movwf	___awmod@divisor+1
  1831     01A1  0878               	movf	showNumbers@n+1,w
  1832     01A2  00F3               	movwf	___awmod@dividend+1
  1833     01A3  0877               	movf	showNumbers@n,w
  1834     01A4  00F2               	movwf	___awmod@dividend
  1835     01A5  3182  2238  3181   	fcall	___awmod
  1836     01A8  0370               	decf	?___awmod,w
  1837     01A9  0471               	iorwf	?___awmod+1,w
  1838     01AA  1D03               	btfss	3,2
  1839     01AB  29AD               	goto	u92_21
  1840     01AC  29AE               	goto	u92_20
  1841     01AD                     u92_21:
  1842     01AD  29BC               	goto	i1l1319
  1843     01AE                     u92_20:
  1844     01AE                     i1l1313:
  1845                           
  1846                           ;funtions.c: 90:     {;funtions.c: 91:         showNumber(digits[1]);
  1847     01AE  0879               	movf	showNumbers@digits,w
  1848     01AF  3E02               	addlw	2
  1849     01B0  0086               	movwf	6
  1850     01B1  0187               	clrf	7
  1851     01B2  3F40               	moviw [0]fsr1
  1852     01B3  00F0               	movwf	showNumber@digit
  1853     01B4  3F41               	moviw [1]fsr1
  1854     01B5  00F1               	movwf	showNumber@digit+1
  1855     01B6  3183  2321  3181   	fcall	_showNumber
  1856     01B9                     i1l1315:
  1857                           
  1858                           ;funtions.c: 92:         LATAbits.LATA2 = 0;
  1859     01B9  0022               	movlb	2	; select bank2
  1860     01BA  110C               	bcf	12,2	;volatile
  1861     01BB                     i1l1317:
  1862                           
  1863                           ;funtions.c: 93:         LATAbits.LATA3 = 1;
  1864     01BB  158C               	bsf	12,3	;volatile
  1865     01BC                     i1l1319:
  1866                           
  1867                           ;funtions.c: 95:     if(n%3 == 2)
  1868     01BC  3003               	movlw	3
  1869     01BD  00F0               	movwf	___awmod@divisor
  1870     01BE  3000               	movlw	0
  1871     01BF  00F1               	movwf	___awmod@divisor+1
  1872     01C0  0878               	movf	showNumbers@n+1,w
  1873     01C1  00F3               	movwf	___awmod@dividend+1
  1874     01C2  0877               	movf	showNumbers@n,w
  1875     01C3  00F2               	movwf	___awmod@dividend
  1876     01C4  3182  2238  3181   	fcall	___awmod
  1877     01C7  3002               	movlw	2
  1878     01C8  0670               	xorwf	?___awmod,w
  1879     01C9  0471               	iorwf	?___awmod+1,w
  1880     01CA  1D03               	btfss	3,2
  1881     01CB  29CD               	goto	u93_21
  1882     01CC  29CE               	goto	u93_20
  1883     01CD                     u93_21:
  1884     01CD  29DC               	goto	i1l80
  1885     01CE                     u93_20:
  1886     01CE                     i1l1321:
  1887                           
  1888                           ;funtions.c: 96:     {;funtions.c: 97:         showNumber(digits[2]);
  1889     01CE  0879               	movf	showNumbers@digits,w
  1890     01CF  3E04               	addlw	4
  1891     01D0  0086               	movwf	6
  1892     01D1  0187               	clrf	7
  1893     01D2  3F40               	moviw [0]fsr1
  1894     01D3  00F0               	movwf	showNumber@digit
  1895     01D4  3F41               	moviw [1]fsr1
  1896     01D5  00F1               	movwf	showNumber@digit+1
  1897     01D6  3183  2321  3181   	fcall	_showNumber
  1898     01D9                     i1l1323:
  1899                           
  1900                           ;funtions.c: 98:         LATAbits.LATA1 = 0;
  1901     01D9  0022               	movlb	2	; select bank2
  1902     01DA  108C               	bcf	12,1	;volatile
  1903     01DB                     i1l1325:
  1904                           
  1905                           ;funtions.c: 99:         LATAbits.LATA2 = 1;
  1906     01DB  150C               	bsf	12,2	;volatile
  1907     01DC                     i1l80:
  1908     01DC  0008               	return
  1909     01DD                     __end_of_showNumbers:
  1910                           
  1911                           	psect	text6
  1912     0321                     __ptext6:	
  1913 ;; *************** function _showNumber *****************
  1914 ;; Defined at:
  1915 ;;		line 60 in file "funtions.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  digit           2    0[COMMON] unsigned short 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1929 ;;      Params:         2       0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0
  1931 ;;      Temps:          1       0       0       0       0       0
  1932 ;;      Totals:         3       0       0       0       0       0
  1933 ;;Total ram usage:        3 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_showNumbers
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942     0321                     _showNumber:	
  1943                           ;psect for function _showNumber
  1944                           
  1945     0321                     i1l1085:	
  1946                           ;incstack = 0
  1947                           ; Regs used in _showNumber: [wreg+status,2+status,0]
  1948                           
  1949                           
  1950                           ;funtions.c: 61:     LATAbits.LATA4 = !!(digit & (1 << 6));
  1951     0321  1B70               	btfsc	showNumber@digit,6
  1952     0322  2B24               	goto	u52_21
  1953     0323  2B27               	goto	u52_20
  1954     0324                     u52_21:
  1955     0324  0022               	movlb	2	; select bank2
  1956     0325  160C               	bsf	12,4	;volatile
  1957     0326  2B29               	goto	u53_24
  1958     0327                     u52_20:
  1959     0327  0022               	movlb	2	; select bank2
  1960     0328  120C               	bcf	12,4	;volatile
  1961     0329                     u53_24:
  1962                           
  1963                           ;funtions.c: 62:     LATAbits.LATA6 = !!(digit & (1 << 5));
  1964     0329  1AF0               	btfsc	showNumber@digit,5
  1965     032A  2B2C               	goto	u54_21
  1966     032B  2B2F               	goto	u54_20
  1967     032C                     u54_21:
  1968     032C  0022               	movlb	2	; select bank2
  1969     032D  170C               	bsf	12,6	;volatile
  1970     032E  2B31               	goto	u55_24
  1971     032F                     u54_20:
  1972     032F  0022               	movlb	2	; select bank2
  1973     0330  130C               	bcf	12,6	;volatile
  1974     0331                     u55_24:
  1975                           
  1976                           ;funtions.c: 63:     LATAbits.LATA7 = !!(digit & (1 << 4));
  1977     0331  1A70               	btfsc	showNumber@digit,4
  1978     0332  2B34               	goto	u56_21
  1979     0333  2B37               	goto	u56_20
  1980     0334                     u56_21:
  1981     0334  0022               	movlb	2	; select bank2
  1982     0335  178C               	bsf	12,7	;volatile
  1983     0336  2B39               	goto	u57_24
  1984     0337                     u56_20:
  1985     0337  0022               	movlb	2	; select bank2
  1986     0338  138C               	bcf	12,7	;volatile
  1987     0339                     u57_24:
  1988                           
  1989                           ;funtions.c: 64:     LATBbits.LATB0 = !!(digit & (1 << 3));
  1990     0339  19F0               	btfsc	showNumber@digit,3
  1991     033A  2B3C               	goto	u58_21
  1992     033B  2B3F               	goto	u58_20
  1993     033C                     u58_21:
  1994     033C  0022               	movlb	2	; select bank2
  1995     033D  140D               	bsf	13,0	;volatile
  1996     033E  2B41               	goto	u59_24
  1997     033F                     u58_20:
  1998     033F  0022               	movlb	2	; select bank2
  1999     0340  100D               	bcf	13,0	;volatile
  2000     0341                     u59_24:
  2001                           
  2002                           ;funtions.c: 65:     LATBbits.LATB3 = !!(digit & (1 << 2));
  2003     0341  1970               	btfsc	showNumber@digit,2
  2004     0342  2B44               	goto	u60_21
  2005     0343  2B47               	goto	u60_20
  2006     0344                     u60_21:
  2007     0344  0022               	movlb	2	; select bank2
  2008     0345  158D               	bsf	13,3	;volatile
  2009     0346  2B49               	goto	u61_24
  2010     0347                     u60_20:
  2011     0347  0022               	movlb	2	; select bank2
  2012     0348  118D               	bcf	13,3	;volatile
  2013     0349                     u61_24:
  2014                           
  2015                           ;funtions.c: 66:     LATBbits.LATB4 = !!(digit & (1 << 1));
  2016     0349  18F0               	btfsc	showNumber@digit,1
  2017     034A  2B4C               	goto	u62_21
  2018     034B  2B4F               	goto	u62_20
  2019     034C                     u62_21:
  2020     034C  0022               	movlb	2	; select bank2
  2021     034D  160D               	bsf	13,4	;volatile
  2022     034E  2B51               	goto	u63_24
  2023     034F                     u62_20:
  2024     034F  0022               	movlb	2	; select bank2
  2025     0350  120D               	bcf	13,4	;volatile
  2026     0351                     u63_24:
  2027     0351                     i1l1087:
  2028                           
  2029                           ;funtions.c: 67:     LATBbits.LATB5 = digit & 1;
  2030     0351  0870               	movf	showNumber@digit,w
  2031     0352  3901               	andlw	1
  2032     0353  00F2               	movwf	??_showNumber
  2033     0354  0EF2               	swapf	??_showNumber,f
  2034     0355  0DF2               	rlf	??_showNumber,f
  2035     0356  080D               	movf	13,w	;volatile
  2036     0357  0672               	xorwf	??_showNumber,w
  2037     0358  39DF               	andlw	-33
  2038     0359  0672               	xorwf	??_showNumber,w
  2039     035A  008D               	movwf	13	;volatile
  2040     035B                     i1l74:
  2041     035B  0008               	return
  2042     035C                     __end_of_showNumber:
  2043                           
  2044                           	psect	text7
  2045     0238                     __ptext7:	
  2046 ;; *************** function ___awmod *****************
  2047 ;; Defined at:
  2048 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  divisor         2    0[COMMON] int 
  2051 ;;  dividend        2    2[COMMON] int 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  sign            1    6[COMMON] unsigned char 
  2054 ;;  counter         1    5[COMMON] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2    0[COMMON] int 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2064 ;;      Params:         4       0       0       0       0       0
  2065 ;;      Locals:         2       0       0       0       0       0
  2066 ;;      Temps:          1       0       0       0       0       0
  2067 ;;      Totals:         7       0       0       0       0       0
  2068 ;;Total ram usage:        7 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_showNumbers
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077     0238                     ___awmod:	
  2078                           ;psect for function ___awmod
  2079                           
  2080     0238                     i1l1151:	
  2081                           ;incstack = 0
  2082                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2083                           
  2084     0238  01F6               	clrf	___awmod@sign
  2085     0239                     i1l1153:
  2086     0239  1FF3               	btfss	___awmod@dividend+1,7
  2087     023A  2A3C               	goto	u76_21
  2088     023B  2A3D               	goto	u76_20
  2089     023C                     u76_21:
  2090     023C  2A44               	goto	i1l1159
  2091     023D                     u76_20:
  2092     023D                     i1l1155:
  2093     023D  09F2               	comf	___awmod@dividend,f
  2094     023E  09F3               	comf	___awmod@dividend+1,f
  2095     023F  0AF2               	incf	___awmod@dividend,f
  2096     0240  1903               	skipnz
  2097     0241  0AF3               	incf	___awmod@dividend+1,f
  2098     0242                     i1l1157:
  2099     0242  01F6               	clrf	___awmod@sign
  2100     0243  0AF6               	incf	___awmod@sign,f
  2101     0244                     i1l1159:
  2102     0244  1FF1               	btfss	___awmod@divisor+1,7
  2103     0245  2A47               	goto	u77_21
  2104     0246  2A48               	goto	u77_20
  2105     0247                     u77_21:
  2106     0247  2A4D               	goto	i1l1163
  2107     0248                     u77_20:
  2108     0248                     i1l1161:
  2109     0248  09F0               	comf	___awmod@divisor,f
  2110     0249  09F1               	comf	___awmod@divisor+1,f
  2111     024A  0AF0               	incf	___awmod@divisor,f
  2112     024B  1903               	skipnz
  2113     024C  0AF1               	incf	___awmod@divisor+1,f
  2114     024D                     i1l1163:
  2115     024D  0870               	movf	___awmod@divisor,w
  2116     024E  0471               	iorwf	___awmod@divisor+1,w
  2117     024F  1903               	btfsc	3,2
  2118     0250  2A52               	goto	u78_21
  2119     0251  2A53               	goto	u78_20
  2120     0252                     u78_21:
  2121     0252  2A7C               	goto	i1l1181
  2122     0253                     u78_20:
  2123     0253                     i1l1165:
  2124     0253  01F5               	clrf	___awmod@counter
  2125     0254  0AF5               	incf	___awmod@counter,f
  2126     0255  2A5F               	goto	i1l1171
  2127     0256                     i1l1167:
  2128     0256  3001               	movlw	1
  2129     0257                     u79_25:
  2130     0257  35F0               	lslf	___awmod@divisor,f
  2131     0258  0DF1               	rlf	___awmod@divisor+1,f
  2132     0259  0B89               	decfsz	9,f
  2133     025A  2A57               	goto	u79_25
  2134     025B                     i1l1169:
  2135     025B  3001               	movlw	1
  2136     025C  00F4               	movwf	??___awmod
  2137     025D  0874               	movf	??___awmod,w
  2138     025E  07F5               	addwf	___awmod@counter,f
  2139     025F                     i1l1171:
  2140     025F  1FF1               	btfss	___awmod@divisor+1,7
  2141     0260  2A62               	goto	u80_21
  2142     0261  2A63               	goto	u80_20
  2143     0262                     u80_21:
  2144     0262  2A56               	goto	i1l1167
  2145     0263                     u80_20:
  2146     0263                     i1l1173:
  2147     0263  0871               	movf	___awmod@divisor+1,w
  2148     0264  0273               	subwf	___awmod@dividend+1,w
  2149     0265  1D03               	skipz
  2150     0266  2A69               	goto	u81_25
  2151     0267  0870               	movf	___awmod@divisor,w
  2152     0268  0272               	subwf	___awmod@dividend,w
  2153     0269                     u81_25:
  2154     0269  1C03               	skipc
  2155     026A  2A6C               	goto	u81_21
  2156     026B  2A6D               	goto	u81_20
  2157     026C                     u81_21:
  2158     026C  2A71               	goto	i1l1177
  2159     026D                     u81_20:
  2160     026D                     i1l1175:
  2161     026D  0870               	movf	___awmod@divisor,w
  2162     026E  02F2               	subwf	___awmod@dividend,f
  2163     026F  0871               	movf	___awmod@divisor+1,w
  2164     0270  3BF3               	subwfb	___awmod@dividend+1,f
  2165     0271                     i1l1177:
  2166     0271  3001               	movlw	1
  2167     0272                     u82_25:
  2168     0272  36F1               	lsrf	___awmod@divisor+1,f
  2169     0273  0CF0               	rrf	___awmod@divisor,f
  2170     0274  0B89               	decfsz	9,f
  2171     0275  2A72               	goto	u82_25
  2172     0276                     i1l1179:
  2173     0276  3001               	movlw	1
  2174     0277  02F5               	subwf	___awmod@counter,f
  2175     0278  1D03               	btfss	3,2
  2176     0279  2A7B               	goto	u83_21
  2177     027A  2A7C               	goto	u83_20
  2178     027B                     u83_21:
  2179     027B  2A63               	goto	i1l1173
  2180     027C                     u83_20:
  2181     027C                     i1l1181:
  2182     027C  0876               	movf	___awmod@sign,w
  2183     027D  1903               	btfsc	3,2
  2184     027E  2A80               	goto	u84_21
  2185     027F  2A81               	goto	u84_20
  2186     0280                     u84_21:
  2187     0280  2A86               	goto	i1l1185
  2188     0281                     u84_20:
  2189     0281                     i1l1183:
  2190     0281  09F2               	comf	___awmod@dividend,f
  2191     0282  09F3               	comf	___awmod@dividend+1,f
  2192     0283  0AF2               	incf	___awmod@dividend,f
  2193     0284  1903               	skipnz
  2194     0285  0AF3               	incf	___awmod@dividend+1,f
  2195     0286                     i1l1185:
  2196     0286  0873               	movf	___awmod@dividend+1,w
  2197     0287  00F1               	movwf	?___awmod+1
  2198     0288  0872               	movf	___awmod@dividend,w
  2199     0289  00F0               	movwf	?___awmod
  2200     028A                     i1l469:
  2201     028A  0008               	return
  2202     028B                     __end_of___awmod:
  2203                           
  2204                           	psect	text8
  2205     0442                     __ptext8:	
  2206 ;; *************** function _readADC *****************
  2207 ;; Defined at:
  2208 ;;		line 107 in file "funtions.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		None
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2222 ;;      Params:         0       0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0
  2225 ;;      Totals:         0       0       0       0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_interrupciones
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235     0442                     _readADC:	
  2236                           ;psect for function _readADC
  2237                           
  2238     0442                     i1l1301:	
  2239                           ;incstack = 0
  2240                           ; Regs used in _readADC: []
  2241                           
  2242                           
  2243                           ;funtions.c: 109:     ADCON0bits.ADON = 1;
  2244     0442  0021               	movlb	1	; select bank1
  2245     0443  141D               	bsf	29,0	;volatile
  2246                           
  2247                           ;funtions.c: 111:     ADCON0bits.GO_nDONE = 1;
  2248     0444  149D               	bsf	29,1	;volatile
  2249     0445                     i1l83:
  2250     0445  0008               	return
  2251     0446                     __end_of_readADC:
  2252                           
  2253                           	psect	text9
  2254     03C4                     __ptext9:	
  2255 ;; *************** function _printUART *****************
  2256 ;; Defined at:
  2257 ;;		line 128 in file "funtions.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  n               2    1[COMMON] int 
  2260 ;;  cadena          1    3[COMMON] PTR unsigned char 
  2261 ;;		 -> NULL(0), ASCII_Con@r(7), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2273 ;;      Params:         3       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0
  2275 ;;      Temps:          1       0       0       0       0       0
  2276 ;;      Totals:         4       0       0       0       0       0
  2277 ;;Total ram usage:        4 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 1
  2280 ;; This function calls:
  2281 ;;		_UART_write
  2282 ;; This function is called by:
  2283 ;;		_interrupciones
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287     03C4                     _printUART:	
  2288                           ;psect for function _printUART
  2289                           
  2290     03C4                     i1l1363:	
  2291                           ;incstack = 0
  2292                           ; Regs used in _printUART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2293                           
  2294                           
  2295                           ;funtions.c: 128: void printUART(int n, unsigned char* cadena);funtions.c: 129: {;funtio
      +                          ns.c: 130:     static int i = 0;;funtions.c: 131:     if (i == n)
  2296     03C4  0872               	movf	printUART@n+1,w
  2297     03C5  0020               	movlb	0	; select bank0
  2298     03C6  0649               	xorwf	printUART@i+1,w
  2299     03C7  1D03               	skipz
  2300     03C8  2BCB               	goto	u98_25
  2301     03C9  0871               	movf	printUART@n,w
  2302     03CA  0648               	xorwf	printUART@i,w
  2303     03CB                     u98_25:
  2304     03CB  1D03               	skipz
  2305     03CC  2BCE               	goto	u98_21
  2306     03CD  2BCF               	goto	u98_20
  2307     03CE                     u98_21:
  2308     03CE  2BD2               	goto	i1l1369
  2309     03CF                     u98_20:
  2310     03CF                     i1l1365:
  2311                           
  2312                           ;funtions.c: 132:     {;funtions.c: 133:         i = 0;
  2313     03CF  01C8               	clrf	printUART@i
  2314     03D0  01C9               	clrf	printUART@i+1
  2315     03D1  2BE3               	goto	i1l95
  2316     03D2                     i1l1369:
  2317                           
  2318                           ;funtions.c: 137:     UART_write(*(cadena + i));
  2319     03D2  0848               	movf	printUART@i,w
  2320     03D3  0773               	addwf	printUART@cadena,w
  2321     03D4  00F4               	movwf	??_printUART
  2322     03D5  0874               	movf	??_printUART,w
  2323     03D6  0086               	movwf	6
  2324     03D7  0187               	clrf	7
  2325     03D8  0801               	movf	1,w
  2326     03D9  3184  2427  3183   	fcall	_UART_write
  2327     03DC                     i1l1371:
  2328                           
  2329                           ;funtions.c: 138:     i = i+1;
  2330     03DC  0020               	movlb	0	; select bank0
  2331     03DD  0848               	movf	printUART@i,w
  2332     03DE  3E01               	addlw	1
  2333     03DF  00C8               	movwf	printUART@i
  2334     03E0  3000               	movlw	0
  2335     03E1  3D49               	addwfc	printUART@i+1,w
  2336     03E2  00C9               	movwf	printUART@i+1
  2337     03E3                     i1l95:
  2338     03E3  0008               	return
  2339     03E4                     __end_of_printUART:
  2340                           
  2341                           	psect	text10
  2342     0427                     __ptext10:	
  2343 ;; *************** function _UART_write *****************
  2344 ;; Defined at:
  2345 ;;		line 119 in file "funtions.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  c               1    wreg     unsigned char 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  c               1    0[COMMON] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2359 ;;      Params:         0       0       0       0       0       0
  2360 ;;      Locals:         1       0       0       0       0       0
  2361 ;;      Temps:          0       0       0       0       0       0
  2362 ;;      Totals:         1       0       0       0       0       0
  2363 ;;Total ram usage:        1 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_printUART
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372     0427                     _UART_write:	
  2373                           ;psect for function _UART_write
  2374                           
  2375                           
  2376                           ;incstack = 0
  2377                           ; Regs used in _UART_write: [wreg]
  2378                           ;UART_write@c stored from wreg
  2379     0427  00F0               	movwf	UART_write@c
  2380     0428                     i1l1089:
  2381                           
  2382                           ;funtions.c: 120:     TXREG = c;
  2383     0428  0870               	movf	UART_write@c,w
  2384     0429  0023               	movlb	3	; select bank3
  2385     042A  009A               	movwf	26	;volatile
  2386     042B                     i1l86:	
  2387                           ;funtions.c: 121:     while (TXSTAbits.TRMT == 0);
  2388                           
  2389     042B  1C9E               	btfss	30,1	;volatile
  2390     042C  2C2E               	goto	u64_21
  2391     042D  2C2F               	goto	u64_20
  2392     042E                     u64_21:
  2393     042E  2C2B               	goto	i1l86
  2394     042F                     u64_20:
  2395     042F                     i1l89:
  2396     042F  0008               	return
  2397     0430                     __end_of_UART_write:
  2398                           
  2399                           	psect	text11
  2400     009A                     __ptext11:	
  2401 ;; *************** function _mathBCD *****************
  2402 ;; Defined at:
  2403 ;;		line 12 in file "funtions.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  iADC            4   22[BANK0 ] unsigned long 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      PTR unsigned short 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2417 ;;      Params:         0       4       0       0       0       0
  2418 ;;      Locals:         0       4       0       0       0       0
  2419 ;;      Temps:          0       4       0       0       0       0
  2420 ;;      Totals:         0      12       0       0       0       0
  2421 ;;Total ram usage:       12 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 1
  2424 ;; This function calls:
  2425 ;;		___lldiv
  2426 ;;		___llmod
  2427 ;;		___lmul
  2428 ;; This function is called by:
  2429 ;;		_interrupciones
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433     009A                     _mathBCD:	
  2434                           ;psect for function _mathBCD
  2435                           
  2436     009A                     i1l1327:	
  2437                           ;incstack = 0
  2438                           ; Regs used in _mathBCD: [wreg+status,2+status,0+pclath+cstack]
  2439                           
  2440                           
  2441                           ;funtions.c: 14:     static unsigned short r[3];;funtions.c: 15:     r[0] = ((iADC * 100
      +                          0) / 1024) % 10;
  2442     009A  3000               	movlw	0
  2443     009B  0020               	movlb	0	; select bank0
  2444     009C  00B0               	movwf	___llmod@divisor+3
  2445     009D  3000               	movlw	0
  2446     009E  00AF               	movwf	___llmod@divisor+2
  2447     009F  3000               	movlw	0
  2448     00A0  00AE               	movwf	___llmod@divisor+1
  2449     00A1  300A               	movlw	10
  2450     00A2  00AD               	movwf	___llmod@divisor
  2451     00A3  3000               	movlw	0
  2452     00A4  00F7               	movwf	___lmul@multiplicand+3
  2453     00A5  3000               	movlw	0
  2454     00A6  00F6               	movwf	___lmul@multiplicand+2
  2455     00A7  3003               	movlw	3
  2456     00A8  00F5               	movwf	___lmul@multiplicand+1
  2457     00A9  30E8               	movlw	232
  2458     00AA  00F4               	movwf	___lmul@multiplicand
  2459     00AB  0839               	movf	mathBCD@iADC+3,w
  2460     00AC  00F3               	movwf	___lmul@multiplier+3
  2461     00AD  0838               	movf	mathBCD@iADC+2,w
  2462     00AE  00F2               	movwf	___lmul@multiplier+2
  2463     00AF  0837               	movf	mathBCD@iADC+1,w
  2464     00B0  00F1               	movwf	___lmul@multiplier+1
  2465     00B1  0836               	movf	mathBCD@iADC,w
  2466     00B2  00F0               	movwf	___lmul@multiplier
  2467     00B3  3183  2391  3180   	fcall	___lmul
  2468     00B6  0870               	movf	?___lmul,w
  2469     00B7  0020               	movlb	0	; select bank0
  2470     00B8  00BA               	movwf	??_mathBCD
  2471     00B9  0871               	movf	?___lmul+1,w
  2472     00BA  00BB               	movwf	??_mathBCD+1
  2473     00BB  0872               	movf	?___lmul+2,w
  2474     00BC  00BC               	movwf	??_mathBCD+2
  2475     00BD  0873               	movf	?___lmul+3,w
  2476     00BE  00BD               	movwf	??_mathBCD+3
  2477     00BF  300A               	movlw	10
  2478     00C0                     u94_25:
  2479     00C0  36BD               	lsrf	??_mathBCD+3,f
  2480     00C1  0CBC               	rrf	??_mathBCD+2,f
  2481     00C2  0CBB               	rrf	??_mathBCD+1,f
  2482     00C3  0CBA               	rrf	??_mathBCD,f
  2483     00C4                     u94_20:
  2484     00C4  0B89               	decfsz	9,f
  2485     00C5  28C0               	goto	u94_25
  2486     00C6  083D               	movf	??_mathBCD+3,w
  2487     00C7  00B4               	movwf	___llmod@dividend+3
  2488     00C8  083C               	movf	??_mathBCD+2,w
  2489     00C9  00B3               	movwf	___llmod@dividend+2
  2490     00CA  083B               	movf	??_mathBCD+1,w
  2491     00CB  00B2               	movwf	___llmod@dividend+1
  2492     00CC  083A               	movf	??_mathBCD,w
  2493     00CD  00B1               	movwf	___llmod@dividend
  2494     00CE  3182  22D6  3180   	fcall	___llmod
  2495     00D1  0020               	movlb	0	; select bank0
  2496     00D2  082E               	movf	?___llmod+1,w
  2497     00D3  00DC               	movwf	mathBCD@r+1
  2498     00D4  082D               	movf	?___llmod,w
  2499     00D5  00DB               	movwf	mathBCD@r
  2500                           
  2501                           ;funtions.c: 16:     r[1] = (((iADC * 1000) / 1024) / 10) % 10;
  2502     00D6  3000               	movlw	0
  2503     00D7  00B0               	movwf	___llmod@divisor+3
  2504     00D8  3000               	movlw	0
  2505     00D9  00AF               	movwf	___llmod@divisor+2
  2506     00DA  3000               	movlw	0
  2507     00DB  00AE               	movwf	___llmod@divisor+1
  2508     00DC  300A               	movlw	10
  2509     00DD  00AD               	movwf	___llmod@divisor
  2510     00DE  3000               	movlw	0
  2511     00DF  00A3               	movwf	___lldiv@divisor+3
  2512     00E0  3000               	movlw	0
  2513     00E1  00A2               	movwf	___lldiv@divisor+2
  2514     00E2  3000               	movlw	0
  2515     00E3  00A1               	movwf	___lldiv@divisor+1
  2516     00E4  300A               	movlw	10
  2517     00E5  00A0               	movwf	___lldiv@divisor
  2518     00E6  3000               	movlw	0
  2519     00E7  00F7               	movwf	___lmul@multiplicand+3
  2520     00E8  3000               	movlw	0
  2521     00E9  00F6               	movwf	___lmul@multiplicand+2
  2522     00EA  3003               	movlw	3
  2523     00EB  00F5               	movwf	___lmul@multiplicand+1
  2524     00EC  30E8               	movlw	232
  2525     00ED  00F4               	movwf	___lmul@multiplicand
  2526     00EE  0839               	movf	mathBCD@iADC+3,w
  2527     00EF  00F3               	movwf	___lmul@multiplier+3
  2528     00F0  0838               	movf	mathBCD@iADC+2,w
  2529     00F1  00F2               	movwf	___lmul@multiplier+2
  2530     00F2  0837               	movf	mathBCD@iADC+1,w
  2531     00F3  00F1               	movwf	___lmul@multiplier+1
  2532     00F4  0836               	movf	mathBCD@iADC,w
  2533     00F5  00F0               	movwf	___lmul@multiplier
  2534     00F6  3183  2391  3180   	fcall	___lmul
  2535     00F9  0870               	movf	?___lmul,w
  2536     00FA  0020               	movlb	0	; select bank0
  2537     00FB  00BA               	movwf	??_mathBCD
  2538     00FC  0871               	movf	?___lmul+1,w
  2539     00FD  00BB               	movwf	??_mathBCD+1
  2540     00FE  0872               	movf	?___lmul+2,w
  2541     00FF  00BC               	movwf	??_mathBCD+2
  2542     0100  0873               	movf	?___lmul+3,w
  2543     0101  00BD               	movwf	??_mathBCD+3
  2544     0102  300A               	movlw	10
  2545     0103                     u95_25:
  2546     0103  36BD               	lsrf	??_mathBCD+3,f
  2547     0104  0CBC               	rrf	??_mathBCD+2,f
  2548     0105  0CBB               	rrf	??_mathBCD+1,f
  2549     0106  0CBA               	rrf	??_mathBCD,f
  2550     0107                     u95_20:
  2551     0107  0B89               	decfsz	9,f
  2552     0108  2903               	goto	u95_25
  2553     0109  083D               	movf	??_mathBCD+3,w
  2554     010A  00A7               	movwf	___lldiv@dividend+3
  2555     010B  083C               	movf	??_mathBCD+2,w
  2556     010C  00A6               	movwf	___lldiv@dividend+2
  2557     010D  083B               	movf	??_mathBCD+1,w
  2558     010E  00A5               	movwf	___lldiv@dividend+1
  2559     010F  083A               	movf	??_mathBCD,w
  2560     0110  00A4               	movwf	___lldiv@dividend
  2561     0111  3181  21DD  3180   	fcall	___lldiv
  2562     0114  0020               	movlb	0	; select bank0
  2563     0115  0823               	movf	?___lldiv+3,w
  2564     0116  00B4               	movwf	___llmod@dividend+3
  2565     0117  0822               	movf	?___lldiv+2,w
  2566     0118  00B3               	movwf	___llmod@dividend+2
  2567     0119  0821               	movf	?___lldiv+1,w
  2568     011A  00B2               	movwf	___llmod@dividend+1
  2569     011B  0820               	movf	?___lldiv,w
  2570     011C  00B1               	movwf	___llmod@dividend
  2571     011D  3182  22D6  3180   	fcall	___llmod
  2572     0120  0020               	movlb	0	; select bank0
  2573     0121  082E               	movf	?___llmod+1,w
  2574     0122  00DE               	movwf	mathBCD@r+3
  2575     0123  082D               	movf	?___llmod,w
  2576     0124  00DD               	movwf	mathBCD@r+2
  2577                           
  2578                           ;funtions.c: 17:     r[2] = (((iADC * 1000) / 1024) / 10) / 10;
  2579     0125  3000               	movlw	0
  2580     0126  00A3               	movwf	___lldiv@divisor+3
  2581     0127  3000               	movlw	0
  2582     0128  00A2               	movwf	___lldiv@divisor+2
  2583     0129  3000               	movlw	0
  2584     012A  00A1               	movwf	___lldiv@divisor+1
  2585     012B  300A               	movlw	10
  2586     012C  00A0               	movwf	___lldiv@divisor
  2587     012D  3000               	movlw	0
  2588     012E  00F7               	movwf	___lmul@multiplicand+3
  2589     012F  3000               	movlw	0
  2590     0130  00F6               	movwf	___lmul@multiplicand+2
  2591     0131  3003               	movlw	3
  2592     0132  00F5               	movwf	___lmul@multiplicand+1
  2593     0133  30E8               	movlw	232
  2594     0134  00F4               	movwf	___lmul@multiplicand
  2595     0135  0839               	movf	mathBCD@iADC+3,w
  2596     0136  00F3               	movwf	___lmul@multiplier+3
  2597     0137  0838               	movf	mathBCD@iADC+2,w
  2598     0138  00F2               	movwf	___lmul@multiplier+2
  2599     0139  0837               	movf	mathBCD@iADC+1,w
  2600     013A  00F1               	movwf	___lmul@multiplier+1
  2601     013B  0836               	movf	mathBCD@iADC,w
  2602     013C  00F0               	movwf	___lmul@multiplier
  2603     013D  3183  2391  3180   	fcall	___lmul
  2604     0140  0870               	movf	?___lmul,w
  2605     0141  0020               	movlb	0	; select bank0
  2606     0142  00BA               	movwf	??_mathBCD
  2607     0143  0871               	movf	?___lmul+1,w
  2608     0144  00BB               	movwf	??_mathBCD+1
  2609     0145  0872               	movf	?___lmul+2,w
  2610     0146  00BC               	movwf	??_mathBCD+2
  2611     0147  0873               	movf	?___lmul+3,w
  2612     0148  00BD               	movwf	??_mathBCD+3
  2613     0149  300A               	movlw	10
  2614     014A                     u96_25:
  2615     014A  36BD               	lsrf	??_mathBCD+3,f
  2616     014B  0CBC               	rrf	??_mathBCD+2,f
  2617     014C  0CBB               	rrf	??_mathBCD+1,f
  2618     014D  0CBA               	rrf	??_mathBCD,f
  2619     014E                     u96_20:
  2620     014E  0B89               	decfsz	9,f
  2621     014F  294A               	goto	u96_25
  2622     0150  083D               	movf	??_mathBCD+3,w
  2623     0151  00A7               	movwf	___lldiv@dividend+3
  2624     0152  083C               	movf	??_mathBCD+2,w
  2625     0153  00A6               	movwf	___lldiv@dividend+2
  2626     0154  083B               	movf	??_mathBCD+1,w
  2627     0155  00A5               	movwf	___lldiv@dividend+1
  2628     0156  083A               	movf	??_mathBCD,w
  2629     0157  00A4               	movwf	___lldiv@dividend
  2630     0158  3181  21DD  3180   	fcall	___lldiv
  2631     015B  0020               	movlb	0	; select bank0
  2632     015C  0823               	movf	?___lldiv+3,w
  2633     015D  00C1               	movwf	_mathBCD$1403+3
  2634     015E  0822               	movf	?___lldiv+2,w
  2635     015F  00C0               	movwf	_mathBCD$1403+2
  2636     0160  0821               	movf	?___lldiv+1,w
  2637     0161  00BF               	movwf	_mathBCD$1403+1
  2638     0162  0820               	movf	?___lldiv,w
  2639     0163  00BE               	movwf	_mathBCD$1403
  2640                           
  2641                           ;funtions.c: 17:     r[2] = (((iADC * 1000) / 1024) / 10) / 10;
  2642     0164  3000               	movlw	0
  2643     0165  00A3               	movwf	___lldiv@divisor+3
  2644     0166  3000               	movlw	0
  2645     0167  00A2               	movwf	___lldiv@divisor+2
  2646     0168  3000               	movlw	0
  2647     0169  00A1               	movwf	___lldiv@divisor+1
  2648     016A  300A               	movlw	10
  2649     016B  00A0               	movwf	___lldiv@divisor
  2650     016C  0841               	movf	_mathBCD$1403+3,w
  2651     016D  00A7               	movwf	___lldiv@dividend+3
  2652     016E  0840               	movf	_mathBCD$1403+2,w
  2653     016F  00A6               	movwf	___lldiv@dividend+2
  2654     0170  083F               	movf	_mathBCD$1403+1,w
  2655     0171  00A5               	movwf	___lldiv@dividend+1
  2656     0172  083E               	movf	_mathBCD$1403,w
  2657     0173  00A4               	movwf	___lldiv@dividend
  2658     0174  3181  21DD  3180   	fcall	___lldiv
  2659     0177  0020               	movlb	0	; select bank0
  2660     0178  0821               	movf	?___lldiv+1,w
  2661     0179  00E0               	movwf	mathBCD@r+5
  2662     017A  0820               	movf	?___lldiv,w
  2663     017B  00DF               	movwf	mathBCD@r+4
  2664     017C                     i1l1329:
  2665                           
  2666                           ;funtions.c: 19:     return r;
  2667     017C  305B               	movlw	(low (mathBCD@r| 0))& (0+255)
  2668     017D                     i1l64:
  2669     017D  0008               	return
  2670     017E                     __end_of_mathBCD:
  2671                           
  2672                           	psect	text12
  2673     0391                     __ptext12:	
  2674 ;; *************** function ___lmul *****************
  2675 ;; Defined at:
  2676 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  multiplier      4    0[COMMON] unsigned long 
  2679 ;;  multiplicand    4    4[COMMON] unsigned long 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  product         4    8[COMMON] unsigned long 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  4    0[COMMON] unsigned long 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2691 ;;      Params:         8       0       0       0       0       0
  2692 ;;      Locals:         4       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0
  2694 ;;      Totals:        12       0       0       0       0       0
  2695 ;;Total ram usage:       12 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_mathBCD
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704     0391                     ___lmul:	
  2705                           ;psect for function ___lmul
  2706                           
  2707     0391                     i1l1113:	
  2708                           ;incstack = 0
  2709                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2710                           
  2711     0391  3000               	movlw	0
  2712     0392  00FB               	movwf	___lmul@product+3
  2713     0393  3000               	movlw	0
  2714     0394  00FA               	movwf	___lmul@product+2
  2715     0395  3000               	movlw	0
  2716     0396  00F9               	movwf	___lmul@product+1
  2717     0397  3000               	movlw	0
  2718     0398  00F8               	movwf	___lmul@product
  2719     0399                     i1l1115:
  2720     0399  1C70               	btfss	___lmul@multiplier,0
  2721     039A  2B9C               	goto	u65_21
  2722     039B  2B9D               	goto	u65_20
  2723     039C                     u65_21:
  2724     039C  2BA5               	goto	i1l1119
  2725     039D                     u65_20:
  2726     039D                     i1l1117:
  2727     039D  0874               	movf	___lmul@multiplicand,w
  2728     039E  07F8               	addwf	___lmul@product,f
  2729     039F  0875               	movf	___lmul@multiplicand+1,w
  2730     03A0  3DF9               	addwfc	___lmul@product+1,f
  2731     03A1  0876               	movf	___lmul@multiplicand+2,w
  2732     03A2  3DFA               	addwfc	___lmul@product+2,f
  2733     03A3  0877               	movf	___lmul@multiplicand+3,w
  2734     03A4  3DFB               	addwfc	___lmul@product+3,f
  2735     03A5                     i1l1119:
  2736     03A5  3001               	movlw	1
  2737     03A6                     u66_25:
  2738     03A6  35F4               	lslf	___lmul@multiplicand,f
  2739     03A7  0DF5               	rlf	___lmul@multiplicand+1,f
  2740     03A8  0DF6               	rlf	___lmul@multiplicand+2,f
  2741     03A9  0DF7               	rlf	___lmul@multiplicand+3,f
  2742     03AA  0B89               	decfsz	9,f
  2743     03AB  2BA6               	goto	u66_25
  2744     03AC                     i1l1121:
  2745     03AC  3001               	movlw	1
  2746     03AD                     u67_25:
  2747     03AD  36F3               	lsrf	___lmul@multiplier+3,f
  2748     03AE  0CF2               	rrf	___lmul@multiplier+2,f
  2749     03AF  0CF1               	rrf	___lmul@multiplier+1,f
  2750     03B0  0CF0               	rrf	___lmul@multiplier,f
  2751     03B1  0B89               	decfsz	9,f
  2752     03B2  2BAD               	goto	u67_25
  2753     03B3  0873               	movf	___lmul@multiplier+3,w
  2754     03B4  0472               	iorwf	___lmul@multiplier+2,w
  2755     03B5  0471               	iorwf	___lmul@multiplier+1,w
  2756     03B6  0470               	iorwf	___lmul@multiplier,w
  2757     03B7  1D03               	skipz
  2758     03B8  2BBA               	goto	u68_21
  2759     03B9  2BBB               	goto	u68_20
  2760     03BA                     u68_21:
  2761     03BA  2B99               	goto	i1l1115
  2762     03BB                     u68_20:
  2763     03BB                     i1l1123:
  2764     03BB  087B               	movf	___lmul@product+3,w
  2765     03BC  00F3               	movwf	?___lmul+3
  2766     03BD  087A               	movf	___lmul@product+2,w
  2767     03BE  00F2               	movwf	?___lmul+2
  2768     03BF  0879               	movf	___lmul@product+1,w
  2769     03C0  00F1               	movwf	?___lmul+1
  2770     03C1  0878               	movf	___lmul@product,w
  2771     03C2  00F0               	movwf	?___lmul
  2772     03C3                     i1l317:
  2773     03C3  0008               	return
  2774     03C4                     __end_of___lmul:
  2775                           
  2776                           	psect	text13
  2777     02D6                     __ptext13:	
  2778 ;; *************** function ___llmod *****************
  2779 ;; Defined at:
  2780 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\llmod.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  divisor         4   13[BANK0 ] unsigned long 
  2783 ;;  dividend        4   17[BANK0 ] unsigned long 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  counter         1   21[BANK0 ] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  4   13[BANK0 ] unsigned long 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2, status,0
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2795 ;;      Params:         0       8       0       0       0       0
  2796 ;;      Locals:         0       1       0       0       0       0
  2797 ;;      Temps:          1       0       0       0       0       0
  2798 ;;      Totals:         1       9       0       0       0       0
  2799 ;;Total ram usage:       10 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_mathBCD
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808     02D6                     ___llmod:	
  2809                           ;psect for function ___llmod
  2810                           
  2811     02D6                     i1l1189:	
  2812                           ;incstack = 0
  2813                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2814                           
  2815     02D6  0020               	movlb	0	; select bank0
  2816     02D7  0830               	movf	___llmod@divisor+3,w
  2817     02D8  042F               	iorwf	___llmod@divisor+2,w
  2818     02D9  042E               	iorwf	___llmod@divisor+1,w
  2819     02DA  042D               	iorwf	___llmod@divisor,w
  2820     02DB  1903               	skipnz
  2821     02DC  2ADE               	goto	u85_21
  2822     02DD  2ADF               	goto	u85_20
  2823     02DE                     u85_21:
  2824     02DE  2B18               	goto	i1l1205
  2825     02DF                     u85_20:
  2826     02DF                     i1l1191:
  2827     02DF  01B5               	clrf	___llmod@counter
  2828     02E0  0AB5               	incf	___llmod@counter,f
  2829     02E1  2AED               	goto	i1l1195
  2830     02E2                     i1l1193:
  2831     02E2  3001               	movlw	1
  2832     02E3                     u86_25:
  2833     02E3  35AD               	lslf	___llmod@divisor,f
  2834     02E4  0DAE               	rlf	___llmod@divisor+1,f
  2835     02E5  0DAF               	rlf	___llmod@divisor+2,f
  2836     02E6  0DB0               	rlf	___llmod@divisor+3,f
  2837     02E7  0B89               	decfsz	9,f
  2838     02E8  2AE3               	goto	u86_25
  2839     02E9  3001               	movlw	1
  2840     02EA  00FD               	movwf	??___llmod
  2841     02EB  087D               	movf	??___llmod,w
  2842     02EC  07B5               	addwf	___llmod@counter,f
  2843     02ED                     i1l1195:
  2844     02ED  1FB0               	btfss	___llmod@divisor+3,7
  2845     02EE  2AF0               	goto	u87_21
  2846     02EF  2AF1               	goto	u87_20
  2847     02F0                     u87_21:
  2848     02F0  2AE2               	goto	i1l1193
  2849     02F1                     u87_20:
  2850     02F1                     i1l1197:
  2851     02F1  0830               	movf	___llmod@divisor+3,w
  2852     02F2  0234               	subwf	___llmod@dividend+3,w
  2853     02F3  1D03               	skipz
  2854     02F4  2AFF               	goto	u88_25
  2855     02F5  082F               	movf	___llmod@divisor+2,w
  2856     02F6  0233               	subwf	___llmod@dividend+2,w
  2857     02F7  1D03               	skipz
  2858     02F8  2AFF               	goto	u88_25
  2859     02F9  082E               	movf	___llmod@divisor+1,w
  2860     02FA  0232               	subwf	___llmod@dividend+1,w
  2861     02FB  1D03               	skipz
  2862     02FC  2AFF               	goto	u88_25
  2863     02FD  082D               	movf	___llmod@divisor,w
  2864     02FE  0231               	subwf	___llmod@dividend,w
  2865     02FF                     u88_25:
  2866     02FF  1C03               	skipc
  2867     0300  2B02               	goto	u88_21
  2868     0301  2B03               	goto	u88_20
  2869     0302                     u88_21:
  2870     0302  2B0B               	goto	i1l1201
  2871     0303                     u88_20:
  2872     0303                     i1l1199:
  2873     0303  082D               	movf	___llmod@divisor,w
  2874     0304  02B1               	subwf	___llmod@dividend,f
  2875     0305  082E               	movf	___llmod@divisor+1,w
  2876     0306  3BB2               	subwfb	___llmod@dividend+1,f
  2877     0307  082F               	movf	___llmod@divisor+2,w
  2878     0308  3BB3               	subwfb	___llmod@dividend+2,f
  2879     0309  0830               	movf	___llmod@divisor+3,w
  2880     030A  3BB4               	subwfb	___llmod@dividend+3,f
  2881     030B                     i1l1201:
  2882     030B  3001               	movlw	1
  2883     030C                     u89_25:
  2884     030C  36B0               	lsrf	___llmod@divisor+3,f
  2885     030D  0CAF               	rrf	___llmod@divisor+2,f
  2886     030E  0CAE               	rrf	___llmod@divisor+1,f
  2887     030F  0CAD               	rrf	___llmod@divisor,f
  2888     0310  0B89               	decfsz	9,f
  2889     0311  2B0C               	goto	u89_25
  2890     0312                     i1l1203:
  2891     0312  3001               	movlw	1
  2892     0313  02B5               	subwf	___llmod@counter,f
  2893     0314  1D03               	btfss	3,2
  2894     0315  2B17               	goto	u90_21
  2895     0316  2B18               	goto	u90_20
  2896     0317                     u90_21:
  2897     0317  2AF1               	goto	i1l1197
  2898     0318                     u90_20:
  2899     0318                     i1l1205:
  2900     0318  0834               	movf	___llmod@dividend+3,w
  2901     0319  00B0               	movwf	?___llmod+3
  2902     031A  0833               	movf	___llmod@dividend+2,w
  2903     031B  00AF               	movwf	?___llmod+2
  2904     031C  0832               	movf	___llmod@dividend+1,w
  2905     031D  00AE               	movwf	?___llmod+1
  2906     031E  0831               	movf	___llmod@dividend,w
  2907     031F  00AD               	movwf	?___llmod
  2908     0320                     i1l533:
  2909     0320  0008               	return
  2910     0321                     __end_of___llmod:
  2911                           
  2912                           	psect	text14
  2913     01DD                     __ptext14:	
  2914 ;; *************** function ___lldiv *****************
  2915 ;; Defined at:
  2916 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  divisor         4    0[BANK0 ] unsigned long 
  2919 ;;  dividend        4    4[BANK0 ] unsigned long 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  quotient        4    8[BANK0 ] unsigned long 
  2922 ;;  counter         1   12[BANK0 ] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  4    0[BANK0 ] unsigned long 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2932 ;;      Params:         0       8       0       0       0       0
  2933 ;;      Locals:         0       5       0       0       0       0
  2934 ;;      Temps:          1       0       0       0       0       0
  2935 ;;      Totals:         1      13       0       0       0       0
  2936 ;;Total ram usage:       14 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_mathBCD
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945     01DD                     ___lldiv:	
  2946                           ;psect for function ___lldiv
  2947                           
  2948     01DD                     i1l1127:	
  2949                           ;incstack = 0
  2950                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2951                           
  2952     01DD  3000               	movlw	0
  2953     01DE  0020               	movlb	0	; select bank0
  2954     01DF  00AB               	movwf	___lldiv@quotient+3
  2955     01E0  3000               	movlw	0
  2956     01E1  00AA               	movwf	___lldiv@quotient+2
  2957     01E2  3000               	movlw	0
  2958     01E3  00A9               	movwf	___lldiv@quotient+1
  2959     01E4  3000               	movlw	0
  2960     01E5  00A8               	movwf	___lldiv@quotient
  2961     01E6  0823               	movf	___lldiv@divisor+3,w
  2962     01E7  0422               	iorwf	___lldiv@divisor+2,w
  2963     01E8  0421               	iorwf	___lldiv@divisor+1,w
  2964     01E9  0420               	iorwf	___lldiv@divisor,w
  2965     01EA  1903               	skipnz
  2966     01EB  29ED               	goto	u69_21
  2967     01EC  29EE               	goto	u69_20
  2968     01ED                     u69_21:
  2969     01ED  2A2F               	goto	i1l1147
  2970     01EE                     u69_20:
  2971     01EE                     i1l1129:
  2972     01EE  01AC               	clrf	___lldiv@counter
  2973     01EF  0AAC               	incf	___lldiv@counter,f
  2974     01F0  29FC               	goto	i1l1133
  2975     01F1                     i1l1131:
  2976     01F1  3001               	movlw	1
  2977     01F2                     u70_25:
  2978     01F2  35A0               	lslf	___lldiv@divisor,f
  2979     01F3  0DA1               	rlf	___lldiv@divisor+1,f
  2980     01F4  0DA2               	rlf	___lldiv@divisor+2,f
  2981     01F5  0DA3               	rlf	___lldiv@divisor+3,f
  2982     01F6  0B89               	decfsz	9,f
  2983     01F7  29F2               	goto	u70_25
  2984     01F8  3001               	movlw	1
  2985     01F9  00FC               	movwf	??___lldiv
  2986     01FA  087C               	movf	??___lldiv,w
  2987     01FB  07AC               	addwf	___lldiv@counter,f
  2988     01FC                     i1l1133:
  2989     01FC  1FA3               	btfss	___lldiv@divisor+3,7
  2990     01FD  29FF               	goto	u71_21
  2991     01FE  2A00               	goto	u71_20
  2992     01FF                     u71_21:
  2993     01FF  29F1               	goto	i1l1131
  2994     0200                     u71_20:
  2995     0200                     i1l1135:
  2996     0200  3001               	movlw	1
  2997     0201                     u72_25:
  2998     0201  35A8               	lslf	___lldiv@quotient,f
  2999     0202  0DA9               	rlf	___lldiv@quotient+1,f
  3000     0203  0DAA               	rlf	___lldiv@quotient+2,f
  3001     0204  0DAB               	rlf	___lldiv@quotient+3,f
  3002     0205  0B89               	decfsz	9,f
  3003     0206  2A01               	goto	u72_25
  3004     0207                     i1l1137:
  3005     0207  0823               	movf	___lldiv@divisor+3,w
  3006     0208  0227               	subwf	___lldiv@dividend+3,w
  3007     0209  1D03               	skipz
  3008     020A  2A15               	goto	u73_25
  3009     020B  0822               	movf	___lldiv@divisor+2,w
  3010     020C  0226               	subwf	___lldiv@dividend+2,w
  3011     020D  1D03               	skipz
  3012     020E  2A15               	goto	u73_25
  3013     020F  0821               	movf	___lldiv@divisor+1,w
  3014     0210  0225               	subwf	___lldiv@dividend+1,w
  3015     0211  1D03               	skipz
  3016     0212  2A15               	goto	u73_25
  3017     0213  0820               	movf	___lldiv@divisor,w
  3018     0214  0224               	subwf	___lldiv@dividend,w
  3019     0215                     u73_25:
  3020     0215  1C03               	skipc
  3021     0216  2A18               	goto	u73_21
  3022     0217  2A19               	goto	u73_20
  3023     0218                     u73_21:
  3024     0218  2A22               	goto	i1l1143
  3025     0219                     u73_20:
  3026     0219                     i1l1139:
  3027     0219  0820               	movf	___lldiv@divisor,w
  3028     021A  02A4               	subwf	___lldiv@dividend,f
  3029     021B  0821               	movf	___lldiv@divisor+1,w
  3030     021C  3BA5               	subwfb	___lldiv@dividend+1,f
  3031     021D  0822               	movf	___lldiv@divisor+2,w
  3032     021E  3BA6               	subwfb	___lldiv@dividend+2,f
  3033     021F  0823               	movf	___lldiv@divisor+3,w
  3034     0220  3BA7               	subwfb	___lldiv@dividend+3,f
  3035     0221                     i1l1141:
  3036     0221  1428               	bsf	___lldiv@quotient,0
  3037     0222                     i1l1143:
  3038     0222  3001               	movlw	1
  3039     0223                     u74_25:
  3040     0223  36A3               	lsrf	___lldiv@divisor+3,f
  3041     0224  0CA2               	rrf	___lldiv@divisor+2,f
  3042     0225  0CA1               	rrf	___lldiv@divisor+1,f
  3043     0226  0CA0               	rrf	___lldiv@divisor,f
  3044     0227  0B89               	decfsz	9,f
  3045     0228  2A23               	goto	u74_25
  3046     0229                     i1l1145:
  3047     0229  3001               	movlw	1
  3048     022A  02AC               	subwf	___lldiv@counter,f
  3049     022B  1D03               	btfss	3,2
  3050     022C  2A2E               	goto	u75_21
  3051     022D  2A2F               	goto	u75_20
  3052     022E                     u75_21:
  3053     022E  2A00               	goto	i1l1135
  3054     022F                     u75_20:
  3055     022F                     i1l1147:
  3056     022F  082B               	movf	___lldiv@quotient+3,w
  3057     0230  00A3               	movwf	?___lldiv+3
  3058     0231  082A               	movf	___lldiv@quotient+2,w
  3059     0232  00A2               	movwf	?___lldiv+2
  3060     0233  0829               	movf	___lldiv@quotient+1,w
  3061     0234  00A1               	movwf	?___lldiv+1
  3062     0235  0828               	movf	___lldiv@quotient,w
  3063     0236  00A0               	movwf	?___lldiv
  3064     0237                     i1l339:
  3065     0237  0008               	return
  3066     0238                     __end_of___lldiv:
  3067                           
  3068                           	psect	text15
  3069     035C                     __ptext15:	
  3070 ;; *************** function _math7Seg *****************
  3071 ;; Defined at:
  3072 ;;		line 30 in file "funtions.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  iBCD            1    wreg     PTR const unsigned short
  3075 ;;		 -> mathBCD@r(6), 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  iBCD            1   20[BANK0 ] PTR const unsigned short
  3078 ;;		 -> mathBCD@r(6), 
  3079 ;;  numbers        20    0[BANK0 ] unsigned short [10]
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      PTR unsigned short 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3089 ;;      Params:         0       0       0       0       0       0
  3090 ;;      Locals:         0      21       0       0       0       0
  3091 ;;      Temps:          1       0       0       0       0       0
  3092 ;;      Totals:         1      21       0       0       0       0
  3093 ;;Total ram usage:       22 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_interrupciones
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102     035C                     _math7Seg:	
  3103                           ;psect for function _math7Seg
  3104                           
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in _math7Seg: [wreg-fsr1h+status,2+status,0]
  3108                           ;math7Seg@iBCD stored from wreg
  3109     035C  0020               	movlb	0	; select bank0
  3110     035D  00B4               	movwf	math7Seg@iBCD
  3111     035E                     i1l1333:
  3112                           
  3113                           ;funtions.c: 32:     unsigned short numbers[10] = {
  3114     035E  30A0               	movlw	low math7Seg@F2504
  3115     035F  0086               	movwf	6
  3116     0360  3000               	movlw	high math7Seg@F2504
  3117     0361  0087               	movwf	7
  3118     0362  3020               	movlw	low math7Seg@numbers
  3119     0363  0084               	movwf	4
  3120     0364  3000               	movlw	high math7Seg@numbers
  3121     0365  0085               	movwf	5
  3122     0366  3014               	movlw	20
  3123     0367  00F0               	movwf	??_math7Seg
  3124     0368                     u97_20:
  3125     0368  0016               	moviw fsr1++
  3126     0369  001A               	movwi fsr0++
  3127     036A  0BF0               	decfsz	??_math7Seg,f
  3128     036B  2B68               	goto	u97_20
  3129     036C                     i1l1335:
  3130                           
  3131                           ;funtions.c: 46:     static unsigned short r[3];;funtions.c: 47:     r[0] = numbers[iBCD
      +                          [0]];
  3132     036C  0834               	movf	math7Seg@iBCD,w
  3133     036D  0086               	movwf	6
  3134     036E  0187               	clrf	7
  3135     036F  3501               	lslf	1,w
  3136     0370  3E20               	addlw	(low (math7Seg@numbers| 0))& (0+255)
  3137     0371  0086               	movwf	6
  3138     0372  0187               	clrf	7
  3139     0373  3F40               	moviw [0]fsr1
  3140     0374  00D5               	movwf	math7Seg@r
  3141     0375  3F41               	moviw [1]fsr1
  3142     0376  00D6               	movwf	math7Seg@r+1
  3143     0377                     i1l1337:
  3144                           
  3145                           ;funtions.c: 48:     r[1] = numbers[iBCD[1]];
  3146     0377  0834               	movf	math7Seg@iBCD,w
  3147     0378  3E02               	addlw	2
  3148     0379  0086               	movwf	6
  3149     037A  0187               	clrf	7
  3150     037B  3501               	lslf	1,w
  3151     037C  3E20               	addlw	(low (math7Seg@numbers| 0))& (0+255)
  3152     037D  0086               	movwf	6
  3153     037E  0187               	clrf	7
  3154     037F  3F40               	moviw [0]fsr1
  3155     0380  00D7               	movwf	math7Seg@r+2
  3156     0381  3F41               	moviw [1]fsr1
  3157     0382  00D8               	movwf	math7Seg@r+3
  3158     0383                     i1l1339:
  3159                           
  3160                           ;funtions.c: 49:     r[2] = numbers[iBCD[2]];
  3161     0383  0834               	movf	math7Seg@iBCD,w
  3162     0384  3E04               	addlw	4
  3163     0385  0086               	movwf	6
  3164     0386  0187               	clrf	7
  3165     0387  3501               	lslf	1,w
  3166     0388  3E20               	addlw	(low (math7Seg@numbers| 0))& (0+255)
  3167     0389  0086               	movwf	6
  3168     038A  0187               	clrf	7
  3169     038B  3F40               	moviw [0]fsr1
  3170     038C  00D9               	movwf	math7Seg@r+4
  3171     038D  3F41               	moviw [1]fsr1
  3172     038E  00DA               	movwf	math7Seg@r+5
  3173     038F                     i1l1341:
  3174                           
  3175                           ;funtions.c: 51:     return r;
  3176     038F  3055               	movlw	(low (math7Seg@r| 0))& (0+255)
  3177     0390                     i1l71:
  3178     0390  0008               	return
  3179     0391                     __end_of_math7Seg:
  3180                           
  3181                           	psect	text16
  3182     03F8                     __ptext16:	
  3183 ;; *************** function _ASCII_Con *****************
  3184 ;; Defined at:
  3185 ;;		line 150 in file "funtions.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  a               2    0[COMMON] unsigned short 
  3188 ;;  b               2    2[COMMON] unsigned short 
  3189 ;;  c               2    4[COMMON] unsigned short 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      PTR unsigned char 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3201 ;;      Params:         6       0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0
  3204 ;;      Totals:         6       0       0       0       0       0
  3205 ;;Total ram usage:        6 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_interrupciones
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214     03F8                     _ASCII_Con:	
  3215                           ;psect for function _ASCII_Con
  3216                           
  3217     03F8                     i1l1345:	
  3218                           ;incstack = 0
  3219                           ; Regs used in _ASCII_Con: [wreg+status,2+status,0]
  3220                           
  3221                           
  3222                           ;funtions.c: 151:     static unsigned char r[7];;funtions.c: 152:     r[0] = (char)(a + 
      +                          48);
  3223     03F8  0870               	movf	ASCII_Con@a,w
  3224     03F9  3E30               	addlw	48
  3225     03FA  0020               	movlb	0	; select bank0
  3226     03FB  00CE               	movwf	ASCII_Con@r
  3227     03FC                     i1l1347:
  3228                           
  3229                           ;funtions.c: 153:     r[1] = '.';
  3230     03FC  302E               	movlw	46
  3231     03FD  00CF               	movwf	ASCII_Con@r+1
  3232     03FE                     i1l1349:
  3233                           
  3234                           ;funtions.c: 154:     r[2] = (char)(b + 48);
  3235     03FE  0872               	movf	ASCII_Con@b,w
  3236     03FF  3E30               	addlw	48
  3237     0400  00D0               	movwf	ASCII_Con@r+2
  3238     0401                     i1l1351:
  3239                           
  3240                           ;funtions.c: 155:     r[3] = (char)(c + 48);;
  3241     0401  0874               	movf	ASCII_Con@c,w
  3242     0402  3E30               	addlw	48
  3243     0403  00D1               	movwf	ASCII_Con@r+3
  3244     0404                     i1l1353:
  3245                           
  3246                           ;funtions.c: 156:     r[4] = ' ';
  3247     0404  3020               	movlw	32
  3248     0405  00D2               	movwf	ASCII_Con@r+4
  3249     0406                     i1l1355:
  3250                           
  3251                           ;funtions.c: 157:     r[5] = 'V';
  3252     0406  3056               	movlw	86
  3253     0407  00D3               	movwf	ASCII_Con@r+5
  3254     0408                     i1l1357:
  3255                           
  3256                           ;funtions.c: 158:     r[6] = '\0';
  3257     0408  01D4               	clrf	ASCII_Con@r+6
  3258     0409                     i1l1359:
  3259                           
  3260                           ;funtions.c: 160:     return r;
  3261     0409  304E               	movlw	(low (ASCII_Con@r| 0))& (0+255)
  3262     040A                     i1l100:
  3263     040A  0008               	return
  3264     040B                     __end_of_ASCII_Con:
  3265     007E                     btemp	set	126	;btemp
  3266     007E                     int$flags	set	126
  3267     007E                     wtemp0	set	126
  3268                           
  3269                           	psect	idloc
  3270                           
  3271                           ;Config register IDLOC0 @ 0x8000
  3272                           ;	unspecified, using default values
  3273     8000                     	org	32768
  3274     8000  3FFF               	dw	16383
  3275                           
  3276                           ;Config register IDLOC1 @ 0x8001
  3277                           ;	unspecified, using default values
  3278     8001                     	org	32769
  3279     8001  3FFF               	dw	16383
  3280                           
  3281                           ;Config register IDLOC2 @ 0x8002
  3282                           ;	unspecified, using default values
  3283     8002                     	org	32770
  3284     8002  3FFF               	dw	16383
  3285                           
  3286                           ;Config register IDLOC3 @ 0x8003
  3287                           ;	unspecified, using default values
  3288     8003                     	org	32771
  3289     8003  3FFF               	dw	16383
  3290                           
  3291                           	psect	config
  3292                           
  3293                           ;Config register CONFIG1 @ 0x8007
  3294                           ;	Oscillator Selection
  3295                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3296                           ;	Watchdog Timer Enable
  3297                           ;	WDTE = OFF, WDT disabled
  3298                           ;	Power-up Timer Enable
  3299                           ;	PWRTE = OFF, PWRT disabled
  3300                           ;	MCLR Pin Function Select
  3301                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3302                           ;	Flash Program Memory Code Protection
  3303                           ;	CP = OFF, Program memory code protection is disabled
  3304                           ;	Data Memory Code Protection
  3305                           ;	CPD = OFF, Data memory code protection is disabled
  3306                           ;	Brown-out Reset Enable
  3307                           ;	BOREN = ON, Brown-out Reset enabled
  3308                           ;	Clock Out Enable
  3309                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3310                           ;	Internal/External Switchover
  3311                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3312                           ;	Fail-Safe Clock Monitor Enable
  3313                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3314     8007                     	org	32775
  3315     8007  3FE4               	dw	16356
  3316                           
  3317                           ;Config register CONFIG2 @ 0x8008
  3318                           ;	Flash Memory Self-Write Protection
  3319                           ;	WRT = OFF, Write protection off
  3320                           ;	PLL Enable
  3321                           ;	PLLEN = OFF, 4x PLL disabled
  3322                           ;	Stack Overflow/Underflow Reset Enable
  3323                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3324                           ;	Brown-out Reset Voltage Selection
  3325                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3326                           ;	Low-Voltage Programming Enable
  3327                           ;	LVP = ON, Low-voltage programming enabled
  3328     8008                     	org	32776
  3329     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         25
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      65
    BANK1            80      0      20
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printUART@cadena	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), ASCII_Con@r(BANK0[7]), 

    showNumbers@digits	PTR unsigned short  size(1) Largest target is 6
		 -> NULL(NULL[0]), math7Seg@r(BANK0[6]), 

    math7Seg@iBCD	PTR const unsigned short  size(1) Largest target is 6
		 -> mathBCD@r(BANK0[6]), 

    sp__ASCII_Con	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    interrupciones@Cadena	PTR unsigned char  size(1) Largest target is 7
		 -> NULL(NULL[0]), ASCII_Con@r(BANK0[7]), 

    sp__math7Seg	PTR unsigned short  size(1) Largest target is 6
		 -> math7Seg@r(BANK0[6]), 

    sp__mathBCD	PTR unsigned short  size(1) Largest target is 6
		 -> mathBCD@r(BANK0[6]), 

    interrupciones@numberBCD	PTR unsigned short  size(1) Largest target is 6
		 -> mathBCD@r(BANK0[6]), 

    interrupciones@displayData	PTR unsigned short  size(1) Largest target is 6
		 -> NULL(NULL[0]), math7Seg@r(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupciones in COMMON

    _showNumbers->___awmod
    _printUART->_UART_write
    _mathBCD->___llmod
    ___llmod->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupciones in BANK0

    _interrupciones->_mathBCD
    _mathBCD->___llmod
    ___llmod->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupciones in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupciones in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupciones in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupciones in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _init_IO
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
                          _TMR0_INIT
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupciones                                       6     6      0    4091
                                             34 BANK0      6     6      0
                          _ASCII_Con
                           _math7Seg
                            _mathBCD
                          _printUART
                            _readADC
                        _showNumbers
 ---------------------------------------------------------------------------------
 (4) _showNumbers                                          3     1      2    1375
                                              7 COMMON     3     1      2
                            ___awmod
                         _showNumber
 ---------------------------------------------------------------------------------
 (5) _showNumber                                           3     1      2     382
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _printUART                                            4     1      3     370
                                              1 COMMON     4     1      3
                         _UART_write
 ---------------------------------------------------------------------------------
 (5) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _mathBCD                                             12     8      4    1794
                                             22 BANK0     12     8      4
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     548
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     463
                                             13 COMMON     1     1      0
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     618
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _math7Seg                                            22    22      0     169
                                              0 COMMON     1     1      0
                                              0 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (4) _ASCII_Con                                            6     0      6     294
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_IO
     _TMR0_INIT
     _init_UART

 _interrupciones (ROOT)
   _ASCII_Con
   _math7Seg
   _mathBCD
     ___lldiv
       ___lmul (ARG)
     ___llmod
       ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul
   _printUART
     _UART_write
   _readADC
   _showNumbers
     ___awmod
     _showNumber

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      63       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      41       6       81.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      14       8       25.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      63      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 01 16:41:12 2023

                       l31 043F                         l32 043F     __end_of_interrupciones 0080  
                      l150 0419                        l153 0426                        l147 02D5  
             ___awmod@sign 0076                        wreg 0009                mathBCD@iADC 0036  
                     l1411 0414                       l1421 041F                       l1413 0416  
                     l1501 02C6                       l1423 0420                       l1415 0417  
                     l1511 02CB                       l1503 02C7                       l1431 028B  
                     l1425 0421                       l1417 041A                       l1409 040B  
                     l1521 02D2                       l1513 02CC                       l1505 02C8  
                     l1441 0297                       l1433 0292                       l1427 0422  
                     l1419 041D                       l1515 02CD                       l1507 02C9  
                     l1451 029D                       l1443 0298                       l1435 0294  
                     l1523 043C                       l1429 0423                       l1517 02CE  
                     l1509 02CA                       l1461 02A3                       l1453 029E  
                     l1445 029A                       l1437 0295                       l1519 02CF  
                     l1471 02A8                       l1463 02A4                       l1455 029F  
                     l1447 029B                       l1439 0296                       l1481 02AE  
                     l1473 02AA                       l1465 02A5                       l1457 02A0  
                     l1449 029C                       l1491 02BD                       l1483 02AF  
                     l1475 02AB                       l1467 02A6                       l1459 02A2  
                     l1493 02BE                       l1485 02B0                       l1477 02AC  
                     l1469 02A7                       l1495 02C1                       l1487 02B1  
                     l1479 02AD                       l1497 02C2                       l1489 02B2  
                     l1499 02C4                       i1l45 0028                       i1l71 0390  
                     i1l47 007E                       i1l64 017D                       i1l80 01DC  
                     i1l48 0078                       i1l74 035B                       i1l83 0445  
                     i1l86 042B                       i1l95 03E3                       i1l89 042F  
                     _TMR0 0015                       _main 043C                       fsr0h 0005  
                     fsr1h 0007                       indf0 0000                       fsr0l 0004  
                     indf1 0001                       fsr1l 0006                       btemp 007E  
                     start 0080            ?_interrupciones 0070                      ?_main 0070  
          __end_of___awmod 028B            __end_of___lldiv 0238            __end_of___llmod 0321  
                    i1l100 040A                      i1l317 03C3                      i1l339 0237  
                    i1l533 0320                      i1l469 028A                      _SPBRG 019B  
                    u60_20 0347                      u52_20 0327                      u60_21 0344  
                    u52_21 0324                      u61_24 0349                      u53_24 0329  
                    u62_20 034F                      u54_20 032F                      u62_21 034C  
                    u54_21 032C                      u70_25 01F2                      u71_20 0200  
                    u71_21 01FF                      u63_24 0351                      u55_24 0331  
                    u64_20 042F                      u80_20 0263                      u56_20 0337  
                    u64_21 042E                      u80_21 0262                      u56_21 0334  
                    u72_25 0201                      u73_20 0219                      u65_20 039D  
                    u81_20 026D                      u73_21 0218                      u65_21 039C  
                    u81_21 026C                      u57_24 0339                      u73_25 0215  
                    u81_25 0269                      u90_20 0318                      u58_20 033F  
                    u90_21 0317                      u58_21 033C                      u74_25 0223  
                    u66_25 03A6                      u82_25 0272                      u75_20 022F  
                    u83_20 027C                      u91_20 0190                      u75_21 022E  
                    u83_21 027B                      u91_21 018F                      u59_24 0341  
                    u67_25 03AD                      u68_20 03BB                      u84_20 0281  
                    u76_20 023D                      u92_20 01AE                      u68_21 03BA  
                    u84_21 0280                      u76_21 023C                      u92_21 01AD  
                    u69_20 01EE                      u85_20 02DF                      u77_20 0248  
                    u93_20 01CE                      u69_21 01ED                      u85_21 02DE  
                    u77_21 0247                      u93_21 01CD                      u94_20 00C4  
                    u78_20 0253                      u78_21 0252                      u86_25 02E3  
                    u94_25 00C0                      u87_20 02F1                      u95_20 0107  
                    u87_21 02F0                      u95_25 0103                      u79_25 0257  
                    u88_20 0303                      u96_20 014E                      u88_21 0302  
                    u88_25 02FF                      u96_25 014A                      u97_20 0368  
                    _TXREG 019A                      u89_25 030C                      u98_20 03CF  
                    u98_21 03CE                      u98_25 03CB                      u99_20 000A  
                    u99_21 0009        ___lmul@multiplicand 0074            __end_of_mathBCD 017E  
          __end_of_readADC 0446            __end_of_init_IO 02D6                ?_UART_write 0070  
             math7Seg@iBCD 0034                      status 0003                      wtemp0 007E  
        __end_of_ASCII_Con 040B            __initialization 0082               __end_of_main 0442  
                   ??_main 0000           ___llmod@dividend 0031                     _ADRESH 009C  
                   _ADRESL 009B                     u100_20 0012                     u100_21 0011  
                   u101_20 002D                     u101_21 002C                     u102_20 007C  
                   i1l1201 030B                     i1l1121 03AC                     i1l1113 0391  
                   u102_21 007B                     i1l1131 01F1                     i1l1203 0312  
                   i1l1123 03BB                     i1l1115 0399                     i1l1141 0221  
                   i1l1133 01FC                     i1l1205 0318                     i1l1117 039D  
                   i1l1301 0442                     i1l1143 0222                     i1l1135 0200  
                   i1l1127 01DD                     i1l1119 03A5                     i1l1151 0238  
                   i1l1311 019D                     i1l1303 017F                     i1l1145 0229  
                   i1l1137 0207                     i1l1129 01EE                     i1l1161 0248  
                   i1l1153 0239                     i1l1321 01CE                     i1l1313 01AE  
                   i1l1305 0190                     i1l1401 006E                     i1l1139 0219  
                   i1l1147 022F                     i1l1171 025F                     i1l1163 024D  
                   i1l1155 023D                     i1l1323 01D9                     i1l1315 01B9  
                   i1l1307 019A                     i1l1341 038F                     i1l1333 035E  
                   i1l1173 0263                     i1l1165 0253                     i1l1181 027C  
                   i1l1157 0242                     i1l1085 0321                     i1l1325 01DB  
                   i1l1317 01BB                     i1l1309 019C                     i1l1405 007C  
                   i1l1351 0401                     i1l1335 036C                     i1l1191 02DF  
                   i1l1327 009A                     i1l1183 0281                     i1l1175 026D  
                   i1l1167 0256                     i1l1159 0244                     i1l1087 0351  
                   i1l1319 01BC                     i1l1353 0404                     i1l1345 03F8  
                   i1l1337 0377                     i1l1193 02E2                     i1l1329 017C  
                   i1l1089 0428                     i1l1185 0286                     i1l1177 0271  
                   i1l1169 025B                     i1l1355 0406                     i1l1347 03FC  
                   i1l1339 0383                     i1l1195 02ED                     i1l1371 03DC  
                   i1l1363 03C4                     i1l1179 0276                     i1l1357 0408  
                   i1l1349 03FE                     i1l1197 02F1                     i1l1189 02D6  
                   i1l1365 03CF                     i1l1381 0015                     i1l1359 0409  
                   i1l1199 0303                     i1l1383 0018                     i1l1375 0006  
                   i1l1369 03D2                     i1l1393 002D                     i1l1385 001C  
                   i1l1377 000A                     i1l1395 0030                     i1l1387 001E  
                   i1l1379 0012                     i1l1397 004C                     i1l1389 001F  
                   i1l1399 0052          __end_of_TMR0_INIT 0427           __end_of_math7Seg 0391  
                   ___lmul 0391                  ??___awmod 0074                  ??___lldiv 007C  
                ??___llmod 007D            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_mathBCD 003A              math7Seg@F2504 00A0                  ??_readADC 0070  
                ??_init_IO 0000               ?_showNumbers 0077    __end_of__initialization 0096  
           __pcstackCOMMON 0070               __pidataBANK1 03E4             _OPTION_REGbits 0095  
               __pbssBANK0 0048                 __pmaintext 043C           ??_interrupciones 0042  
                  ?___lmul 0070                 __pintentry 0004             ___lmul@product 0078  
             ??_UART_write 0070                  ?_math7Seg 0070                    ___awmod 0238  
                _ASCII_Con 03F8                    ___lldiv 01DD                    ___llmod 02D6  
interrupciones@displayData 004D                 ASCII_Con@a 0070                 ASCII_Con@b 0072  
               ASCII_Con@c 0074                 ASCII_Con@r 004E         __end_of_UART_write 0430  
                  __ptext1 028B                    __ptext2 040B                    __ptext3 041A  
                  __ptext5 017E                    __ptext6 0321                    __ptext7 0238  
                  __ptext8 0442                    __ptext9 03C4          __end_of_init_UART 041A  
                  _mathBCD 009A                    _readADC 0442                    _init_IO 028B  
         ___awmod@dividend 0072                    clrloop0 0437                 ??_math7Seg 0070  
     end_of_initialization 0096                    init_ram 0430                    initloop 0431  
             _mathBCD$1403 003E          __end_of_printUART 03E4            ___lldiv@divisor 0020  
          ___lldiv@counter 002C                  _RCSTAbits 019D                UART_write@c 0070  
               ?_ASCII_Con 0070                  _TMR0_INIT 041A                 _showNumber 0321  
      interrupciones@count 004A                  _TRISAbits 008C                  _TRISBbits 008D  
                _TXSTAbits 019E             __end_of___lmul 03C4                 ?_TMR0_INIT 0070  
              _BAUDCONbits 019F        start_initialization 0082            ___llmod@divisor 002D  
          ___llmod@counter 0035                _APFCON1bits 011E                   ??___lmul 0078  
              ??_ASCII_Con 0076                __pdataBANK1 00A0                ?_showNumber 0070  
                ___latbits 0001              __pcstackBANK0 0020              __pcstackBANK1 0000  
                 ?___awmod 0070                   ?___lldiv 0020                   ?___llmod 002D  
              ??_TMR0_INIT 0000                   ?_mathBCD 0036                   ?_readADC 0070  
                 ?_init_IO 0070                  _init_UART 040B                   _LATAbits 010C  
                 _LATBbits 010D                  clear_ram0 0436                   _PIE1bits 0091  
                 _PIR1bits 0011                  _printUART 03C4                 printUART@i 0048  
               printUART@n 0071                 _ADCON0bits 009D                 _ADCON1bits 009E  
  interrupciones@numberBCD 0047              ??_showNumbers 0079                  math7Seg@r 0055  
               ?_init_UART 0070          ___lmul@multiplier 0070          showNumbers@digits 0079  
               ?_printUART 0071                 _ANSELAbits 018C                 _ANSELBbits 018D  
          printUART@cadena 0073                   __ptext10 0427                   __ptext11 009A  
                 __ptext12 0391                   __ptext13 02D6                   __ptext14 01DD  
                 __ptext15 035C                   __ptext16 03F8                   _math7Seg 035C  
      __end_of_showNumbers 01DD                   int$flags 007E                   mathBCD@r 005B  
             ??_showNumber 0072                 _INTCONbits 000B                 _FVRCONbits 0117  
              ??_init_UART 0000                   intlevel1 0000           ___lldiv@dividend 0024  
       __end_of_showNumber 035C                 _OSCCONbits 0099            showNumber@digit 0070  
              ??_printUART 0074       interrupciones@Cadena 004C             _interrupciones 0004  
         ___lldiv@quotient 0028                _showNumbers 017E                 _UART_write 0427  
          math7Seg@numbers 0020               showNumbers@n 0077  
