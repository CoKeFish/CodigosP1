

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 01 10:29:49 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1827 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0095                     	;# 
   101     0096                     	;# 
   102     0097                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009A                     	;# 
   106     009B                     	;# 
   107     009B                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     0111                     	;# 
   114     0112                     	;# 
   115     0113                     	;# 
   116     0114                     	;# 
   117     0115                     	;# 
   118     0116                     	;# 
   119     0117                     	;# 
   120     0118                     	;# 
   121     0119                     	;# 
   122     011A                     	;# 
   123     011B                     	;# 
   124     011D                     	;# 
   125     011E                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0191                     	;# 
   129     0191                     	;# 
   130     0192                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0193                     	;# 
   134     0194                     	;# 
   135     0195                     	;# 
   136     0196                     	;# 
   137     0199                     	;# 
   138     019A                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019B                     	;# 
   142     019B                     	;# 
   143     019C                     	;# 
   144     019C                     	;# 
   145     019D                     	;# 
   146     019E                     	;# 
   147     019F                     	;# 
   148     020C                     	;# 
   149     020D                     	;# 
   150     0211                     	;# 
   151     0211                     	;# 
   152     0212                     	;# 
   153     0212                     	;# 
   154     0213                     	;# 
   155     0213                     	;# 
   156     0214                     	;# 
   157     0214                     	;# 
   158     0215                     	;# 
   159     0215                     	;# 
   160     0215                     	;# 
   161     0216                     	;# 
   162     0216                     	;# 
   163     0217                     	;# 
   164     0217                     	;# 
   165     0219                     	;# 
   166     021A                     	;# 
   167     021B                     	;# 
   168     021C                     	;# 
   169     021D                     	;# 
   170     021E                     	;# 
   171     021F                     	;# 
   172     0291                     	;# 
   173     0291                     	;# 
   174     0292                     	;# 
   175     0293                     	;# 
   176     0294                     	;# 
   177     0295                     	;# 
   178     0295                     	;# 
   179     0296                     	;# 
   180     0298                     	;# 
   181     0298                     	;# 
   182     0299                     	;# 
   183     029A                     	;# 
   184     029B                     	;# 
   185     029C                     	;# 
   186     029C                     	;# 
   187     029D                     	;# 
   188     029E                     	;# 
   189     029E                     	;# 
   190     0311                     	;# 
   191     0311                     	;# 
   192     0312                     	;# 
   193     0313                     	;# 
   194     0318                     	;# 
   195     0318                     	;# 
   196     0319                     	;# 
   197     031A                     	;# 
   198     0394                     	;# 
   199     0395                     	;# 
   200     0396                     	;# 
   201     039A                     	;# 
   202     039C                     	;# 
   203     039D                     	;# 
   204     039E                     	;# 
   205     039F                     	;# 
   206     0415                     	;# 
   207     0416                     	;# 
   208     0417                     	;# 
   209     041C                     	;# 
   210     041D                     	;# 
   211     041E                     	;# 
   212     0FE4                     	;# 
   213     0FE5                     	;# 
   214     0FE6                     	;# 
   215     0FE7                     	;# 
   216     0FE8                     	;# 
   217     0FE9                     	;# 
   218     0FEA                     	;# 
   219     0FEB                     	;# 
   220     0FED                     	;# 
   221     0FEE                     	;# 
   222     0FEF                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0008                     	;# 
   232     0009                     	;# 
   233     000A                     	;# 
   234     000B                     	;# 
   235     000C                     	;# 
   236     000D                     	;# 
   237     0011                     	;# 
   238     0012                     	;# 
   239     0013                     	;# 
   240     0014                     	;# 
   241     0015                     	;# 
   242     0016                     	;# 
   243     0016                     	;# 
   244     0017                     	;# 
   245     0018                     	;# 
   246     0019                     	;# 
   247     001A                     	;# 
   248     001B                     	;# 
   249     001C                     	;# 
   250     001E                     	;# 
   251     001F                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0094                     	;# 
   258     0095                     	;# 
   259     0096                     	;# 
   260     0097                     	;# 
   261     0098                     	;# 
   262     0099                     	;# 
   263     009A                     	;# 
   264     009B                     	;# 
   265     009B                     	;# 
   266     009C                     	;# 
   267     009D                     	;# 
   268     009E                     	;# 
   269     010C                     	;# 
   270     010D                     	;# 
   271     0111                     	;# 
   272     0112                     	;# 
   273     0113                     	;# 
   274     0114                     	;# 
   275     0115                     	;# 
   276     0116                     	;# 
   277     0117                     	;# 
   278     0118                     	;# 
   279     0119                     	;# 
   280     011A                     	;# 
   281     011B                     	;# 
   282     011D                     	;# 
   283     011E                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0191                     	;# 
   287     0191                     	;# 
   288     0192                     	;# 
   289     0193                     	;# 
   290     0193                     	;# 
   291     0193                     	;# 
   292     0194                     	;# 
   293     0195                     	;# 
   294     0196                     	;# 
   295     0199                     	;# 
   296     019A                     	;# 
   297     019B                     	;# 
   298     019B                     	;# 
   299     019B                     	;# 
   300     019B                     	;# 
   301     019C                     	;# 
   302     019C                     	;# 
   303     019D                     	;# 
   304     019E                     	;# 
   305     019F                     	;# 
   306     020C                     	;# 
   307     020D                     	;# 
   308     0211                     	;# 
   309     0211                     	;# 
   310     0212                     	;# 
   311     0212                     	;# 
   312     0213                     	;# 
   313     0213                     	;# 
   314     0214                     	;# 
   315     0214                     	;# 
   316     0215                     	;# 
   317     0215                     	;# 
   318     0215                     	;# 
   319     0216                     	;# 
   320     0216                     	;# 
   321     0217                     	;# 
   322     0217                     	;# 
   323     0219                     	;# 
   324     021A                     	;# 
   325     021B                     	;# 
   326     021C                     	;# 
   327     021D                     	;# 
   328     021E                     	;# 
   329     021F                     	;# 
   330     0291                     	;# 
   331     0291                     	;# 
   332     0292                     	;# 
   333     0293                     	;# 
   334     0294                     	;# 
   335     0295                     	;# 
   336     0295                     	;# 
   337     0296                     	;# 
   338     0298                     	;# 
   339     0298                     	;# 
   340     0299                     	;# 
   341     029A                     	;# 
   342     029B                     	;# 
   343     029C                     	;# 
   344     029C                     	;# 
   345     029D                     	;# 
   346     029E                     	;# 
   347     029E                     	;# 
   348     0311                     	;# 
   349     0311                     	;# 
   350     0312                     	;# 
   351     0313                     	;# 
   352     0318                     	;# 
   353     0318                     	;# 
   354     0319                     	;# 
   355     031A                     	;# 
   356     0394                     	;# 
   357     0395                     	;# 
   358     0396                     	;# 
   359     039A                     	;# 
   360     039C                     	;# 
   361     039D                     	;# 
   362     039E                     	;# 
   363     039F                     	;# 
   364     0415                     	;# 
   365     0416                     	;# 
   366     0417                     	;# 
   367     041C                     	;# 
   368     041D                     	;# 
   369     041E                     	;# 
   370     0FE4                     	;# 
   371     0FE5                     	;# 
   372     0FE6                     	;# 
   373     0FE7                     	;# 
   374     0FE8                     	;# 
   375     0FE9                     	;# 
   376     0FEA                     	;# 
   377     0FEB                     	;# 
   378     0FED                     	;# 
   379     0FEE                     	;# 
   380     0FEF                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     0011                     	;# 
   396     0012                     	;# 
   397     0013                     	;# 
   398     0014                     	;# 
   399     0015                     	;# 
   400     0016                     	;# 
   401     0016                     	;# 
   402     0017                     	;# 
   403     0018                     	;# 
   404     0019                     	;# 
   405     001A                     	;# 
   406     001B                     	;# 
   407     001C                     	;# 
   408     001E                     	;# 
   409     001F                     	;# 
   410     008C                     	;# 
   411     008D                     	;# 
   412     0091                     	;# 
   413     0092                     	;# 
   414     0093                     	;# 
   415     0094                     	;# 
   416     0095                     	;# 
   417     0096                     	;# 
   418     0097                     	;# 
   419     0098                     	;# 
   420     0099                     	;# 
   421     009A                     	;# 
   422     009B                     	;# 
   423     009B                     	;# 
   424     009C                     	;# 
   425     009D                     	;# 
   426     009E                     	;# 
   427     010C                     	;# 
   428     010D                     	;# 
   429     0111                     	;# 
   430     0112                     	;# 
   431     0113                     	;# 
   432     0114                     	;# 
   433     0115                     	;# 
   434     0116                     	;# 
   435     0117                     	;# 
   436     0118                     	;# 
   437     0119                     	;# 
   438     011A                     	;# 
   439     011B                     	;# 
   440     011D                     	;# 
   441     011E                     	;# 
   442     018C                     	;# 
   443     018D                     	;# 
   444     0191                     	;# 
   445     0191                     	;# 
   446     0192                     	;# 
   447     0193                     	;# 
   448     0193                     	;# 
   449     0193                     	;# 
   450     0194                     	;# 
   451     0195                     	;# 
   452     0196                     	;# 
   453     0199                     	;# 
   454     019A                     	;# 
   455     019B                     	;# 
   456     019B                     	;# 
   457     019B                     	;# 
   458     019B                     	;# 
   459     019C                     	;# 
   460     019C                     	;# 
   461     019D                     	;# 
   462     019E                     	;# 
   463     019F                     	;# 
   464     020C                     	;# 
   465     020D                     	;# 
   466     0211                     	;# 
   467     0211                     	;# 
   468     0212                     	;# 
   469     0212                     	;# 
   470     0213                     	;# 
   471     0213                     	;# 
   472     0214                     	;# 
   473     0214                     	;# 
   474     0215                     	;# 
   475     0215                     	;# 
   476     0215                     	;# 
   477     0216                     	;# 
   478     0216                     	;# 
   479     0217                     	;# 
   480     0217                     	;# 
   481     0219                     	;# 
   482     021A                     	;# 
   483     021B                     	;# 
   484     021C                     	;# 
   485     021D                     	;# 
   486     021E                     	;# 
   487     021F                     	;# 
   488     0291                     	;# 
   489     0291                     	;# 
   490     0292                     	;# 
   491     0293                     	;# 
   492     0294                     	;# 
   493     0295                     	;# 
   494     0295                     	;# 
   495     0296                     	;# 
   496     0298                     	;# 
   497     0298                     	;# 
   498     0299                     	;# 
   499     029A                     	;# 
   500     029B                     	;# 
   501     029C                     	;# 
   502     029C                     	;# 
   503     029D                     	;# 
   504     029E                     	;# 
   505     029E                     	;# 
   506     0311                     	;# 
   507     0311                     	;# 
   508     0312                     	;# 
   509     0313                     	;# 
   510     0318                     	;# 
   511     0318                     	;# 
   512     0319                     	;# 
   513     031A                     	;# 
   514     0394                     	;# 
   515     0395                     	;# 
   516     0396                     	;# 
   517     039A                     	;# 
   518     039C                     	;# 
   519     039D                     	;# 
   520     039E                     	;# 
   521     039F                     	;# 
   522     0415                     	;# 
   523     0416                     	;# 
   524     0417                     	;# 
   525     041C                     	;# 
   526     041D                     	;# 
   527     041E                     	;# 
   528     0FE4                     	;# 
   529     0FE5                     	;# 
   530     0FE6                     	;# 
   531     0FE7                     	;# 
   532     0FE8                     	;# 
   533     0FE9                     	;# 
   534     0FEA                     	;# 
   535     0FEB                     	;# 
   536     0FED                     	;# 
   537     0FEE                     	;# 
   538     0FEF                     	;# 
   539     0000                     	;# 
   540     0001                     	;# 
   541     0002                     	;# 
   542     0003                     	;# 
   543     0004                     	;# 
   544     0005                     	;# 
   545     0006                     	;# 
   546     0007                     	;# 
   547     0008                     	;# 
   548     0009                     	;# 
   549     000A                     	;# 
   550     000B                     	;# 
   551     000C                     	;# 
   552     000D                     	;# 
   553     0011                     	;# 
   554     0012                     	;# 
   555     0013                     	;# 
   556     0014                     	;# 
   557     0015                     	;# 
   558     0016                     	;# 
   559     0016                     	;# 
   560     0017                     	;# 
   561     0018                     	;# 
   562     0019                     	;# 
   563     001A                     	;# 
   564     001B                     	;# 
   565     001C                     	;# 
   566     001E                     	;# 
   567     001F                     	;# 
   568     008C                     	;# 
   569     008D                     	;# 
   570     0091                     	;# 
   571     0092                     	;# 
   572     0093                     	;# 
   573     0094                     	;# 
   574     0095                     	;# 
   575     0096                     	;# 
   576     0097                     	;# 
   577     0098                     	;# 
   578     0099                     	;# 
   579     009A                     	;# 
   580     009B                     	;# 
   581     009B                     	;# 
   582     009C                     	;# 
   583     009D                     	;# 
   584     009E                     	;# 
   585     010C                     	;# 
   586     010D                     	;# 
   587     0111                     	;# 
   588     0112                     	;# 
   589     0113                     	;# 
   590     0114                     	;# 
   591     0115                     	;# 
   592     0116                     	;# 
   593     0117                     	;# 
   594     0118                     	;# 
   595     0119                     	;# 
   596     011A                     	;# 
   597     011B                     	;# 
   598     011D                     	;# 
   599     011E                     	;# 
   600     018C                     	;# 
   601     018D                     	;# 
   602     0191                     	;# 
   603     0191                     	;# 
   604     0192                     	;# 
   605     0193                     	;# 
   606     0193                     	;# 
   607     0193                     	;# 
   608     0194                     	;# 
   609     0195                     	;# 
   610     0196                     	;# 
   611     0199                     	;# 
   612     019A                     	;# 
   613     019B                     	;# 
   614     019B                     	;# 
   615     019B                     	;# 
   616     019B                     	;# 
   617     019C                     	;# 
   618     019C                     	;# 
   619     019D                     	;# 
   620     019E                     	;# 
   621     019F                     	;# 
   622     020C                     	;# 
   623     020D                     	;# 
   624     0211                     	;# 
   625     0211                     	;# 
   626     0212                     	;# 
   627     0212                     	;# 
   628     0213                     	;# 
   629     0213                     	;# 
   630     0214                     	;# 
   631     0214                     	;# 
   632     0215                     	;# 
   633     0215                     	;# 
   634     0215                     	;# 
   635     0216                     	;# 
   636     0216                     	;# 
   637     0217                     	;# 
   638     0217                     	;# 
   639     0219                     	;# 
   640     021A                     	;# 
   641     021B                     	;# 
   642     021C                     	;# 
   643     021D                     	;# 
   644     021E                     	;# 
   645     021F                     	;# 
   646     0291                     	;# 
   647     0291                     	;# 
   648     0292                     	;# 
   649     0293                     	;# 
   650     0294                     	;# 
   651     0295                     	;# 
   652     0295                     	;# 
   653     0296                     	;# 
   654     0298                     	;# 
   655     0298                     	;# 
   656     0299                     	;# 
   657     029A                     	;# 
   658     029B                     	;# 
   659     029C                     	;# 
   660     029C                     	;# 
   661     029D                     	;# 
   662     029E                     	;# 
   663     029E                     	;# 
   664     0311                     	;# 
   665     0311                     	;# 
   666     0312                     	;# 
   667     0313                     	;# 
   668     0318                     	;# 
   669     0318                     	;# 
   670     0319                     	;# 
   671     031A                     	;# 
   672     0394                     	;# 
   673     0395                     	;# 
   674     0396                     	;# 
   675     039A                     	;# 
   676     039C                     	;# 
   677     039D                     	;# 
   678     039E                     	;# 
   679     039F                     	;# 
   680     0415                     	;# 
   681     0416                     	;# 
   682     0417                     	;# 
   683     041C                     	;# 
   684     041D                     	;# 
   685     041E                     	;# 
   686     0FE4                     	;# 
   687     0FE5                     	;# 
   688     0FE6                     	;# 
   689     0FE7                     	;# 
   690     0FE8                     	;# 
   691     0FE9                     	;# 
   692     0FEA                     	;# 
   693     0FEB                     	;# 
   694     0FED                     	;# 
   695     0FEE                     	;# 
   696     0FEF                     	;# 
   697                           
   698                           	psect	idataBANK0
   699     0480                     __pidataBANK0:
   700                           
   701                           ;initializer for Matematicas_7seg@F2503
   702     0480  347E               	retlw	126
   703     0481  3400               	retlw	0
   704     0482  3430               	retlw	48
   705     0483  3400               	retlw	0
   706     0484  346D               	retlw	109
   707     0485  3400               	retlw	0
   708     0486  3479               	retlw	121
   709     0487  3400               	retlw	0
   710     0488  3433               	retlw	51
   711     0489  3400               	retlw	0
   712     048A  345B               	retlw	91
   713     048B  3400               	retlw	0
   714     048C  345F               	retlw	95
   715     048D  3400               	retlw	0
   716     048E  3470               	retlw	112
   717     048F  3400               	retlw	0
   718     0490  347F               	retlw	127
   719     0491  3400               	retlw	0
   720     0492  347B               	retlw	123
   721     0493  3400               	retlw	0
   722     009E                     _ADCON1bits	set	158
   723     008D                     _TRISBbits	set	141
   724     008C                     _TRISAbits	set	140
   725     0099                     _OSCCONbits	set	153
   726     009B                     _ADRESL	set	155
   727     009C                     _ADRESH	set	156
   728     009D                     _ADCON0bits	set	157
   729     0117                     _FVRCONbits	set	279
   730     011E                     _APFCON1bits	set	286
   731     010D                     _LATBbits	set	269
   732     010C                     _LATAbits	set	268
   733     018D                     _ANSELBbits	set	397
   734     018C                     _ANSELAbits	set	396
   735     019A                     _TXREG	set	410
   736     019D                     _RCSTAbits	set	413
   737     019B                     _SPBRG	set	411
   738     019F                     _BAUDCONbits	set	415
   739     019E                     _TXSTAbits	set	414
   740                           
   741                           	psect	cinit
   742     07E9                     start_initialization:	
   743                           ; #config settings
   744                           
   745     07E9                     __initialization:
   746                           
   747                           ; Initialize objects allocated to BANK0
   748     07E9  3080               	movlw	low __pidataBANK0
   749     07EA  0084               	movwf	4
   750     07EB  3084               	movlw	(high __pidataBANK0)| (0+128)
   751     07EC  0085               	movwf	5
   752     07ED  3048               	movlw	low __pdataBANK0
   753     07EE  0086               	movwf	6
   754     07EF  3000               	movlw	high __pdataBANK0
   755     07F0  0087               	movwf	7
   756     07F1  3014               	movlw	20
   757     07F2  3184  2456  3187   	fcall	init_ram
   758                           
   759                           ; Clear objects allocated to BANK0
   760     07F5  305C               	movlw	low __pbssBANK0
   761     07F6  0084               	movwf	4
   762     07F7  3000               	movlw	high __pbssBANK0
   763     07F8  0085               	movwf	5
   764     07F9  3010               	movlw	16
   765     07FA  3184  2450  3187   	fcall	clear_ram0
   766     07FD                     end_of_initialization:	
   767                           ;End of C runtime variable initialization code
   768                           
   769     07FD                     __end_of__initialization:
   770     07FD  0020               	movlb	0
   771     07FE  3185  2DC2         	ljmp	_main	;jump to C main() function
   772                           
   773                           	psect	bssBANK0
   774     005C                     __pbssBANK0:
   775     005C                     Matematicas_7seg@r:
   776     005C                     	ds	6
   777     0062                     mathBCD@r:
   778     0062                     	ds	6
   779     0068                     ASCII_Con@r:
   780     0068                     	ds	4
   781                           
   782                           	psect	dataBANK0
   783     0048                     __pdataBANK0:
   784     0048                     Matematicas_7seg@F2503:
   785     0048                     	ds	20
   786                           
   787                           	psect	inittext
   788     0456                     init_ram:
   789     0456  00FE               	movwf	btemp
   790     0457                     initloop:
   791     0457  0012               	moviw fsr0++
   792     0458  001E               	movwi fsr1++
   793     0459  0BFE               	decfsz	btemp,f
   794     045A  2C57               	goto	initloop
   795     045B  3400               	retlw	0
   796                           
   797                           	psect	clrtext
   798     0450                     clear_ram0:	
   799                           ;	Called with FSR0 containing the base address, and
   800                           ;	WREG with the size to clear
   801                           
   802     0450  0064               	clrwdt	;clear the watchdog before getting into this loop
   803     0451                     clrloop0:
   804     0451  0180               	clrf	0	;clear RAM location pointed to by FSR
   805     0452  3101               	addfsr 0,1
   806     0453  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   807     0454  2C51               	goto	clrloop0	;have we reached the end yet?
   808     0455  3400               	retlw	0	;all done for this memory range, return
   809                           
   810                           	psect	cstackCOMMON
   811     0070                     __pcstackCOMMON:
   812     0070                     ?_init_IO:
   813     0070                     ??_init_IO:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?_Matematicas_7seg:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ??_Matematicas_7seg:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?_UART_print:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?_ASCII_Con:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?_showNumbers:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_main:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ?_showNumber:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_init_UART:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ??_init_UART:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?_UART_write:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ??_UART_write:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_readADC:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?___lmul:	
   853                           ; 4 bytes @ 0x0
   854                           
   855     0070                     UART_write@c:	
   856                           ; 4 bytes @ 0x0
   857                           
   858     0070                     showNumber@digit:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ASCII_Con@a:	
   862                           ; 2 bytes @ 0x0
   863                           
   864     0070                     ___lmul@multiplier:	
   865                           ; 2 bytes @ 0x0
   866                           
   867                           
   868                           ; 4 bytes @ 0x0
   869     0070                     	ds	1
   870     0071                     ??_UART_print:
   871                           
   872                           ; 1 bytes @ 0x1
   873     0071                     	ds	1
   874     0072                     ??_showNumber:
   875     0072                     UART_print@i:	
   876                           ; 1 bytes @ 0x2
   877                           
   878     0072                     ASCII_Con@b:	
   879                           ; 2 bytes @ 0x2
   880                           
   881                           
   882                           ; 2 bytes @ 0x2
   883     0072                     	ds	1
   884     0073                     ??_showNumbers:
   885                           
   886                           ; 1 bytes @ 0x3
   887     0073                     	ds	1
   888     0074                     ??_readADC:
   889     0074                     UART_print@cadena:	
   890                           ; 1 bytes @ 0x4
   891                           
   892     0074                     showNumbers@i:	
   893                           ; 1 bytes @ 0x4
   894                           
   895     0074                     ASCII_Con@c:	
   896                           ; 2 bytes @ 0x4
   897                           
   898     0074                     ___lmul@multiplicand:	
   899                           ; 2 bytes @ 0x4
   900                           
   901                           
   902                           ; 4 bytes @ 0x4
   903     0074                     	ds	2
   904     0076                     ??_ASCII_Con:
   905     0076                     showNumbers@digits:	
   906                           ; 1 bytes @ 0x6
   907                           
   908                           
   909                           ; 1 bytes @ 0x6
   910     0076                     	ds	2
   911     0078                     ??___lmul:
   912     0078                     ___lmul@product:	
   913                           ; 1 bytes @ 0x8
   914                           
   915                           
   916                           ; 4 bytes @ 0x8
   917     0078                     	ds	1
   918     0079                     readADC@r:
   919                           
   920                           ; 4 bytes @ 0x9
   921     0079                     	ds	3
   922     007C                     ??___lldiv:
   923                           
   924                           ; 1 bytes @ 0xC
   925     007C                     	ds	1
   926     007D                     ??___llmod:
   927                           
   928                           ; 1 bytes @ 0xD
   929     007D                     	ds	1
   930     007E                     ??_main:
   931                           
   932                           	psect	cstackBANK0
   933     0020                     __pcstackBANK0:	
   934                           ; 1 bytes @ 0xE
   935                           
   936     0020                     ?___lldiv:
   937     0020                     ___lldiv@divisor:	
   938                           ; 4 bytes @ 0x0
   939                           
   940     0020                     Matematicas_7seg@numbers:	
   941                           ; 4 bytes @ 0x0
   942                           
   943                           
   944                           ; 20 bytes @ 0x0
   945     0020                     	ds	4
   946     0024                     ___lldiv@dividend:
   947                           
   948                           ; 4 bytes @ 0x4
   949     0024                     	ds	4
   950     0028                     ___lldiv@quotient:
   951                           
   952                           ; 4 bytes @ 0x8
   953     0028                     	ds	4
   954     002C                     ___lldiv@counter:
   955                           
   956                           ; 1 bytes @ 0xC
   957     002C                     	ds	1
   958     002D                     ?___llmod:
   959     002D                     ___llmod@divisor:	
   960                           ; 4 bytes @ 0xD
   961                           
   962                           
   963                           ; 4 bytes @ 0xD
   964     002D                     	ds	4
   965     0031                     ___llmod@dividend:
   966                           
   967                           ; 4 bytes @ 0x11
   968     0031                     	ds	3
   969     0034                     Matematicas_7seg@iBCD:
   970                           
   971                           ; 1 bytes @ 0x14
   972     0034                     	ds	1
   973     0035                     ___llmod@counter:
   974                           
   975                           ; 1 bytes @ 0x15
   976     0035                     	ds	1
   977     0036                     ?_mathBCD:
   978     0036                     mathBCD@iADC:	
   979                           ; 1 bytes @ 0x16
   980                           
   981                           
   982                           ; 4 bytes @ 0x16
   983     0036                     	ds	4
   984     003A                     ??_mathBCD:
   985                           
   986                           ; 1 bytes @ 0x1A
   987     003A                     	ds	4
   988     003E                     _mathBCD$1209:
   989                           
   990                           ; 4 bytes @ 0x1E
   991     003E                     	ds	4
   992     0042                     main@dataADC:
   993                           
   994                           ; 4 bytes @ 0x22
   995     0042                     	ds	4
   996     0046                     main@formato7segmentos:
   997                           
   998                           ; 1 bytes @ 0x26
   999     0046                     	ds	1
  1000     0047                     main@numerosBCD:
  1001                           
  1002                           ; 1 bytes @ 0x27
  1003     0047                     	ds	1
  1004                           
  1005                           	psect	maintext
  1006     05C2                     __pmaintext:	
  1007 ;;
  1008 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1009 ;;
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 15 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  dataADC         4   34[BANK0 ] unsigned long 
  1017 ;;  numerosBCD      1   39[BANK0 ] PTR unsigned short 
  1018 ;;		 -> mathBCD@r(6), NULL(0), 
  1019 ;;  formato7segm    1   38[BANK0 ] PTR unsigned short 
  1020 ;;		 -> Matematicas_7seg@r(6), NULL(0), 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : B1F/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1030 ;;      Params:         0       0       0       0       0       0
  1031 ;;      Locals:         0       6       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0
  1033 ;;      Totals:         0       6       0       0       0       0
  1034 ;;Total ram usage:        6 bytes
  1035 ;; Hardware stack levels required when called: 2
  1036 ;; This function calls:
  1037 ;;		_ASCII_Con
  1038 ;;		_Matematicas_7seg
  1039 ;;		_UART_print
  1040 ;;		_init_IO
  1041 ;;		_mathBCD
  1042 ;;		_readADC
  1043 ;;		_showNumbers
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049     05C2                     _main:	
  1050                           ;psect for function _main
  1051                           
  1052     05C2                     l1211:	
  1053                           ;incstack = 0
  1054                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1055                           
  1056                           
  1057                           ;main.c: 16:     init_IO();
  1058     05C2  3185  257D  3185   	fcall	_init_IO
  1059     05C5                     l1213:
  1060     05C5                     l1215:
  1061     05C5                     l1217:
  1062     05C5                     l1219:
  1063                           
  1064                           ;main.c: 24:     {;main.c: 25:         dataADC = readADC();
  1065     05C5  3184  24B5  3185   	fcall	_readADC
  1066     05C8  0873               	movf	?_readADC+3,w
  1067     05C9  0020               	movlb	0	; select bank0
  1068     05CA  00C5               	movwf	main@dataADC+3
  1069     05CB  0872               	movf	?_readADC+2,w
  1070     05CC  00C4               	movwf	main@dataADC+2
  1071     05CD  0871               	movf	?_readADC+1,w
  1072     05CE  00C3               	movwf	main@dataADC+1
  1073     05CF  0870               	movf	?_readADC,w
  1074     05D0  00C2               	movwf	main@dataADC
  1075     05D1                     l1221:
  1076                           
  1077                           ;main.c: 26:         numerosBCD = mathBCD(dataADC);
  1078     05D1  0845               	movf	main@dataADC+3,w
  1079     05D2  00B9               	movwf	mathBCD@iADC+3
  1080     05D3  0844               	movf	main@dataADC+2,w
  1081     05D4  00B8               	movwf	mathBCD@iADC+2
  1082     05D5  0843               	movf	main@dataADC+1,w
  1083     05D6  00B7               	movwf	mathBCD@iADC+1
  1084     05D7  0842               	movf	main@dataADC,w
  1085     05D8  00B6               	movwf	mathBCD@iADC
  1086     05D9  3187  2705  3185   	fcall	_mathBCD
  1087     05DC  0020               	movlb	0	; select bank0
  1088     05DD  00C7               	movwf	main@numerosBCD
  1089     05DE                     l1223:
  1090                           
  1091                           ;main.c: 27:         formato7segmentos = Matematicas_7seg(numerosBCD);
  1092     05DE  0847               	movf	main@numerosBCD,w
  1093     05DF  3185  250D  3185   	fcall	_Matematicas_7seg
  1094     05E2  0020               	movlb	0	; select bank0
  1095     05E3  00C6               	movwf	main@formato7segmentos
  1096     05E4                     l1225:
  1097                           
  1098                           ;main.c: 28:         UART_print(ASCII_Con(numerosBCD[2], numerosBCD[1], numerosBCD[0]));
  1099     05E4  0847               	movf	main@numerosBCD,w
  1100     05E5  3E04               	addlw	4
  1101     05E6  0086               	movwf	6
  1102     05E7  0187               	clrf	7
  1103     05E8  3F40               	moviw [0]fsr1
  1104     05E9  00F0               	movwf	ASCII_Con@a
  1105     05EA  3F41               	moviw [1]fsr1
  1106     05EB  00F1               	movwf	ASCII_Con@a+1
  1107     05EC  0847               	movf	main@numerosBCD,w
  1108     05ED  3E02               	addlw	2
  1109     05EE  0086               	movwf	6
  1110     05EF  0187               	clrf	7
  1111     05F0  3F40               	moviw [0]fsr1
  1112     05F1  00F2               	movwf	ASCII_Con@b
  1113     05F2  3F41               	moviw [1]fsr1
  1114     05F3  00F3               	movwf	ASCII_Con@b+1
  1115     05F4  0847               	movf	main@numerosBCD,w
  1116     05F5  0086               	movwf	6
  1117     05F6  0187               	clrf	7
  1118     05F7  3F40               	moviw [0]fsr1
  1119     05F8  00F4               	movwf	ASCII_Con@c
  1120     05F9  3F41               	moviw [1]fsr1
  1121     05FA  00F5               	movwf	ASCII_Con@c+1
  1122     05FB  3184  2472  3185   	fcall	_ASCII_Con
  1123     05FE  3184  2494  3185   	fcall	_UART_print
  1124     0601                     l1227:
  1125                           
  1126                           ;main.c: 29:         showNumbers(formato7segmentos);
  1127     0601  0020               	movlb	0	; select bank0
  1128     0602  0846               	movf	main@formato7segmentos,w
  1129     0603  3186  2654  3185   	fcall	_showNumbers
  1130     0606  2DC5               	goto	l1219
  1131     0607  3180  2802         	ljmp	start
  1132     0609                     __end_of_main:
  1133                           
  1134                           	psect	text1
  1135     0654                     __ptext1:	
  1136 ;; *************** function _showNumbers *****************
  1137 ;; Defined at:
  1138 ;;		line 79 in file "funtions.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  digits          1    wreg     PTR unsigned short 
  1141 ;;		 -> Matematicas_7seg@r(6), NULL(0), 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  digits          1    6[COMMON] PTR unsigned short 
  1144 ;;		 -> Matematicas_7seg@r(6), NULL(0), 
  1145 ;;  i               2    4[COMMON] int 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1155 ;;      Params:         0       0       0       0       0       0
  1156 ;;      Locals:         3       0       0       0       0       0
  1157 ;;      Temps:          1       0       0       0       0       0
  1158 ;;      Totals:         4       0       0       0       0       0
  1159 ;;Total ram usage:        4 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 1
  1162 ;; This function calls:
  1163 ;;		_showNumber
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169     0654                     _showNumbers:	
  1170                           ;psect for function _showNumbers
  1171                           
  1172                           
  1173                           ;incstack = 0
  1174                           ; Regs used in _showNumbers: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1175                           ;showNumbers@digits stored from wreg
  1176     0654  00F6               	movwf	showNumbers@digits
  1177     0655                     l1179:
  1178                           
  1179                           ;funtions.c: 80:     for (int i = 0; i < 10; i++) {
  1180     0655  01F4               	clrf	showNumbers@i
  1181     0656  01F5               	clrf	showNumbers@i+1
  1182     0657                     l1185:
  1183                           
  1184                           ;funtions.c: 81:         showNumber(digits[0]);
  1185     0657  0876               	movf	showNumbers@digits,w
  1186     0658  0086               	movwf	6
  1187     0659  0187               	clrf	7
  1188     065A  3F40               	moviw [0]fsr1
  1189     065B  00F0               	movwf	showNumber@digit
  1190     065C  3F41               	moviw [1]fsr1
  1191     065D  00F1               	movwf	showNumber@digit+1
  1192     065E  3185  2542  3186   	fcall	_showNumber
  1193     0661                     l1187:
  1194                           
  1195                           ;funtions.c: 82:         LATAbits.LATA3 = 1;
  1196     0661  0022               	movlb	2	; select bank2
  1197     0662  158C               	bsf	12,3	;volatile
  1198     0663                     l1189:
  1199                           
  1200                           ;funtions.c: 83:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1201     0663  300D               	movlw	13
  1202     0664  00F3               	movwf	??_showNumbers
  1203     0665  30FC               	movlw	252
  1204     0666                     u757:
  1205     0666  0B89               	decfsz	9,f
  1206     0667  2E66               	goto	u757
  1207     0668  0BF3               	decfsz	??_showNumbers,f
  1208     0669  2E66               	goto	u757
  1209     066A                     l1191:
  1210                           
  1211                           ;funtions.c: 84:         LATAbits.LATA3 = 0;
  1212     066A  0022               	movlb	2	; select bank2
  1213     066B  118C               	bcf	12,3	;volatile
  1214     066C                     l1193:
  1215                           
  1216                           ;funtions.c: 86:         showNumber(digits[1]);
  1217     066C  0876               	movf	showNumbers@digits,w
  1218     066D  3E02               	addlw	2
  1219     066E  0086               	movwf	6
  1220     066F  0187               	clrf	7
  1221     0670  3F40               	moviw [0]fsr1
  1222     0671  00F0               	movwf	showNumber@digit
  1223     0672  3F41               	moviw [1]fsr1
  1224     0673  00F1               	movwf	showNumber@digit+1
  1225     0674  3185  2542  3186   	fcall	_showNumber
  1226     0677                     l1195:
  1227                           
  1228                           ;funtions.c: 87:         LATAbits.LATA2 = 1;
  1229     0677  0022               	movlb	2	; select bank2
  1230     0678  150C               	bsf	12,2	;volatile
  1231                           
  1232                           ;funtions.c: 88:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1233     0679  300D               	movlw	13
  1234     067A  00F3               	movwf	??_showNumbers
  1235     067B  30FC               	movlw	252
  1236     067C                     u767:
  1237     067C  0B89               	decfsz	9,f
  1238     067D  2E7C               	goto	u767
  1239     067E  0BF3               	decfsz	??_showNumbers,f
  1240     067F  2E7C               	goto	u767
  1241     0680                     l1197:
  1242                           
  1243                           ;funtions.c: 89:         LATAbits.LATA2 = 0;
  1244     0680  0022               	movlb	2	; select bank2
  1245     0681  110C               	bcf	12,2	;volatile
  1246     0682                     l1199:
  1247                           
  1248                           ;funtions.c: 91:         showNumber(digits[2]);
  1249     0682  0876               	movf	showNumbers@digits,w
  1250     0683  3E04               	addlw	4
  1251     0684  0086               	movwf	6
  1252     0685  0187               	clrf	7
  1253     0686  3F40               	moviw [0]fsr1
  1254     0687  00F0               	movwf	showNumber@digit
  1255     0688  3F41               	moviw [1]fsr1
  1256     0689  00F1               	movwf	showNumber@digit+1
  1257     068A  3185  2542  3186   	fcall	_showNumber
  1258     068D                     l1201:
  1259                           
  1260                           ;funtions.c: 92:         LATAbits.LATA1 = 1;
  1261     068D  0022               	movlb	2	; select bank2
  1262     068E  148C               	bsf	12,1	;volatile
  1263     068F                     l1203:
  1264                           
  1265                           ;funtions.c: 93:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1266     068F  300D               	movlw	13
  1267     0690  00F3               	movwf	??_showNumbers
  1268     0691  30FC               	movlw	252
  1269     0692                     u777:
  1270     0692  0B89               	decfsz	9,f
  1271     0693  2E92               	goto	u777
  1272     0694  0BF3               	decfsz	??_showNumbers,f
  1273     0695  2E92               	goto	u777
  1274     0696                     l1205:
  1275                           
  1276                           ;funtions.c: 94:         LATAbits.LATA1 = 0;
  1277     0696  0022               	movlb	2	; select bank2
  1278     0697  108C               	bcf	12,1	;volatile
  1279     0698                     l1207:
  1280                           
  1281                           ;funtions.c: 95:     }
  1282     0698  3001               	movlw	1
  1283     0699  07F4               	addwf	showNumbers@i,f
  1284     069A  3000               	movlw	0
  1285     069B  3DF5               	addwfc	showNumbers@i+1,f
  1286     069C                     l1209:
  1287     069C  0875               	movf	showNumbers@i+1,w
  1288     069D  3A80               	xorlw	128
  1289     069E  00F3               	movwf	??_showNumbers
  1290     069F  3080               	movlw	128
  1291     06A0  0273               	subwf	??_showNumbers,w
  1292     06A1  1D03               	skipz
  1293     06A2  2EA5               	goto	u745
  1294     06A3  300A               	movlw	10
  1295     06A4  0274               	subwf	showNumbers@i,w
  1296     06A5                     u745:
  1297     06A5  1C03               	skipc
  1298     06A6  2EA8               	goto	u741
  1299     06A7  2EA9               	goto	u740
  1300     06A8                     u741:
  1301     06A8  2E57               	goto	l1185
  1302     06A9                     u740:
  1303     06A9                     l66:
  1304     06A9  0008               	return
  1305     06AA                     __end_of_showNumbers:
  1306                           
  1307                           	psect	text2
  1308     0542                     __ptext2:	
  1309 ;; *************** function _showNumber *****************
  1310 ;; Defined at:
  1311 ;;		line 60 in file "funtions.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  digit           2    0[COMMON] unsigned short 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1325 ;;      Params:         2       0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0
  1327 ;;      Temps:          1       0       0       0       0       0
  1328 ;;      Totals:         3       0       0       0       0       0
  1329 ;;Total ram usage:        3 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_showNumbers
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338     0542                     _showNumber:	
  1339                           ;psect for function _showNumber
  1340                           
  1341     0542                     l977:	
  1342                           ;incstack = 0
  1343                           ; Regs used in _showNumber: [wreg+status,2+status,0]
  1344                           
  1345                           
  1346                           ;funtions.c: 61:     LATAbits.LATA4 = !!(digit & (1 << 6));
  1347     0542  1B70               	btfsc	showNumber@digit,6
  1348     0543  2D45               	goto	u381
  1349     0544  2D48               	goto	u380
  1350     0545                     u381:
  1351     0545  0022               	movlb	2	; select bank2
  1352     0546  160C               	bsf	12,4	;volatile
  1353     0547  2D4A               	goto	u394
  1354     0548                     u380:
  1355     0548  0022               	movlb	2	; select bank2
  1356     0549  120C               	bcf	12,4	;volatile
  1357     054A                     u394:
  1358                           
  1359                           ;funtions.c: 62:     LATAbits.LATA6 = !!(digit & (1 << 5));
  1360     054A  1AF0               	btfsc	showNumber@digit,5
  1361     054B  2D4D               	goto	u401
  1362     054C  2D50               	goto	u400
  1363     054D                     u401:
  1364     054D  0022               	movlb	2	; select bank2
  1365     054E  170C               	bsf	12,6	;volatile
  1366     054F  2D52               	goto	u414
  1367     0550                     u400:
  1368     0550  0022               	movlb	2	; select bank2
  1369     0551  130C               	bcf	12,6	;volatile
  1370     0552                     u414:
  1371                           
  1372                           ;funtions.c: 63:     LATAbits.LATA7 = !!(digit & (1 << 4));
  1373     0552  1A70               	btfsc	showNumber@digit,4
  1374     0553  2D55               	goto	u421
  1375     0554  2D58               	goto	u420
  1376     0555                     u421:
  1377     0555  0022               	movlb	2	; select bank2
  1378     0556  178C               	bsf	12,7	;volatile
  1379     0557  2D5A               	goto	u434
  1380     0558                     u420:
  1381     0558  0022               	movlb	2	; select bank2
  1382     0559  138C               	bcf	12,7	;volatile
  1383     055A                     u434:
  1384                           
  1385                           ;funtions.c: 64:     LATBbits.LATB0 = !!(digit & (1 << 3));
  1386     055A  19F0               	btfsc	showNumber@digit,3
  1387     055B  2D5D               	goto	u441
  1388     055C  2D60               	goto	u440
  1389     055D                     u441:
  1390     055D  0022               	movlb	2	; select bank2
  1391     055E  140D               	bsf	13,0	;volatile
  1392     055F  2D62               	goto	u454
  1393     0560                     u440:
  1394     0560  0022               	movlb	2	; select bank2
  1395     0561  100D               	bcf	13,0	;volatile
  1396     0562                     u454:
  1397                           
  1398                           ;funtions.c: 65:     LATBbits.LATB3 = !!(digit & (1 << 2));
  1399     0562  1970               	btfsc	showNumber@digit,2
  1400     0563  2D65               	goto	u461
  1401     0564  2D68               	goto	u460
  1402     0565                     u461:
  1403     0565  0022               	movlb	2	; select bank2
  1404     0566  158D               	bsf	13,3	;volatile
  1405     0567  2D6A               	goto	u474
  1406     0568                     u460:
  1407     0568  0022               	movlb	2	; select bank2
  1408     0569  118D               	bcf	13,3	;volatile
  1409     056A                     u474:
  1410                           
  1411                           ;funtions.c: 66:     LATBbits.LATB4 = !!(digit & (1 << 1));
  1412     056A  18F0               	btfsc	showNumber@digit,1
  1413     056B  2D6D               	goto	u481
  1414     056C  2D70               	goto	u480
  1415     056D                     u481:
  1416     056D  0022               	movlb	2	; select bank2
  1417     056E  160D               	bsf	13,4	;volatile
  1418     056F  2D72               	goto	u494
  1419     0570                     u480:
  1420     0570  0022               	movlb	2	; select bank2
  1421     0571  120D               	bcf	13,4	;volatile
  1422     0572                     u494:
  1423     0572                     l979:
  1424                           
  1425                           ;funtions.c: 67:     LATBbits.LATB5 = digit & 1;
  1426     0572  0870               	movf	showNumber@digit,w
  1427     0573  3901               	andlw	1
  1428     0574  00F2               	movwf	??_showNumber
  1429     0575  0EF2               	swapf	??_showNumber,f
  1430     0576  0DF2               	rlf	??_showNumber,f
  1431     0577  080D               	movf	13,w	;volatile
  1432     0578  0672               	xorwf	??_showNumber,w
  1433     0579  39DF               	andlw	-33
  1434     057A  0672               	xorwf	??_showNumber,w
  1435     057B  008D               	movwf	13	;volatile
  1436     057C                     l61:
  1437     057C  0008               	return
  1438     057D                     __end_of_showNumber:
  1439                           
  1440                           	psect	text3
  1441     04B5                     __ptext3:	
  1442 ;; *************** function _readADC *****************
  1443 ;; Defined at:
  1444 ;;		line 103 in file "funtions.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  r               4    9[COMMON] unsigned long 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  4    0[COMMON] unsigned long 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1458 ;;      Params:         4       0       0       0       0       0
  1459 ;;      Locals:         4       0       0       0       0       0
  1460 ;;      Temps:          5       0       0       0       0       0
  1461 ;;      Totals:        13       0       0       0       0       0
  1462 ;;Total ram usage:       13 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471     04B5                     _readADC:	
  1472                           ;psect for function _readADC
  1473                           
  1474     04B5                     l1133:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1477                           
  1478                           
  1479                           ;funtions.c: 104:     ADCON0bits.ADON = 1;
  1480     04B5  0021               	movlb	1	; select bank1
  1481     04B6  141D               	bsf	29,0	;volatile
  1482                           
  1483                           ;funtions.c: 106:     ADCON0bits.GO_nDONE = 1;
  1484     04B7  149D               	bsf	29,1	;volatile
  1485     04B8                     l69:	
  1486                           ;funtions.c: 108:     while (ADCON0bits.GO_nDONE);
  1487                           
  1488     04B8  189D               	btfsc	29,1	;volatile
  1489     04B9  2CBB               	goto	u681
  1490     04BA  2CBC               	goto	u680
  1491     04BB                     u681:
  1492     04BB  2CB8               	goto	l69
  1493     04BC                     u680:
  1494     04BC                     l1135:
  1495                           
  1496                           ;funtions.c: 110:     unsigned long r = (unsigned long)((ADRESH << 8) + ADRESL);
  1497     04BC  081B               	movf	27,w	;volatile
  1498     04BD  00F4               	movwf	??_readADC
  1499     04BE  01F5               	clrf	??_readADC+1
  1500     04BF  081C               	movf	28,w	;volatile
  1501     04C0  00F6               	movwf	??_readADC+2
  1502     04C1  01F7               	clrf	??_readADC+3
  1503     04C2  0876               	movf	??_readADC+2,w
  1504     04C3  00F7               	movwf	??_readADC+3
  1505     04C4  01F6               	clrf	??_readADC+2
  1506     04C5  0874               	movf	??_readADC,w
  1507     04C6  0776               	addwf	??_readADC+2,w
  1508     04C7  00F9               	movwf	readADC@r
  1509     04C8  0875               	movf	??_readADC+1,w
  1510     04C9  3D77               	addwfc	??_readADC+3,w
  1511     04CA  00FA               	movwf	readADC@r+1
  1512     04CB  01FB               	clrf	readADC@r+2
  1513     04CC  1BFA               	btfsc	readADC@r+1,7
  1514     04CD  03FB               	decf	readADC@r+2,f
  1515     04CE  087B               	movf	readADC@r+2,w
  1516     04CF  00FC               	movwf	readADC@r+3
  1517     04D0                     l1137:
  1518                           
  1519                           ;funtions.c: 111:     ADCON0bits.ADON = 0;
  1520     04D0  101D               	bcf	29,0	;volatile
  1521     04D1                     l1139:
  1522                           
  1523                           ;funtions.c: 112:     return r;
  1524     04D1  087C               	movf	readADC@r+3,w
  1525     04D2  00F3               	movwf	?_readADC+3
  1526     04D3  087B               	movf	readADC@r+2,w
  1527     04D4  00F2               	movwf	?_readADC+2
  1528     04D5  087A               	movf	readADC@r+1,w
  1529     04D6  00F1               	movwf	?_readADC+1
  1530     04D7  0879               	movf	readADC@r,w
  1531     04D8  00F0               	movwf	?_readADC
  1532     04D9                     l72:
  1533     04D9  0008               	return
  1534     04DA                     __end_of_readADC:
  1535                           
  1536                           	psect	text4
  1537     0705                     __ptext4:	
  1538 ;; *************** function _mathBCD *****************
  1539 ;; Defined at:
  1540 ;;		line 12 in file "funtions.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  iADC            4   22[BANK0 ] unsigned long 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      PTR unsigned short 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, pclath, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1554 ;;      Params:         0       4       0       0       0       0
  1555 ;;      Locals:         0       4       0       0       0       0
  1556 ;;      Temps:          0       4       0       0       0       0
  1557 ;;      Totals:         0      12       0       0       0       0
  1558 ;;Total ram usage:       12 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 1
  1561 ;; This function calls:
  1562 ;;		___lldiv
  1563 ;;		___llmod
  1564 ;;		___lmul
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570     0705                     _mathBCD:	
  1571                           ;psect for function _mathBCD
  1572                           
  1573     0705                     l1143:	
  1574                           ;incstack = 0
  1575                           ; Regs used in _mathBCD: [wreg+status,2+status,0+pclath+cstack]
  1576                           
  1577                           
  1578                           ;funtions.c: 14:     static unsigned short r[3];;funtions.c: 15:     r[0] = ((iADC * 100
      +                          0) / 1024) % 10;
  1579     0705  3000               	movlw	0
  1580     0706  0020               	movlb	0	; select bank0
  1581     0707  00B0               	movwf	___llmod@divisor+3
  1582     0708  3000               	movlw	0
  1583     0709  00AF               	movwf	___llmod@divisor+2
  1584     070A  3000               	movlw	0
  1585     070B  00AE               	movwf	___llmod@divisor+1
  1586     070C  300A               	movlw	10
  1587     070D  00AD               	movwf	___llmod@divisor
  1588     070E  3000               	movlw	0
  1589     070F  00F7               	movwf	___lmul@multiplicand+3
  1590     0710  3000               	movlw	0
  1591     0711  00F6               	movwf	___lmul@multiplicand+2
  1592     0712  3003               	movlw	3
  1593     0713  00F5               	movwf	___lmul@multiplicand+1
  1594     0714  30E8               	movlw	232
  1595     0715  00F4               	movwf	___lmul@multiplicand
  1596     0716  0839               	movf	mathBCD@iADC+3,w
  1597     0717  00F3               	movwf	___lmul@multiplier+3
  1598     0718  0838               	movf	mathBCD@iADC+2,w
  1599     0719  00F2               	movwf	___lmul@multiplier+2
  1600     071A  0837               	movf	mathBCD@iADC+1,w
  1601     071B  00F1               	movwf	___lmul@multiplier+1
  1602     071C  0836               	movf	mathBCD@iADC,w
  1603     071D  00F0               	movwf	___lmul@multiplier
  1604     071E  3184  24DA  3187   	fcall	___lmul
  1605     0721  0870               	movf	?___lmul,w
  1606     0722  0020               	movlb	0	; select bank0
  1607     0723  00BA               	movwf	??_mathBCD
  1608     0724  0871               	movf	?___lmul+1,w
  1609     0725  00BB               	movwf	??_mathBCD+1
  1610     0726  0872               	movf	?___lmul+2,w
  1611     0727  00BC               	movwf	??_mathBCD+2
  1612     0728  0873               	movf	?___lmul+3,w
  1613     0729  00BD               	movwf	??_mathBCD+3
  1614     072A  300A               	movlw	10
  1615     072B                     u695:
  1616     072B  36BD               	lsrf	??_mathBCD+3,f
  1617     072C  0CBC               	rrf	??_mathBCD+2,f
  1618     072D  0CBB               	rrf	??_mathBCD+1,f
  1619     072E  0CBA               	rrf	??_mathBCD,f
  1620     072F                     u690:
  1621     072F  0B89               	decfsz	9,f
  1622     0730  2F2B               	goto	u695
  1623     0731  083D               	movf	??_mathBCD+3,w
  1624     0732  00B4               	movwf	___llmod@dividend+3
  1625     0733  083C               	movf	??_mathBCD+2,w
  1626     0734  00B3               	movwf	___llmod@dividend+2
  1627     0735  083B               	movf	??_mathBCD+1,w
  1628     0736  00B2               	movwf	___llmod@dividend+1
  1629     0737  083A               	movf	??_mathBCD,w
  1630     0738  00B1               	movwf	___llmod@dividend
  1631     0739  3186  2609  3187   	fcall	___llmod
  1632     073C  0020               	movlb	0	; select bank0
  1633     073D  082E               	movf	?___llmod+1,w
  1634     073E  00E3               	movwf	mathBCD@r+1
  1635     073F  082D               	movf	?___llmod,w
  1636     0740  00E2               	movwf	mathBCD@r
  1637                           
  1638                           ;funtions.c: 16:     r[1] = (((iADC * 1000) / 1024) / 10) % 10;
  1639     0741  3000               	movlw	0
  1640     0742  00B0               	movwf	___llmod@divisor+3
  1641     0743  3000               	movlw	0
  1642     0744  00AF               	movwf	___llmod@divisor+2
  1643     0745  3000               	movlw	0
  1644     0746  00AE               	movwf	___llmod@divisor+1
  1645     0747  300A               	movlw	10
  1646     0748  00AD               	movwf	___llmod@divisor
  1647     0749  3000               	movlw	0
  1648     074A  00A3               	movwf	___lldiv@divisor+3
  1649     074B  3000               	movlw	0
  1650     074C  00A2               	movwf	___lldiv@divisor+2
  1651     074D  3000               	movlw	0
  1652     074E  00A1               	movwf	___lldiv@divisor+1
  1653     074F  300A               	movlw	10
  1654     0750  00A0               	movwf	___lldiv@divisor
  1655     0751  3000               	movlw	0
  1656     0752  00F7               	movwf	___lmul@multiplicand+3
  1657     0753  3000               	movlw	0
  1658     0754  00F6               	movwf	___lmul@multiplicand+2
  1659     0755  3003               	movlw	3
  1660     0756  00F5               	movwf	___lmul@multiplicand+1
  1661     0757  30E8               	movlw	232
  1662     0758  00F4               	movwf	___lmul@multiplicand
  1663     0759  0839               	movf	mathBCD@iADC+3,w
  1664     075A  00F3               	movwf	___lmul@multiplier+3
  1665     075B  0838               	movf	mathBCD@iADC+2,w
  1666     075C  00F2               	movwf	___lmul@multiplier+2
  1667     075D  0837               	movf	mathBCD@iADC+1,w
  1668     075E  00F1               	movwf	___lmul@multiplier+1
  1669     075F  0836               	movf	mathBCD@iADC,w
  1670     0760  00F0               	movwf	___lmul@multiplier
  1671     0761  3184  24DA  3187   	fcall	___lmul
  1672     0764  0870               	movf	?___lmul,w
  1673     0765  0020               	movlb	0	; select bank0
  1674     0766  00BA               	movwf	??_mathBCD
  1675     0767  0871               	movf	?___lmul+1,w
  1676     0768  00BB               	movwf	??_mathBCD+1
  1677     0769  0872               	movf	?___lmul+2,w
  1678     076A  00BC               	movwf	??_mathBCD+2
  1679     076B  0873               	movf	?___lmul+3,w
  1680     076C  00BD               	movwf	??_mathBCD+3
  1681     076D  300A               	movlw	10
  1682     076E                     u705:
  1683     076E  36BD               	lsrf	??_mathBCD+3,f
  1684     076F  0CBC               	rrf	??_mathBCD+2,f
  1685     0770  0CBB               	rrf	??_mathBCD+1,f
  1686     0771  0CBA               	rrf	??_mathBCD,f
  1687     0772                     u700:
  1688     0772  0B89               	decfsz	9,f
  1689     0773  2F6E               	goto	u705
  1690     0774  083D               	movf	??_mathBCD+3,w
  1691     0775  00A7               	movwf	___lldiv@dividend+3
  1692     0776  083C               	movf	??_mathBCD+2,w
  1693     0777  00A6               	movwf	___lldiv@dividend+2
  1694     0778  083B               	movf	??_mathBCD+1,w
  1695     0779  00A5               	movwf	___lldiv@dividend+1
  1696     077A  083A               	movf	??_mathBCD,w
  1697     077B  00A4               	movwf	___lldiv@dividend
  1698     077C  3186  26AA  3187   	fcall	___lldiv
  1699     077F  0020               	movlb	0	; select bank0
  1700     0780  0823               	movf	?___lldiv+3,w
  1701     0781  00B4               	movwf	___llmod@dividend+3
  1702     0782  0822               	movf	?___lldiv+2,w
  1703     0783  00B3               	movwf	___llmod@dividend+2
  1704     0784  0821               	movf	?___lldiv+1,w
  1705     0785  00B2               	movwf	___llmod@dividend+1
  1706     0786  0820               	movf	?___lldiv,w
  1707     0787  00B1               	movwf	___llmod@dividend
  1708     0788  3186  2609  3187   	fcall	___llmod
  1709     078B  0020               	movlb	0	; select bank0
  1710     078C  082E               	movf	?___llmod+1,w
  1711     078D  00E5               	movwf	mathBCD@r+3
  1712     078E  082D               	movf	?___llmod,w
  1713     078F  00E4               	movwf	mathBCD@r+2
  1714                           
  1715                           ;funtions.c: 17:     r[2] = (((iADC * 1000) / 1024) / 10) / 10;
  1716     0790  3000               	movlw	0
  1717     0791  00A3               	movwf	___lldiv@divisor+3
  1718     0792  3000               	movlw	0
  1719     0793  00A2               	movwf	___lldiv@divisor+2
  1720     0794  3000               	movlw	0
  1721     0795  00A1               	movwf	___lldiv@divisor+1
  1722     0796  300A               	movlw	10
  1723     0797  00A0               	movwf	___lldiv@divisor
  1724     0798  3000               	movlw	0
  1725     0799  00F7               	movwf	___lmul@multiplicand+3
  1726     079A  3000               	movlw	0
  1727     079B  00F6               	movwf	___lmul@multiplicand+2
  1728     079C  3003               	movlw	3
  1729     079D  00F5               	movwf	___lmul@multiplicand+1
  1730     079E  30E8               	movlw	232
  1731     079F  00F4               	movwf	___lmul@multiplicand
  1732     07A0  0839               	movf	mathBCD@iADC+3,w
  1733     07A1  00F3               	movwf	___lmul@multiplier+3
  1734     07A2  0838               	movf	mathBCD@iADC+2,w
  1735     07A3  00F2               	movwf	___lmul@multiplier+2
  1736     07A4  0837               	movf	mathBCD@iADC+1,w
  1737     07A5  00F1               	movwf	___lmul@multiplier+1
  1738     07A6  0836               	movf	mathBCD@iADC,w
  1739     07A7  00F0               	movwf	___lmul@multiplier
  1740     07A8  3184  24DA  3187   	fcall	___lmul
  1741     07AB  0870               	movf	?___lmul,w
  1742     07AC  0020               	movlb	0	; select bank0
  1743     07AD  00BA               	movwf	??_mathBCD
  1744     07AE  0871               	movf	?___lmul+1,w
  1745     07AF  00BB               	movwf	??_mathBCD+1
  1746     07B0  0872               	movf	?___lmul+2,w
  1747     07B1  00BC               	movwf	??_mathBCD+2
  1748     07B2  0873               	movf	?___lmul+3,w
  1749     07B3  00BD               	movwf	??_mathBCD+3
  1750     07B4  300A               	movlw	10
  1751     07B5                     u715:
  1752     07B5  36BD               	lsrf	??_mathBCD+3,f
  1753     07B6  0CBC               	rrf	??_mathBCD+2,f
  1754     07B7  0CBB               	rrf	??_mathBCD+1,f
  1755     07B8  0CBA               	rrf	??_mathBCD,f
  1756     07B9                     u710:
  1757     07B9  0B89               	decfsz	9,f
  1758     07BA  2FB5               	goto	u715
  1759     07BB  083D               	movf	??_mathBCD+3,w
  1760     07BC  00A7               	movwf	___lldiv@dividend+3
  1761     07BD  083C               	movf	??_mathBCD+2,w
  1762     07BE  00A6               	movwf	___lldiv@dividend+2
  1763     07BF  083B               	movf	??_mathBCD+1,w
  1764     07C0  00A5               	movwf	___lldiv@dividend+1
  1765     07C1  083A               	movf	??_mathBCD,w
  1766     07C2  00A4               	movwf	___lldiv@dividend
  1767     07C3  3186  26AA  3187   	fcall	___lldiv
  1768     07C6  0020               	movlb	0	; select bank0
  1769     07C7  0823               	movf	?___lldiv+3,w
  1770     07C8  00C1               	movwf	_mathBCD$1209+3
  1771     07C9  0822               	movf	?___lldiv+2,w
  1772     07CA  00C0               	movwf	_mathBCD$1209+2
  1773     07CB  0821               	movf	?___lldiv+1,w
  1774     07CC  00BF               	movwf	_mathBCD$1209+1
  1775     07CD  0820               	movf	?___lldiv,w
  1776     07CE  00BE               	movwf	_mathBCD$1209
  1777                           
  1778                           ;funtions.c: 17:     r[2] = (((iADC * 1000) / 1024) / 10) / 10;
  1779     07CF  3000               	movlw	0
  1780     07D0  00A3               	movwf	___lldiv@divisor+3
  1781     07D1  3000               	movlw	0
  1782     07D2  00A2               	movwf	___lldiv@divisor+2
  1783     07D3  3000               	movlw	0
  1784     07D4  00A1               	movwf	___lldiv@divisor+1
  1785     07D5  300A               	movlw	10
  1786     07D6  00A0               	movwf	___lldiv@divisor
  1787     07D7  0841               	movf	_mathBCD$1209+3,w
  1788     07D8  00A7               	movwf	___lldiv@dividend+3
  1789     07D9  0840               	movf	_mathBCD$1209+2,w
  1790     07DA  00A6               	movwf	___lldiv@dividend+2
  1791     07DB  083F               	movf	_mathBCD$1209+1,w
  1792     07DC  00A5               	movwf	___lldiv@dividend+1
  1793     07DD  083E               	movf	_mathBCD$1209,w
  1794     07DE  00A4               	movwf	___lldiv@dividend
  1795     07DF  3186  26AA  3187   	fcall	___lldiv
  1796     07E2  0020               	movlb	0	; select bank0
  1797     07E3  0821               	movf	?___lldiv+1,w
  1798     07E4  00E7               	movwf	mathBCD@r+5
  1799     07E5  0820               	movf	?___lldiv,w
  1800     07E6  00E6               	movwf	mathBCD@r+4
  1801     07E7                     l1145:
  1802                           
  1803                           ;funtions.c: 19:     return r;
  1804     07E7  3062               	movlw	(low (mathBCD@r| 0))& (0+255)
  1805     07E8                     l51:
  1806     07E8  0008               	return
  1807     07E9                     __end_of_mathBCD:
  1808                           
  1809                           	psect	text5
  1810     04DA                     __ptext5:	
  1811 ;; *************** function ___lmul *****************
  1812 ;; Defined at:
  1813 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  multiplier      4    0[COMMON] unsigned long 
  1816 ;;  multiplicand    4    4[COMMON] unsigned long 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  product         4    8[COMMON] unsigned long 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  4    0[COMMON] unsigned long 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1828 ;;      Params:         8       0       0       0       0       0
  1829 ;;      Locals:         4       0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0
  1831 ;;      Totals:        12       0       0       0       0       0
  1832 ;;Total ram usage:       12 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_mathBCD
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841     04DA                     ___lmul:	
  1842                           ;psect for function ___lmul
  1843                           
  1844     04DA                     l989:	
  1845                           ;incstack = 0
  1846                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1847                           
  1848     04DA  3000               	movlw	0
  1849     04DB  00FB               	movwf	___lmul@product+3
  1850     04DC  3000               	movlw	0
  1851     04DD  00FA               	movwf	___lmul@product+2
  1852     04DE  3000               	movlw	0
  1853     04DF  00F9               	movwf	___lmul@product+1
  1854     04E0  3000               	movlw	0
  1855     04E1  00F8               	movwf	___lmul@product
  1856     04E2                     l991:
  1857     04E2  1C70               	btfss	___lmul@multiplier,0
  1858     04E3  2CE5               	goto	u511
  1859     04E4  2CE6               	goto	u510
  1860     04E5                     u511:
  1861     04E5  2CEE               	goto	l995
  1862     04E6                     u510:
  1863     04E6                     l993:
  1864     04E6  0874               	movf	___lmul@multiplicand,w
  1865     04E7  07F8               	addwf	___lmul@product,f
  1866     04E8  0875               	movf	___lmul@multiplicand+1,w
  1867     04E9  3DF9               	addwfc	___lmul@product+1,f
  1868     04EA  0876               	movf	___lmul@multiplicand+2,w
  1869     04EB  3DFA               	addwfc	___lmul@product+2,f
  1870     04EC  0877               	movf	___lmul@multiplicand+3,w
  1871     04ED  3DFB               	addwfc	___lmul@product+3,f
  1872     04EE                     l995:
  1873     04EE  3001               	movlw	1
  1874     04EF                     u525:
  1875     04EF  35F4               	lslf	___lmul@multiplicand,f
  1876     04F0  0DF5               	rlf	___lmul@multiplicand+1,f
  1877     04F1  0DF6               	rlf	___lmul@multiplicand+2,f
  1878     04F2  0DF7               	rlf	___lmul@multiplicand+3,f
  1879     04F3  0B89               	decfsz	9,f
  1880     04F4  2CEF               	goto	u525
  1881     04F5                     l997:
  1882     04F5  3001               	movlw	1
  1883     04F6                     u535:
  1884     04F6  36F3               	lsrf	___lmul@multiplier+3,f
  1885     04F7  0CF2               	rrf	___lmul@multiplier+2,f
  1886     04F8  0CF1               	rrf	___lmul@multiplier+1,f
  1887     04F9  0CF0               	rrf	___lmul@multiplier,f
  1888     04FA  0B89               	decfsz	9,f
  1889     04FB  2CF6               	goto	u535
  1890     04FC  0873               	movf	___lmul@multiplier+3,w
  1891     04FD  0472               	iorwf	___lmul@multiplier+2,w
  1892     04FE  0471               	iorwf	___lmul@multiplier+1,w
  1893     04FF  0470               	iorwf	___lmul@multiplier,w
  1894     0500  1D03               	skipz
  1895     0501  2D03               	goto	u541
  1896     0502  2D04               	goto	u540
  1897     0503                     u541:
  1898     0503  2CE2               	goto	l991
  1899     0504                     u540:
  1900     0504                     l999:
  1901     0504  087B               	movf	___lmul@product+3,w
  1902     0505  00F3               	movwf	?___lmul+3
  1903     0506  087A               	movf	___lmul@product+2,w
  1904     0507  00F2               	movwf	?___lmul+2
  1905     0508  0879               	movf	___lmul@product+1,w
  1906     0509  00F1               	movwf	?___lmul+1
  1907     050A  0878               	movf	___lmul@product,w
  1908     050B  00F0               	movwf	?___lmul
  1909     050C                     l281:
  1910     050C  0008               	return
  1911     050D                     __end_of___lmul:
  1912                           
  1913                           	psect	text6
  1914     0609                     __ptext6:	
  1915 ;; *************** function ___llmod *****************
  1916 ;; Defined at:
  1917 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\llmod.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  divisor         4   13[BANK0 ] unsigned long 
  1920 ;;  dividend        4   17[BANK0 ] unsigned long 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  counter         1   21[BANK0 ] unsigned char 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  4   13[BANK0 ] unsigned long 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1932 ;;      Params:         0       8       0       0       0       0
  1933 ;;      Locals:         0       1       0       0       0       0
  1934 ;;      Temps:          1       0       0       0       0       0
  1935 ;;      Totals:         1       9       0       0       0       0
  1936 ;;Total ram usage:       10 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_mathBCD
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945     0609                     ___llmod:	
  1946                           ;psect for function ___llmod
  1947                           
  1948     0609                     l1027:	
  1949                           ;incstack = 0
  1950                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1951                           
  1952     0609  0020               	movlb	0	; select bank0
  1953     060A  0830               	movf	___llmod@divisor+3,w
  1954     060B  042F               	iorwf	___llmod@divisor+2,w
  1955     060C  042E               	iorwf	___llmod@divisor+1,w
  1956     060D  042D               	iorwf	___llmod@divisor,w
  1957     060E  1903               	skipnz
  1958     060F  2E11               	goto	u621
  1959     0610  2E12               	goto	u620
  1960     0611                     u621:
  1961     0611  2E4B               	goto	l1043
  1962     0612                     u620:
  1963     0612                     l1029:
  1964     0612  01B5               	clrf	___llmod@counter
  1965     0613  0AB5               	incf	___llmod@counter,f
  1966     0614  2E20               	goto	l1033
  1967     0615                     l1031:
  1968     0615  3001               	movlw	1
  1969     0616                     u635:
  1970     0616  35AD               	lslf	___llmod@divisor,f
  1971     0617  0DAE               	rlf	___llmod@divisor+1,f
  1972     0618  0DAF               	rlf	___llmod@divisor+2,f
  1973     0619  0DB0               	rlf	___llmod@divisor+3,f
  1974     061A  0B89               	decfsz	9,f
  1975     061B  2E16               	goto	u635
  1976     061C  3001               	movlw	1
  1977     061D  00FD               	movwf	??___llmod
  1978     061E  087D               	movf	??___llmod,w
  1979     061F  07B5               	addwf	___llmod@counter,f
  1980     0620                     l1033:
  1981     0620  1FB0               	btfss	___llmod@divisor+3,7
  1982     0621  2E23               	goto	u641
  1983     0622  2E24               	goto	u640
  1984     0623                     u641:
  1985     0623  2E15               	goto	l1031
  1986     0624                     u640:
  1987     0624                     l1035:
  1988     0624  0830               	movf	___llmod@divisor+3,w
  1989     0625  0234               	subwf	___llmod@dividend+3,w
  1990     0626  1D03               	skipz
  1991     0627  2E32               	goto	u655
  1992     0628  082F               	movf	___llmod@divisor+2,w
  1993     0629  0233               	subwf	___llmod@dividend+2,w
  1994     062A  1D03               	skipz
  1995     062B  2E32               	goto	u655
  1996     062C  082E               	movf	___llmod@divisor+1,w
  1997     062D  0232               	subwf	___llmod@dividend+1,w
  1998     062E  1D03               	skipz
  1999     062F  2E32               	goto	u655
  2000     0630  082D               	movf	___llmod@divisor,w
  2001     0631  0231               	subwf	___llmod@dividend,w
  2002     0632                     u655:
  2003     0632  1C03               	skipc
  2004     0633  2E35               	goto	u651
  2005     0634  2E36               	goto	u650
  2006     0635                     u651:
  2007     0635  2E3E               	goto	l1039
  2008     0636                     u650:
  2009     0636                     l1037:
  2010     0636  082D               	movf	___llmod@divisor,w
  2011     0637  02B1               	subwf	___llmod@dividend,f
  2012     0638  082E               	movf	___llmod@divisor+1,w
  2013     0639  3BB2               	subwfb	___llmod@dividend+1,f
  2014     063A  082F               	movf	___llmod@divisor+2,w
  2015     063B  3BB3               	subwfb	___llmod@dividend+2,f
  2016     063C  0830               	movf	___llmod@divisor+3,w
  2017     063D  3BB4               	subwfb	___llmod@dividend+3,f
  2018     063E                     l1039:
  2019     063E  3001               	movlw	1
  2020     063F                     u665:
  2021     063F  36B0               	lsrf	___llmod@divisor+3,f
  2022     0640  0CAF               	rrf	___llmod@divisor+2,f
  2023     0641  0CAE               	rrf	___llmod@divisor+1,f
  2024     0642  0CAD               	rrf	___llmod@divisor,f
  2025     0643  0B89               	decfsz	9,f
  2026     0644  2E3F               	goto	u665
  2027     0645                     l1041:
  2028     0645  3001               	movlw	1
  2029     0646  02B5               	subwf	___llmod@counter,f
  2030     0647  1D03               	btfss	3,2
  2031     0648  2E4A               	goto	u671
  2032     0649  2E4B               	goto	u670
  2033     064A                     u671:
  2034     064A  2E24               	goto	l1035
  2035     064B                     u670:
  2036     064B                     l1043:
  2037     064B  0834               	movf	___llmod@dividend+3,w
  2038     064C  00B0               	movwf	?___llmod+3
  2039     064D  0833               	movf	___llmod@dividend+2,w
  2040     064E  00AF               	movwf	?___llmod+2
  2041     064F  0832               	movf	___llmod@dividend+1,w
  2042     0650  00AE               	movwf	?___llmod+1
  2043     0651  0831               	movf	___llmod@dividend,w
  2044     0652  00AD               	movwf	?___llmod
  2045     0653                     l497:
  2046     0653  0008               	return
  2047     0654                     __end_of___llmod:
  2048                           
  2049                           	psect	text7
  2050     06AA                     __ptext7:	
  2051 ;; *************** function ___lldiv *****************
  2052 ;; Defined at:
  2053 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  divisor         4    0[BANK0 ] unsigned long 
  2056 ;;  dividend        4    4[BANK0 ] unsigned long 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  quotient        4    8[BANK0 ] unsigned long 
  2059 ;;  counter         1   12[BANK0 ] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  4    0[BANK0 ] unsigned long 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2069 ;;      Params:         0       8       0       0       0       0
  2070 ;;      Locals:         0       5       0       0       0       0
  2071 ;;      Temps:          1       0       0       0       0       0
  2072 ;;      Totals:         1      13       0       0       0       0
  2073 ;;Total ram usage:       14 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_mathBCD
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082     06AA                     ___lldiv:	
  2083                           ;psect for function ___lldiv
  2084                           
  2085     06AA                     l1003:	
  2086                           ;incstack = 0
  2087                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2088                           
  2089     06AA  3000               	movlw	0
  2090     06AB  0020               	movlb	0	; select bank0
  2091     06AC  00AB               	movwf	___lldiv@quotient+3
  2092     06AD  3000               	movlw	0
  2093     06AE  00AA               	movwf	___lldiv@quotient+2
  2094     06AF  3000               	movlw	0
  2095     06B0  00A9               	movwf	___lldiv@quotient+1
  2096     06B1  3000               	movlw	0
  2097     06B2  00A8               	movwf	___lldiv@quotient
  2098     06B3  0823               	movf	___lldiv@divisor+3,w
  2099     06B4  0422               	iorwf	___lldiv@divisor+2,w
  2100     06B5  0421               	iorwf	___lldiv@divisor+1,w
  2101     06B6  0420               	iorwf	___lldiv@divisor,w
  2102     06B7  1903               	skipnz
  2103     06B8  2EBA               	goto	u551
  2104     06B9  2EBB               	goto	u550
  2105     06BA                     u551:
  2106     06BA  2EFC               	goto	l1023
  2107     06BB                     u550:
  2108     06BB                     l1005:
  2109     06BB  01AC               	clrf	___lldiv@counter
  2110     06BC  0AAC               	incf	___lldiv@counter,f
  2111     06BD  2EC9               	goto	l1009
  2112     06BE                     l1007:
  2113     06BE  3001               	movlw	1
  2114     06BF                     u565:
  2115     06BF  35A0               	lslf	___lldiv@divisor,f
  2116     06C0  0DA1               	rlf	___lldiv@divisor+1,f
  2117     06C1  0DA2               	rlf	___lldiv@divisor+2,f
  2118     06C2  0DA3               	rlf	___lldiv@divisor+3,f
  2119     06C3  0B89               	decfsz	9,f
  2120     06C4  2EBF               	goto	u565
  2121     06C5  3001               	movlw	1
  2122     06C6  00FC               	movwf	??___lldiv
  2123     06C7  087C               	movf	??___lldiv,w
  2124     06C8  07AC               	addwf	___lldiv@counter,f
  2125     06C9                     l1009:
  2126     06C9  1FA3               	btfss	___lldiv@divisor+3,7
  2127     06CA  2ECC               	goto	u571
  2128     06CB  2ECD               	goto	u570
  2129     06CC                     u571:
  2130     06CC  2EBE               	goto	l1007
  2131     06CD                     u570:
  2132     06CD                     l1011:
  2133     06CD  3001               	movlw	1
  2134     06CE                     u585:
  2135     06CE  35A8               	lslf	___lldiv@quotient,f
  2136     06CF  0DA9               	rlf	___lldiv@quotient+1,f
  2137     06D0  0DAA               	rlf	___lldiv@quotient+2,f
  2138     06D1  0DAB               	rlf	___lldiv@quotient+3,f
  2139     06D2  0B89               	decfsz	9,f
  2140     06D3  2ECE               	goto	u585
  2141     06D4                     l1013:
  2142     06D4  0823               	movf	___lldiv@divisor+3,w
  2143     06D5  0227               	subwf	___lldiv@dividend+3,w
  2144     06D6  1D03               	skipz
  2145     06D7  2EE2               	goto	u595
  2146     06D8  0822               	movf	___lldiv@divisor+2,w
  2147     06D9  0226               	subwf	___lldiv@dividend+2,w
  2148     06DA  1D03               	skipz
  2149     06DB  2EE2               	goto	u595
  2150     06DC  0821               	movf	___lldiv@divisor+1,w
  2151     06DD  0225               	subwf	___lldiv@dividend+1,w
  2152     06DE  1D03               	skipz
  2153     06DF  2EE2               	goto	u595
  2154     06E0  0820               	movf	___lldiv@divisor,w
  2155     06E1  0224               	subwf	___lldiv@dividend,w
  2156     06E2                     u595:
  2157     06E2  1C03               	skipc
  2158     06E3  2EE5               	goto	u591
  2159     06E4  2EE6               	goto	u590
  2160     06E5                     u591:
  2161     06E5  2EEF               	goto	l1019
  2162     06E6                     u590:
  2163     06E6                     l1015:
  2164     06E6  0820               	movf	___lldiv@divisor,w
  2165     06E7  02A4               	subwf	___lldiv@dividend,f
  2166     06E8  0821               	movf	___lldiv@divisor+1,w
  2167     06E9  3BA5               	subwfb	___lldiv@dividend+1,f
  2168     06EA  0822               	movf	___lldiv@divisor+2,w
  2169     06EB  3BA6               	subwfb	___lldiv@dividend+2,f
  2170     06EC  0823               	movf	___lldiv@divisor+3,w
  2171     06ED  3BA7               	subwfb	___lldiv@dividend+3,f
  2172     06EE                     l1017:
  2173     06EE  1428               	bsf	___lldiv@quotient,0
  2174     06EF                     l1019:
  2175     06EF  3001               	movlw	1
  2176     06F0                     u605:
  2177     06F0  36A3               	lsrf	___lldiv@divisor+3,f
  2178     06F1  0CA2               	rrf	___lldiv@divisor+2,f
  2179     06F2  0CA1               	rrf	___lldiv@divisor+1,f
  2180     06F3  0CA0               	rrf	___lldiv@divisor,f
  2181     06F4  0B89               	decfsz	9,f
  2182     06F5  2EF0               	goto	u605
  2183     06F6                     l1021:
  2184     06F6  3001               	movlw	1
  2185     06F7  02AC               	subwf	___lldiv@counter,f
  2186     06F8  1D03               	btfss	3,2
  2187     06F9  2EFB               	goto	u611
  2188     06FA  2EFC               	goto	u610
  2189     06FB                     u611:
  2190     06FB  2ECD               	goto	l1011
  2191     06FC                     u610:
  2192     06FC                     l1023:
  2193     06FC  082B               	movf	___lldiv@quotient+3,w
  2194     06FD  00A3               	movwf	?___lldiv+3
  2195     06FE  082A               	movf	___lldiv@quotient+2,w
  2196     06FF  00A2               	movwf	?___lldiv+2
  2197     0700  0829               	movf	___lldiv@quotient+1,w
  2198     0701  00A1               	movwf	?___lldiv+1
  2199     0702  0828               	movf	___lldiv@quotient,w
  2200     0703  00A0               	movwf	?___lldiv
  2201     0704                     l303:
  2202     0704  0008               	return
  2203     0705                     __end_of___lldiv:
  2204                           
  2205                           	psect	text8
  2206     057D                     __ptext8:	
  2207 ;; *************** function _init_IO *****************
  2208 ;; Defined at:
  2209 ;;		line 4 in file "init.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, pclath, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2223 ;;      Params:         0       0       0       0       0       0
  2224 ;;      Locals:         0       0       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0       0
  2226 ;;      Totals:         0       0       0       0       0       0
  2227 ;;Total ram usage:        0 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 1
  2230 ;; This function calls:
  2231 ;;		_init_UART
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237     057D                     _init_IO:	
  2238                           ;psect for function _init_IO
  2239                           
  2240     057D                     l1047:	
  2241                           ;incstack = 0
  2242                           ; Regs used in _init_IO: [wreg+status,2+status,0+pclath+cstack]
  2243                           
  2244                           
  2245                           ;init.c: 7:     OSCCONbits.SCS = 0;
  2246     057D  30FC               	movlw	-4
  2247     057E  0021               	movlb	1	; select bank1
  2248     057F  0599               	andwf	25,f	;volatile
  2249                           
  2250                           ;init.c: 8:     OSCCONbits.IRCF = 0b1101;
  2251     0580  0819               	movf	25,w	;volatile
  2252     0581  3987               	andlw	-121
  2253     0582  3868               	iorlw	104
  2254     0583  0099               	movwf	25	;volatile
  2255     0584                     l1049:
  2256                           
  2257                           ;init.c: 14:     ANSELAbits.ANSA0 = 1;
  2258     0584  0023               	movlb	3	; select bank3
  2259     0585  140C               	bsf	12,0	;volatile
  2260     0586                     l1051:
  2261                           
  2262                           ;init.c: 15:     ANSELAbits.ANSA1 = 0;
  2263     0586  108C               	bcf	12,1	;volatile
  2264     0587                     l1053:
  2265                           
  2266                           ;init.c: 16:     ANSELAbits.ANSA2 = 0;
  2267     0587  110C               	bcf	12,2	;volatile
  2268     0588                     l1055:
  2269                           
  2270                           ;init.c: 17:     ANSELAbits.ANSA3 = 0;
  2271     0588  118C               	bcf	12,3	;volatile
  2272     0589                     l1057:
  2273                           
  2274                           ;init.c: 18:     ANSELAbits.ANSA4 = 0;
  2275     0589  120C               	bcf	12,4	;volatile
  2276     058A                     l1059:
  2277                           
  2278                           ;init.c: 21:     TRISAbits.TRISA0 = 1;
  2279     058A  0021               	movlb	1	; select bank1
  2280     058B  140C               	bsf	12,0	;volatile
  2281     058C                     l1061:
  2282                           
  2283                           ;init.c: 22:     TRISAbits.TRISA1 = 0;
  2284     058C  108C               	bcf	12,1	;volatile
  2285     058D                     l1063:
  2286                           
  2287                           ;init.c: 23:     TRISAbits.TRISA2 = 0;
  2288     058D  110C               	bcf	12,2	;volatile
  2289     058E                     l1065:
  2290                           
  2291                           ;init.c: 24:     TRISAbits.TRISA3 = 0;
  2292     058E  118C               	bcf	12,3	;volatile
  2293     058F                     l1067:
  2294                           
  2295                           ;init.c: 25:     TRISAbits.TRISA4 = 0;
  2296     058F  120C               	bcf	12,4	;volatile
  2297     0590                     l1069:
  2298                           
  2299                           ;init.c: 26:     TRISAbits.TRISA6 = 0;
  2300     0590  130C               	bcf	12,6	;volatile
  2301     0591                     l1071:
  2302                           
  2303                           ;init.c: 27:     TRISAbits.TRISA7 = 0;
  2304     0591  138C               	bcf	12,7	;volatile
  2305     0592                     l1073:
  2306                           
  2307                           ;init.c: 31:     ANSELBbits.ANSB1 = 0;
  2308     0592  0023               	movlb	3	; select bank3
  2309     0593  108D               	bcf	13,1	;volatile
  2310     0594                     l1075:
  2311                           
  2312                           ;init.c: 32:     ANSELBbits.ANSB2 = 0;
  2313     0594  110D               	bcf	13,2	;volatile
  2314     0595                     l1077:
  2315                           
  2316                           ;init.c: 33:     ANSELBbits.ANSB3 = 0;
  2317     0595  118D               	bcf	13,3	;volatile
  2318     0596                     l1079:
  2319                           
  2320                           ;init.c: 34:     ANSELBbits.ANSB4 = 0;
  2321     0596  120D               	bcf	13,4	;volatile
  2322     0597                     l1081:
  2323                           
  2324                           ;init.c: 35:     ANSELBbits.ANSB5 = 0;
  2325     0597  128D               	bcf	13,5	;volatile
  2326     0598                     l1083:
  2327                           
  2328                           ;init.c: 36:     ANSELBbits.ANSB6 = 0;
  2329     0598  130D               	bcf	13,6	;volatile
  2330     0599                     l1085:
  2331                           
  2332                           ;init.c: 37:     ANSELBbits.ANSB7 = 0;
  2333     0599  138D               	bcf	13,7	;volatile
  2334     059A                     l1087:
  2335                           
  2336                           ;init.c: 40:     TRISBbits.TRISB0 = 0;
  2337     059A  0021               	movlb	1	; select bank1
  2338     059B  100D               	bcf	13,0	;volatile
  2339     059C                     l1089:
  2340                           
  2341                           ;init.c: 41:     TRISBbits.TRISB1 = 1;
  2342     059C  148D               	bsf	13,1	;volatile
  2343     059D                     l1091:
  2344                           
  2345                           ;init.c: 42:     TRISBbits.TRISB2 = 0;
  2346     059D  110D               	bcf	13,2	;volatile
  2347     059E                     l1093:
  2348                           
  2349                           ;init.c: 43:     TRISBbits.TRISB3 = 0;
  2350     059E  118D               	bcf	13,3	;volatile
  2351     059F                     l1095:
  2352                           
  2353                           ;init.c: 44:     TRISBbits.TRISB4 = 0;
  2354     059F  120D               	bcf	13,4	;volatile
  2355     05A0                     l1097:
  2356                           
  2357                           ;init.c: 45:     TRISBbits.TRISB5 = 0;
  2358     05A0  128D               	bcf	13,5	;volatile
  2359     05A1                     l1099:
  2360                           
  2361                           ;init.c: 46:     TRISBbits.TRISB6 = 0;
  2362     05A1  130D               	bcf	13,6	;volatile
  2363     05A2                     l1101:
  2364                           
  2365                           ;init.c: 47:     TRISBbits.TRISB7 = 0;
  2366     05A2  138D               	bcf	13,7	;volatile
  2367     05A3                     l1103:
  2368                           
  2369                           ;init.c: 50:     ADCON0bits.ADON = 0;
  2370     05A3  101D               	bcf	29,0	;volatile
  2371     05A4                     l1105:
  2372                           
  2373                           ;init.c: 51:     FVRCONbits.FVREN = 1;
  2374     05A4  0022               	movlb	2	; select bank2
  2375     05A5  1797               	bsf	23,7	;volatile
  2376                           
  2377                           ;init.c: 52:     FVRCONbits.ADFVR = 0b11;
  2378     05A6  3003               	movlw	3
  2379     05A7  0497               	iorwf	23,f	;volatile
  2380                           
  2381                           ;init.c: 54:     ADCON1bits.ADCS = 0b001;
  2382     05A8  0021               	movlb	1	; select bank1
  2383     05A9  081E               	movf	30,w	;volatile
  2384     05AA  398F               	andlw	-113
  2385     05AB  3810               	iorlw	16
  2386     05AC  009E               	movwf	30	;volatile
  2387                           
  2388                           ;init.c: 55:     ADCON0bits.CHS = 0b00000;
  2389     05AD  3083               	movlw	-125
  2390     05AE  059D               	andwf	29,f	;volatile
  2391     05AF                     l1107:
  2392                           
  2393                           ;init.c: 56:     ADCON1bits.ADFM = 1;
  2394     05AF  179E               	bsf	30,7	;volatile
  2395     05B0                     l1109:
  2396                           
  2397                           ;init.c: 57:     ADCON1bits.ADNREF = 0;
  2398     05B0  111E               	bcf	30,2	;volatile
  2399                           
  2400                           ;init.c: 58:     ADCON1bits.ADPREF = 0b11;
  2401     05B1  3003               	movlw	3
  2402     05B2  049E               	iorwf	30,f	;volatile
  2403     05B3                     l1111:
  2404                           
  2405                           ;init.c: 62:     LATAbits.LATA1 = 1;
  2406     05B3  0022               	movlb	2	; select bank2
  2407     05B4  148C               	bsf	12,1	;volatile
  2408     05B5                     l1113:
  2409                           
  2410                           ;init.c: 63:     LATAbits.LATA2 = 1;
  2411     05B5  150C               	bsf	12,2	;volatile
  2412     05B6                     l1115:
  2413                           
  2414                           ;init.c: 64:     LATAbits.LATA3 = 1;
  2415     05B6  158C               	bsf	12,3	;volatile
  2416     05B7                     l1117:
  2417                           
  2418                           ;init.c: 65:     LATAbits.LATA4 = 0;
  2419     05B7  120C               	bcf	12,4	;volatile
  2420     05B8                     l1119:
  2421                           
  2422                           ;init.c: 66:     LATAbits.LATA6 = 0;
  2423     05B8  130C               	bcf	12,6	;volatile
  2424     05B9                     l1121:
  2425                           
  2426                           ;init.c: 67:     LATAbits.LATA7 = 0;
  2427     05B9  138C               	bcf	12,7	;volatile
  2428     05BA                     l1123:
  2429                           
  2430                           ;init.c: 68:     LATBbits.LATB0 = 0;
  2431     05BA  100D               	bcf	13,0	;volatile
  2432     05BB                     l1125:
  2433                           
  2434                           ;init.c: 69:     LATBbits.LATB3 = 0;
  2435     05BB  118D               	bcf	13,3	;volatile
  2436     05BC                     l1127:
  2437                           
  2438                           ;init.c: 70:     LATBbits.LATB4 = 0;
  2439     05BC  120D               	bcf	13,4	;volatile
  2440     05BD                     l1129:
  2441                           
  2442                           ;init.c: 71:     LATBbits.LATB5 = 0;
  2443     05BD  128D               	bcf	13,5	;volatile
  2444     05BE                     l1131:
  2445                           
  2446                           ;init.c: 73:     init_UART();
  2447     05BE  3184  2465  3185   	fcall	_init_UART
  2448     05C1                     l117:
  2449     05C1  0008               	return
  2450     05C2                     __end_of_init_IO:
  2451                           
  2452                           	psect	text9
  2453     0465                     __ptext9:	
  2454 ;; *************** function _init_UART *****************
  2455 ;; Defined at:
  2456 ;;		line 119 in file "funtions.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2470 ;;      Params:         0       0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0
  2473 ;;      Totals:         0       0       0       0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_init_IO
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483     0465                     _init_UART:	
  2484                           ;psect for function _init_UART
  2485                           
  2486     0465                     l981:	
  2487                           ;incstack = 0
  2488                           ; Regs used in _init_UART: [wreg]
  2489                           
  2490                           
  2491                           ;funtions.c: 120:     APFCON1bits.TXCKSEL = 0;
  2492     0465  0022               	movlb	2	; select bank2
  2493     0466  101E               	bcf	30,0	;volatile
  2494                           
  2495                           ;funtions.c: 121:     TXSTAbits.TRMT = 1;
  2496     0467  0023               	movlb	3	; select bank3
  2497     0468  149E               	bsf	30,1	;volatile
  2498                           
  2499                           ;funtions.c: 122:     TXSTAbits.TXEN = 1;
  2500     0469  169E               	bsf	30,5	;volatile
  2501                           
  2502                           ;funtions.c: 123:     BAUDCONbits.RCIDL = 1;
  2503     046A  171F               	bsf	31,6	;volatile
  2504                           
  2505                           ;funtions.c: 126:     TXSTAbits.SYNC = 0;
  2506     046B  121E               	bcf	30,4	;volatile
  2507                           
  2508                           ;funtions.c: 127:     TXSTAbits.TX9 = 0;
  2509     046C  131E               	bcf	30,6	;volatile
  2510                           
  2511                           ;funtions.c: 128:     TXSTAbits.BRGH = 1;
  2512     046D  151E               	bsf	30,2	;volatile
  2513     046E                     l983:
  2514                           
  2515                           ;funtions.c: 129:     SPBRG = 25;
  2516     046E  3019               	movlw	25
  2517     046F  009B               	movwf	27	;volatile
  2518     0470                     l985:
  2519                           
  2520                           ;funtions.c: 130:     RCSTAbits.SPEN = 1;
  2521     0470  179D               	bsf	29,7	;volatile
  2522     0471                     l75:
  2523     0471  0008               	return
  2524     0472                     __end_of_init_UART:
  2525                           
  2526                           	psect	text10
  2527     0494                     __ptext10:	
  2528 ;; *************** function _UART_print *****************
  2529 ;; Defined at:
  2530 ;;		line 147 in file "funtions.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  cadena          1    wreg     PTR unsigned char 
  2533 ;;		 -> ASCII_Con@r(4), 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  cadena          1    4[COMMON] PTR unsigned char 
  2536 ;;		 -> ASCII_Con@r(4), 
  2537 ;;  i               2    2[COMMON] int 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2547 ;;      Params:         0       0       0       0       0       0
  2548 ;;      Locals:         3       0       0       0       0       0
  2549 ;;      Temps:          1       0       0       0       0       0
  2550 ;;      Totals:         4       0       0       0       0       0
  2551 ;;Total ram usage:        4 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 1
  2554 ;; This function calls:
  2555 ;;		_UART_write
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561     0494                     _UART_print:	
  2562                           ;psect for function _UART_print
  2563                           
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _UART_print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2567                           ;UART_print@cadena stored from wreg
  2568     0494  00F4               	movwf	UART_print@cadena
  2569     0495                     l1169:
  2570                           
  2571                           ;funtions.c: 148:     int i = 0;
  2572     0495  01F2               	clrf	UART_print@i
  2573     0496  01F3               	clrf	UART_print@i+1
  2574                           
  2575                           ;funtions.c: 149:     while (i < 4) {
  2576     0497  2CA7               	goto	l1177
  2577     0498                     l1171:
  2578                           
  2579                           ;funtions.c: 150:         UART_write(*cadena);
  2580     0498  0874               	movf	UART_print@cadena,w
  2581     0499  0086               	movwf	6
  2582     049A  0187               	clrf	7
  2583     049B  0801               	movf	1,w
  2584     049C  3184  245C  3184   	fcall	_UART_write
  2585     049F                     l1173:
  2586                           
  2587                           ;funtions.c: 151:         cadena++;
  2588     049F  3001               	movlw	1
  2589     04A0  00F1               	movwf	??_UART_print
  2590     04A1  0871               	movf	??_UART_print,w
  2591     04A2  07F4               	addwf	UART_print@cadena,f
  2592     04A3                     l1175:
  2593                           
  2594                           ;funtions.c: 152:         i++;
  2595     04A3  3001               	movlw	1
  2596     04A4  07F2               	addwf	UART_print@i,f
  2597     04A5  3000               	movlw	0
  2598     04A6  3DF3               	addwfc	UART_print@i+1,f
  2599     04A7                     l1177:
  2600                           
  2601                           ;funtions.c: 149:     while (i < 4) {
  2602     04A7  0873               	movf	UART_print@i+1,w
  2603     04A8  3A80               	xorlw	128
  2604     04A9  00F1               	movwf	??_UART_print
  2605     04AA  3080               	movlw	128
  2606     04AB  0271               	subwf	??_UART_print,w
  2607     04AC  1D03               	skipz
  2608     04AD  2CB0               	goto	u735
  2609     04AE  3004               	movlw	4
  2610     04AF  0272               	subwf	UART_print@i,w
  2611     04B0                     u735:
  2612     04B0  1C03               	skipc
  2613     04B1  2CB3               	goto	u731
  2614     04B2  2CB4               	goto	u730
  2615     04B3                     u731:
  2616     04B3  2C98               	goto	l1171
  2617     04B4                     u730:
  2618     04B4                     l87:
  2619     04B4  0008               	return
  2620     04B5                     __end_of_UART_print:
  2621                           
  2622                           	psect	text11
  2623     045C                     __ptext11:	
  2624 ;; *************** function _UART_write *****************
  2625 ;; Defined at:
  2626 ;;		line 138 in file "funtions.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  c               1    wreg     unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  c               1    0[COMMON] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2640 ;;      Params:         0       0       0       0       0       0
  2641 ;;      Locals:         1       0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0
  2643 ;;      Totals:         1       0       0       0       0       0
  2644 ;;Total ram usage:        1 bytes
  2645 ;; Hardware stack levels used: 1
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_UART_print
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653     045C                     _UART_write:	
  2654                           ;psect for function _UART_write
  2655                           
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in _UART_write: [wreg]
  2659                           ;UART_write@c stored from wreg
  2660     045C  00F0               	movwf	UART_write@c
  2661     045D                     l987:
  2662                           
  2663                           ;funtions.c: 139:     TXREG = c;
  2664     045D  0870               	movf	UART_write@c,w
  2665     045E  0023               	movlb	3	; select bank3
  2666     045F  009A               	movwf	26	;volatile
  2667     0460                     l78:	
  2668                           ;funtions.c: 140:     while (TXSTAbits.TRMT == 0);
  2669                           
  2670     0460  1C9E               	btfss	30,1	;volatile
  2671     0461  2C63               	goto	u501
  2672     0462  2C64               	goto	u500
  2673     0463                     u501:
  2674     0463  2C60               	goto	l78
  2675     0464                     u500:
  2676     0464                     l81:
  2677     0464  0008               	return
  2678     0465                     __end_of_UART_write:
  2679                           
  2680                           	psect	text12
  2681     050D                     __ptext12:	
  2682 ;; *************** function _Matematicas_7seg *****************
  2683 ;; Defined at:
  2684 ;;		line 30 in file "funtions.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  iBCD            1    wreg     PTR const unsigned short
  2687 ;;		 -> mathBCD@r(6), NULL(0), 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  iBCD            1   20[BANK0 ] PTR const unsigned short
  2690 ;;		 -> mathBCD@r(6), NULL(0), 
  2691 ;;  numbers        20    0[BANK0 ] unsigned short [10]
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      PTR unsigned short 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2701 ;;      Params:         0       0       0       0       0       0
  2702 ;;      Locals:         0      21       0       0       0       0
  2703 ;;      Temps:          1       0       0       0       0       0
  2704 ;;      Totals:         1      21       0       0       0       0
  2705 ;;Total ram usage:       22 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714     050D                     _Matematicas_7seg:	
  2715                           ;psect for function _Matematicas_7seg
  2716                           
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in _Matematicas_7seg: [wreg-fsr1h+status,2+status,0]
  2720                           ;Matematicas_7seg@iBCD stored from wreg
  2721     050D  0020               	movlb	0	; select bank0
  2722     050E  00B4               	movwf	Matematicas_7seg@iBCD
  2723     050F                     l1149:
  2724                           
  2725                           ;funtions.c: 32:     unsigned short numbers[10] = {
  2726     050F  3048               	movlw	low Matematicas_7seg@F2503
  2727     0510  0086               	movwf	6
  2728     0511  3000               	movlw	high Matematicas_7seg@F2503
  2729     0512  0087               	movwf	7
  2730     0513  3020               	movlw	low Matematicas_7seg@numbers
  2731     0514  0084               	movwf	4
  2732     0515  3000               	movlw	high Matematicas_7seg@numbers
  2733     0516  0085               	movwf	5
  2734     0517  3014               	movlw	20
  2735     0518  00F0               	movwf	??_Matematicas_7seg
  2736     0519                     u720:
  2737     0519  0016               	moviw fsr1++
  2738     051A  001A               	movwi fsr0++
  2739     051B  0BF0               	decfsz	??_Matematicas_7seg,f
  2740     051C  2D19               	goto	u720
  2741     051D                     l1151:
  2742                           
  2743                           ;funtions.c: 46:     static unsigned short r[3];;funtions.c: 47:     r[0] = numbers[iBCD
      +                          [0]];
  2744     051D  0834               	movf	Matematicas_7seg@iBCD,w
  2745     051E  0086               	movwf	6
  2746     051F  0187               	clrf	7
  2747     0520  3501               	lslf	1,w
  2748     0521  3E20               	addlw	(low (Matematicas_7seg@numbers| 0))& (0+255)
  2749     0522  0086               	movwf	6
  2750     0523  0187               	clrf	7
  2751     0524  3F40               	moviw [0]fsr1
  2752     0525  00DC               	movwf	Matematicas_7seg@r
  2753     0526  3F41               	moviw [1]fsr1
  2754     0527  00DD               	movwf	Matematicas_7seg@r+1
  2755     0528                     l1153:
  2756                           
  2757                           ;funtions.c: 48:     r[1] = numbers[iBCD[1]];
  2758     0528  0834               	movf	Matematicas_7seg@iBCD,w
  2759     0529  3E02               	addlw	2
  2760     052A  0086               	movwf	6
  2761     052B  0187               	clrf	7
  2762     052C  3501               	lslf	1,w
  2763     052D  3E20               	addlw	(low (Matematicas_7seg@numbers| 0))& (0+255)
  2764     052E  0086               	movwf	6
  2765     052F  0187               	clrf	7
  2766     0530  3F40               	moviw [0]fsr1
  2767     0531  00DE               	movwf	Matematicas_7seg@r+2
  2768     0532  3F41               	moviw [1]fsr1
  2769     0533  00DF               	movwf	Matematicas_7seg@r+3
  2770     0534                     l1155:
  2771                           
  2772                           ;funtions.c: 49:     r[2] = numbers[iBCD[2]];
  2773     0534  0834               	movf	Matematicas_7seg@iBCD,w
  2774     0535  3E04               	addlw	4
  2775     0536  0086               	movwf	6
  2776     0537  0187               	clrf	7
  2777     0538  3501               	lslf	1,w
  2778     0539  3E20               	addlw	(low (Matematicas_7seg@numbers| 0))& (0+255)
  2779     053A  0086               	movwf	6
  2780     053B  0187               	clrf	7
  2781     053C  3F40               	moviw [0]fsr1
  2782     053D  00E0               	movwf	Matematicas_7seg@r+4
  2783     053E  3F41               	moviw [1]fsr1
  2784     053F  00E1               	movwf	Matematicas_7seg@r+5
  2785     0540                     l1157:
  2786                           
  2787                           ;funtions.c: 51:     return r;
  2788     0540  305C               	movlw	(low (Matematicas_7seg@r| 0))& (0+255)
  2789     0541                     l58:
  2790     0541  0008               	return
  2791     0542                     __end_of_Matematicas_7seg:
  2792                           
  2793                           	psect	text13
  2794     0472                     __ptext13:	
  2795 ;; *************** function _ASCII_Con *****************
  2796 ;; Defined at:
  2797 ;;		line 164 in file "funtions.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  a               2    0[COMMON] unsigned short 
  2800 ;;  b               2    2[COMMON] unsigned short 
  2801 ;;  c               2    4[COMMON] unsigned short 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      PTR unsigned char 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2813 ;;      Params:         6       0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0
  2816 ;;      Totals:         6       0       0       0       0       0
  2817 ;;Total ram usage:        6 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826     0472                     _ASCII_Con:	
  2827                           ;psect for function _ASCII_Con
  2828                           
  2829     0472                     l1161:	
  2830                           ;incstack = 0
  2831                           ; Regs used in _ASCII_Con: [wreg+status,2+status,0]
  2832                           
  2833                           
  2834                           ;funtions.c: 165:     static unsigned char r[4];;funtions.c: 166:     r[0] = (char)(a + 
      +                          48);
  2835     0472  0870               	movf	ASCII_Con@a,w
  2836     0473  3E30               	addlw	48
  2837     0474  0020               	movlb	0	; select bank0
  2838     0475  00E8               	movwf	ASCII_Con@r
  2839                           
  2840                           ;funtions.c: 167:     r[1] = (char)(b + 48);
  2841     0476  0872               	movf	ASCII_Con@b,w
  2842     0477  3E30               	addlw	48
  2843     0478  00E9               	movwf	ASCII_Con@r+1
  2844                           
  2845                           ;funtions.c: 168:     r[2] = (char)(c + 48);
  2846     0479  0874               	movf	ASCII_Con@c,w
  2847     047A  3E30               	addlw	48
  2848     047B  00EA               	movwf	ASCII_Con@r+2
  2849     047C                     l1163:
  2850                           
  2851                           ;funtions.c: 169:     r[3] = '\n';
  2852     047C  300A               	movlw	10
  2853     047D  00EB               	movwf	ASCII_Con@r+3
  2854     047E                     l1165:
  2855                           
  2856                           ;funtions.c: 171:     return r;
  2857     047E  3068               	movlw	(low (ASCII_Con@r| 0))& (0+255)
  2858     047F                     l92:
  2859     047F  0008               	return
  2860     0480                     __end_of_ASCII_Con:
  2861     007E                     btemp	set	126	;btemp
  2862     007E                     wtemp0	set	126
  2863                           
  2864                           	psect	idloc
  2865                           
  2866                           ;Config register IDLOC0 @ 0x8000
  2867                           ;	unspecified, using default values
  2868     8000                     	org	32768
  2869     8000  3FFF               	dw	16383
  2870                           
  2871                           ;Config register IDLOC1 @ 0x8001
  2872                           ;	unspecified, using default values
  2873     8001                     	org	32769
  2874     8001  3FFF               	dw	16383
  2875                           
  2876                           ;Config register IDLOC2 @ 0x8002
  2877                           ;	unspecified, using default values
  2878     8002                     	org	32770
  2879     8002  3FFF               	dw	16383
  2880                           
  2881                           ;Config register IDLOC3 @ 0x8003
  2882                           ;	unspecified, using default values
  2883     8003                     	org	32771
  2884     8003  3FFF               	dw	16383
  2885                           
  2886                           	psect	config
  2887                           
  2888                           ;Config register CONFIG1 @ 0x8007
  2889                           ;	Oscillator Selection
  2890                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2891                           ;	Watchdog Timer Enable
  2892                           ;	WDTE = OFF, WDT disabled
  2893                           ;	Power-up Timer Enable
  2894                           ;	PWRTE = OFF, PWRT disabled
  2895                           ;	MCLR Pin Function Select
  2896                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2897                           ;	Flash Program Memory Code Protection
  2898                           ;	CP = OFF, Program memory code protection is disabled
  2899                           ;	Data Memory Code Protection
  2900                           ;	CPD = OFF, Data memory code protection is disabled
  2901                           ;	Brown-out Reset Enable
  2902                           ;	BOREN = ON, Brown-out Reset enabled
  2903                           ;	Clock Out Enable
  2904                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2905                           ;	Internal/External Switchover
  2906                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2907                           ;	Fail-Safe Clock Monitor Enable
  2908                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2909     8007                     	org	32775
  2910     8007  3FE4               	dw	16356
  2911                           
  2912                           ;Config register CONFIG2 @ 0x8008
  2913                           ;	Flash Memory Self-Write Protection
  2914                           ;	WRT = OFF, Write protection off
  2915                           ;	PLL Enable
  2916                           ;	PLLEN = OFF, 4x PLL disabled
  2917                           ;	Stack Overflow/Underflow Reset Enable
  2918                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2919                           ;	Brown-out Reset Voltage Selection
  2920                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2921                           ;	Low-Voltage Programming Enable
  2922                           ;	LVP = ON, Low-voltage programming enabled
  2923     8008                     	org	32776
  2924     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         16
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      76
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    UART_print@cadena	PTR unsigned char  size(1) Largest target is 4
		 -> ASCII_Con@r(BANK0[4]), 

    showNumbers@digits	PTR unsigned short  size(1) Largest target is 6
		 -> Matematicas_7seg@r(BANK0[6]), NULL(NULL[0]), 

    Matematicas_7seg@iBCD	PTR const unsigned short  size(1) Largest target is 6
		 -> mathBCD@r(BANK0[6]), NULL(NULL[0]), 

    sp__ASCII_Con	PTR unsigned char  size(1) Largest target is 4
		 -> ASCII_Con@r(BANK0[4]), 

    sp__Matematicas_7seg	PTR unsigned short  size(1) Largest target is 6
		 -> Matematicas_7seg@r(BANK0[6]), 

    sp__mathBCD	PTR unsigned short  size(1) Largest target is 6
		 -> mathBCD@r(BANK0[6]), 

    main@formato7segmentos	PTR unsigned short  size(1) Largest target is 6
		 -> Matematicas_7seg@r(BANK0[6]), NULL(NULL[0]), 

    main@numerosBCD	PTR unsigned short  size(1) Largest target is 6
		 -> mathBCD@r(BANK0[6]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _showNumbers->_showNumber
    _mathBCD->___llmod
    ___llmod->___lldiv
    ___lldiv->___lmul
    _UART_print->_UART_write

Critical Paths under _main in BANK0

    _main->_mathBCD
    _mathBCD->___llmod
    ___llmod->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3047
                                             34 BANK0      6     6      0
                          _ASCII_Con
                   _Matematicas_7seg
                         _UART_print
                            _init_IO
                            _mathBCD
                            _readADC
                        _showNumbers
 ---------------------------------------------------------------------------------
 (1) _showNumbers                                          4     4      0     527
                                              3 COMMON     4     4      0
                         _showNumber
 ---------------------------------------------------------------------------------
 (2) _showNumber                                           3     1      2     382
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _readADC                                             13     9      4      23
                                              0 COMMON    13     9      4
 ---------------------------------------------------------------------------------
 (1) _mathBCD                                             12     8      4    1794
                                             22 BANK0     12     8      4
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     548
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     463
                                             13 COMMON     1     1      0
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_print                                           4     4      0     102
                                              1 COMMON     4     4      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Matematicas_7seg                                    22    22      0     169
                                              0 COMMON     1     1      0
                                              0 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (1) _ASCII_Con                                            6     0      6     294
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ASCII_Con
   _Matematicas_7seg
   _UART_print
     _UART_write
   _init_IO
     _init_UART
   _mathBCD
     ___lldiv
       ___lmul (ARG)
     ___llmod
       ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul
   _readADC
   _showNumbers
     _showNumber

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      5A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 01 10:29:49 2023

                      l51 07E8                        l61 057C                        l72 04D9  
                      l81 0464                        l58 0541                        l66 06A9  
                      l75 0471                        l92 047F                        l69 04B8  
                      l78 0460                        l87 04B4                       l117 05C1  
                     l303 0704                       l281 050C                       l497 0653  
                     l981 0465                       l983 046E                       l991 04E2  
                     l985 0470                       l993 04E6                       l977 0542  
                     l987 045D                       l995 04EE                       l979 0572  
                     l997 04F5                       l989 04DA                       l999 0504  
                     u400 0550                       u401 054D                       u500 0464  
                     u420 0558                       u501 0463                       u421 0555  
                     u510 04E6                       u414 0552                       u511 04E5  
                     u440 0560                       u441 055D                       u610 06FC  
                     u434 055A                       u611 06FB                       u620 0612  
                     u540 0504                       u700 0772                       u460 0568  
                     u380 0548                       u605 06F0                       u621 0611  
                     u541 0503                       u525 04EF                       u461 0565  
                     u381 0545                       u550 06BB                       u710 07B9  
                     u454 0562                       u551 06BA                       u535 04F6  
                     u720 0519                       u640 0624                       u480 0570  
                     u641 0623                       u705 076E                       u481 056D  
                     u730 04B4                       u570 06CD                       u650 0636  
                     u474 056A                       u394 054A                       u731 04B3  
                     u571 06CC                       u651 0635                       u635 0616  
                     u715 07B5                       u740 06A9                       u565 06BF  
                     u741 06A8                       u590 06E6                       u670 064B  
                     u494 0572                       u735 04B0                       u591 06E5  
                     u671 064A                       u655 0632                       u680 04BC  
                     u585 06CE                       u665 063F                       u681 04BB  
                     u745 06A5                       u690 072F                       u595 06E2  
                     u757 0666                       u695 072B                       u767 067C  
                     u777 0692                       wreg 0009               main@dataADC 0042  
             mathBCD@iADC 0036                      l1011 06CD                      l1003 06AA  
                    l1101 05A2                      l1021 06F6                      l1013 06D4  
                    l1005 06BB                      l1111 05B3                      l1103 05A3  
                    l1015 06E6                      l1007 06BE                      l1023 06FC  
                    l1031 0615                      l1121 05B9                      l1113 05B5  
                    l1105 05A4                      l1017 06EE                      l1009 06C9  
                    l1041 0645                      l1033 0620                      l1201 068D  
                    l1131 05BE                      l1123 05BA                      l1115 05B6  
                    l1107 05AF                      l1051 0586                      l1019 06EF  
                    l1035 0624                      l1043 064B                      l1027 0609  
                    l1203 068F                      l1211 05C2                      l1125 05BB  
                    l1117 05B7                      l1109 05B0                      l1061 058C  
                    l1053 0587                      l1037 0636                      l1029 0612  
                    l1133 04B5                      l1205 0696                      l1221 05D1  
                    l1213 05C5                      l1151 051D                      l1127 05BC  
                    l1119 05B8                      l1071 0591                      l1063 058D  
                    l1055 0588                      l1047 057D                      l1039 063E  
                    l1143 0705                      l1135 04BC                      l1207 0698  
                    l1223 05DE                      l1215 05C5                      l1161 0472  
                    l1153 0528                      l1129 05BD                      l1081 0597  
                    l1073 0592                      l1065 058E                      l1057 0589  
                    l1049 0584                      l1145 07E7                      l1137 04D0  
                    l1209 069C                      l1225 05E4                      l1217 05C5  
                    l1163 047C                      l1155 0534                      l1171 0498  
                    l1091 059D                      l1083 0598                      l1075 0594  
                    l1067 058F                      l1059 058A                      l1139 04D1  
                    l1227 0601                      l1219 05C5                      l1165 047E  
                    l1157 0540                      l1149 050F                      l1173 049F  
                    l1093 059E                      l1085 0599                      l1077 0595  
                    l1069 0590                      l1175 04A3                      l1095 059F  
                    l1087 059A                      l1079 0596                      l1191 066A  
                    l1177 04A7                      l1169 0495                      l1097 05A0  
                    l1089 059C                      l1193 066C                      l1185 0657  
                    l1099 05A1                      l1195 0677                      l1187 0661  
                    l1179 0655                      l1197 0680                      l1189 0663  
                    l1199 0682                      _main 05C2                      fsr0h 0005  
                    fsr1h 0007                      indf0 0000                      fsr0l 0004  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
                    start 0002                     ?_main 0070           __end_of___lldiv 0705  
         __end_of___llmod 0654                     _SPBRG 019B                     _TXREG 019A  
     ___lmul@multiplicand 0074           __end_of_mathBCD 07E9           __end_of_readADC 04DA  
         __end_of_init_IO 05C2               ?_UART_print 0070               ?_UART_write 0070  
                   status 0003                     wtemp0 007E         __end_of_ASCII_Con 0480  
       ?_Matematicas_7seg 0070           __initialization 07E9              __end_of_main 0609  
      ??_Matematicas_7seg 0070                    ??_main 007E          ___llmod@dividend 0031  
                  _ADRESH 009C                    _ADRESL 009B     Matematicas_7seg@F2503 0048  
                  ___lmul 04DA                 ??___lldiv 007C                 ??___llmod 007D  
               ??_mathBCD 003A                 ??_readADC 0074                 ??_init_IO 0070  
            ?_showNumbers 0070   __end_of__initialization 07FD            __pcstackCOMMON 0070  
            __pidataBANK0 0480                __pbssBANK0 005C                __pmaintext 05C2  
                 ?___lmul 0070            ___lmul@product 0078              ??_UART_print 0071  
            ??_UART_write 0070                 _ASCII_Con 0472                   ___lldiv 06AA  
                 ___llmod 0609                ASCII_Con@a 0070                ASCII_Con@b 0072  
              ASCII_Con@c 0074                ASCII_Con@r 0068        __end_of_UART_print 04B5  
      __end_of_UART_write 0465                   __ptext1 0654                   __ptext2 0542  
                 __ptext3 04B5                   __ptext4 0705                   __ptext5 04DA  
                 __ptext6 0609                   __ptext7 06AA                   __ptext8 057D  
                 __ptext9 0465         __end_of_init_UART 0472                   _mathBCD 0705  
                 _readADC 04B5                   _init_IO 057D                   clrloop0 0451  
    end_of_initialization 07FD                   init_ram 0456            main@numerosBCD 0047  
                 initloop 0457              _mathBCD$1209 003E           ___lldiv@divisor 0020  
             UART_print@i 0072           ___lldiv@counter 002C                 _RCSTAbits 019D  
             UART_write@c 0070                ?_ASCII_Con 0070                _showNumber 0542  
               _TRISAbits 008C                 _TRISBbits 008D                 _TXSTAbits 019E  
          __end_of___lmul 050D               _BAUDCONbits 019F       start_initialization 07E9  
   main@formato7segmentos 0046           ___llmod@divisor 002D           ___llmod@counter 0035  
             _APFCON1bits 011E      Matematicas_7seg@iBCD 0034                  ??___lmul 0078  
             ??_ASCII_Con 0076               __pdataBANK0 0048               ?_showNumber 0070  
        _Matematicas_7seg 050D                 ___latbits 0001             __pcstackBANK0 0020  
                ?___lldiv 0020                  ?___llmod 002D                  ?_mathBCD 0036  
                ?_readADC 0070                  ?_init_IO 0070                 _init_UART 0465  
                _LATAbits 010C                  _LATBbits 010D                 clear_ram0 0450  
              _ADCON0bits 009D                _ADCON1bits 009E             ??_showNumbers 0073  
              ?_init_UART 0070         ___lmul@multiplier 0070         showNumbers@digits 0076  
        UART_print@cadena 0074                _ANSELAbits 018C                _ANSELBbits 018D  
       Matematicas_7seg@r 005C                  __ptext10 0494                  __ptext11 045C  
                __ptext12 050D                  __ptext13 0472       __end_of_showNumbers 06AA  
 Matematicas_7seg@numbers 0020  __end_of_Matematicas_7seg 0542                  mathBCD@r 0062  
            ??_showNumber 0072                  readADC@r 0079                _FVRCONbits 0117  
             ??_init_UART 0070          ___lldiv@dividend 0024        __end_of_showNumber 057D  
              _OSCCONbits 0099           showNumber@digit 0070          ___lldiv@quotient 0028  
             _showNumbers 0654                _UART_print 0494                _UART_write 045C  
            showNumbers@i 0074  
